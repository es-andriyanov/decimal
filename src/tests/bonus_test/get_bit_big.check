#suite get_bit_big_test

#test get_bit_big_1
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000}};
  int num = 0;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, 1);

#test get_bit_big_2
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000}};
  int num = 1;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, 0);

#test get_bit_big_3
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000}};
  int num = 48;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, 0);

#test get_bit_big_4
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000}};
  int num = 49;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, 1);

#test get_bit_big_5
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000}};
  int num = -1;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, -1);

#test get_bit_big_6
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000}};
  int num = 192;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, -1);

#test get_bit_big_7
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b10000000000011100000000000000000}};
  int num = 191;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, 1);

#test get_bit_big_8
  BIG_decimal test = {{(int)0b00000000000000000000000000000001,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b00000000000011100000000000000000,
                       (int)0b10000000000011100000000000000000}};
  int num = 190;
  int returned = get_bit_big(test, num);
  ck_assert_int_eq(returned, 0);