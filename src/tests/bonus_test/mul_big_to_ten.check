#suite mul_big_to_ten_test

#test mul_big_to_ten_1
  BIG_decimal test = {{(int)0b00000000000000000000000000000001, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000}};
  int returned = mul_big_to_ten(&test);
  ck_assert_int_eq(returned, 0);
  ck_assert_int_eq(test.bits[0], (int)0b00000000000000000000000000001010);
  ck_assert_int_eq(test.bits[1], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[2], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[3], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[4], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[5], (int)0b00000000000000000000000000000000);

#test mul_big_to_ten_2
  BIG_decimal test = {{(int)0b11111111111111111111111111111111, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000}};
  int returned = mul_big_to_ten(&test);
  ck_assert_int_eq(returned, 0);
  ck_assert_int_eq(test.bits[0], (int)0b11111111111111111111111111110110);
  ck_assert_int_eq(test.bits[1], (int)0b00000000000000000000000000001001);
  ck_assert_int_eq(test.bits[2], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[3], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[4], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[5], (int)0b00000000000000000000000000000000);

#test mul_big_to_ten_3
  BIG_decimal test = {{(int)0b00000000000000000000000000000001, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b00000000000000000000000000000000, (int)0b11111111111111111111111111111111}};
  int returned = mul_big_to_ten(&test);
  ck_assert_int_eq(returned, 1);
  ck_assert_int_eq(test.bits[0], (int)0b00000000000000000000000000000001);
  ck_assert_int_eq(test.bits[1], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[2], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[3], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[4], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(test.bits[5], (int)0b11111111111111111111111111111111);