#suite mul_big_test

#test mul_big_1
  BIG_decimal test1 = {{(int)0b00000000000000000000000000000001,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000}};

  BIG_decimal test2 = {{(int)0b00000000000000000000000000000001,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000}};

  BIG_decimal res = {{0, 0, 0, 0, 0, 0}};
  int returned = mul_big(test1, test2, &res);
  ck_assert_int_eq(returned, 0);
  ck_assert_int_eq(res.bits[0], (int)0b00000000000000000000000000000001);
  ck_assert_int_eq(res.bits[1], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[2], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[3], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[4], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[5], (int)0b00000000000000000000000000000000);

#test mul_big_2
  BIG_decimal test1 = {{(int)0b10000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000}};

  BIG_decimal test2 = {{(int)0b00000000000000000000000000000011,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000,
                        (int)0b00000000000000000000000000000000}};

  BIG_decimal res = {{0, 0, 0, 0, 0, 0}};
  int returned = mul_big(test1, test2, &res);
  ck_assert_int_eq(returned, 0);
  ck_assert_int_eq(res.bits[0], (int)0b10000000000000000000000000000000);
  ck_assert_int_eq(res.bits[1], (int)0b00000000000000000000000000000001);
  ck_assert_int_eq(res.bits[2], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[3], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[4], (int)0b00000000000000000000000000000000);
  ck_assert_int_eq(res.bits[5], (int)0b00000000000000000000000000000000);