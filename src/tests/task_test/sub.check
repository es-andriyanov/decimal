#suite sub_test

#test sub_1
  //                            553402.32229718589441
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_2
  //                            553402.32229718589441
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                           1106804.64459437178882
  //                           {{2, 4, 6, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_3
  //                            553402.32229718589441
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            553457.662529407031654782625
  //                            {{10000033, 20000002, 30003000, 1376256}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30003000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_4
  //                            553402.32229718589441
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                            553402.266956953243784615542
  //                            {{9999990, 19999900, 29999997, 1376256}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], 19999900);
  ck_assert_int_eq(res.bits[2], 29999997);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_5
  //                            553402.32229718589441
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -4980620.94276535255199
  //                          {{159, 998, 27, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 998);
  ck_assert_int_eq(res.bits[2], 27);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_6
  //                            553402.32229718589441
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            553465.64129962122895217608892
  //                            {{1000032444, 2000000100, -1294624043, 1507328}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 2000000100);
  ck_assert_int_eq(res.bits[2], -1294624043);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_7
  //                            553402.32229718589441
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                            368934.88151714070528
  //                            {{0, 1, 2, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_8
  //                            553402.32229718589441
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_9
  //                            553402.32229718589441
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_10
  //                            553402.32229718589441
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407799898488.9777028141
  //              {{188251181, 998711510, 1000000000, -2146828288}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_11
  //                            553402.32229718589441
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844121005.47815470540559
  //                       {{9999, 9998, 9997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_12
  //                            553402.32229718589441
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407801005295.9222971859
  //               {{-958054957, 1001288495, 1000000000, 655360}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -958054957);
  ck_assert_int_eq(res.bits[1], 1001288495);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_13
  //                            553402.32229718589441
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844121011.49110891980559
  //                       {{9999, 149998, 9997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 149998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_14
  //                            553402.32229718589441
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407801005293.6222971859
  //               {{1811748819, 1001288490, 1000000000, 655360}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_15
  //                            553402.32229718589441
  // -                               0.0000000001
  //   ------------------------------------------------
  //                            553402.32229718579441
  //                            {{-9999, 1, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_16
  //                            553402.32229718589441
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                            553402.32229718599441
  //                            {{10001, 2, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_17
  //                            553402.32229718589441
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                            368934.88156009037824
  //                            {{0, 2, 2, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_18
  //                            553402.32229718589441
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            534955.578219181375497
  //                            {{9, 19, 29, 983040}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_19
  //                            553402.32229718589441
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                            571849.066413845118987
  //                            {{11, 30, 31, 983040}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_20
  //                            553402.32229718589441
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                            571849.066375190413323
  //                            {{11, 21, 31, 983040}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_21
  //                            553402.32229718589441
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1845227810.12274907719441
  //                        {{10001, 10002, 10003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_22
  //                            553402.32229718589441
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222972412346.4222971859
  //               {{1811748819, 2001288490, -1294967296, 655360}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_23
  //                            553402.32229718589441
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1845227810.55224580699441
  //                        {{30001, 20002, 10003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_24
  //                            553402.32229718589441
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5533469820.64956175820559
  //                       {{9999, 19998, 29997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_25
  //                            553402.32229718589441
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534576625.29415612999441
  //                        {{10001, 20002, 30003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_26
  //                            553402.32229718589441
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467994225.31715929589441
  //                      {{3000001, 2000002, 1000003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_27
  //                            553402.32229718589441
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                           1106804.64459437178891
  //                           {{11, 4, 6, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_28
  //                            553402.32229718589441
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184466887420.67256492410559
  //                     {{2999999, 1999998, 999997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_29
  //                            553402.32229718589441
  // -                              10
  //   ------------------------------------------------
  //                            553392.32229718589441
  //                            {{1530494977, -232829, 2, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232829);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_30
  //                            553402.32229718589441
  // -                      -133456435
  //   ------------------------------------------------
  //                         134009837.32229718589441
  //                         {{349880321, 2013411074, 726, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411074);
  ck_assert_int_eq(res.bits[2], 726);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_31
  //                            553402.32229718589441
  // -                              -0.2343453
  //   ------------------------------------------------
  //                            553402.55664248589441
  //                            {{1188433025, 5458, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5458);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_32
  //                            553402.32229718589441
  // -                             127.2343
  //   ------------------------------------------------
  //                            553275.08799718589441
  //                            {{-1702460415, -2962403, 2, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962403);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_33
  //                            553402.32229718589441
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2148037050.32229718589441
  //                        {{1, -2009260030, 11644, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260030);
  ck_assert_int_eq(res.bits[2], 11644);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_34
  //                           -553402.32229718589441
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                          -1106804.64459437178882
  //                          {{2, 4, 6, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_35
  //                           -553402.32229718589441
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_36
  //                           -553402.32229718589441
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                           -553346.982064964757165217375
  //                           {{9999967, 19999998, 29997000, -2146107392}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29997000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_37
  //                           -553402.32229718589441
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                           -553402.377637418545035384458
  //                           {{10000010, 20000100, 30000003, -2146107392}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 20000100);
  ck_assert_int_eq(res.bits[2], 30000003);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_38
  //                           -553402.32229718589441
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -6087425.58735972434081
  //                          {{161, 1002, 33, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1002);
  ck_assert_int_eq(res.bits[2], 33);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_39
  //                           -553402.32229718589441
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                           -553339.00329475055986782391108
  //                           {{999967556, 1999999900, -1295310549, -2145976320}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], 1999999900);
  ck_assert_int_eq(res.bits[2], -1295310549);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_40
  //                           -553402.32229718589441
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -737869.76307723108354
  //                           {{2, 3, 4, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_41
  //                           -553402.32229718589441
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_42
  //                           -553402.32229718589441
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_43
  //                           -553402.32229718589441
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_44
  //                           -553402.32229718589441
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1845227810.12274907719441
  //                       {{10001, 10002, 10003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_45
  //                           -553402.32229718589441
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407799898491.2777028141
  //               {{1713414701, 998711515, 1000000000, 655360}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1713414701);
  ck_assert_int_eq(res.bits[1], 998711515);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_46
  //                           -553402.32229718589441
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1845227816.13570329159441
  //                       {{10001, 150002, 10003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_47
  //                           -553402.32229718589441
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_48
  //                           -553402.32229718589441
  // -                               0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718599441
  //                           {{10001, 2, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_49
  //                           -553402.32229718589441
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718579441
  //                           {{-9999, 1, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_50
  //                           -553402.32229718589441
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -737869.76303428141058
  //                           {{2, 2, 4, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_51
  //                           -553402.32229718589441
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                           -571849.066375190413323
  //                           {{11, 21, 31, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_52
  //                           -553402.32229718589441
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                           -534955.578180526669833
  //                           {{9, 10, 29, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_53
  //                           -553402.32229718589441
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                           -534955.578219181375497
  //                           {{9, 19, 29, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_54
  //                           -553402.32229718589441
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844121005.47815470540559
  //                        {{9999, 9998, 9997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_55
  //                           -553402.32229718589441
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971305541.7777028141
  //               {{188251181, 1998711510, -1294967296, 655360}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_56
  //                           -553402.32229718589441
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844121005.90765143520559
  //                        {{29999, 19998, 9997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_57
  //                           -553402.32229718589441
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534576625.29415612999441
  //                       {{10001, 20002, 30003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_58
  //                           -553402.32229718589441
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5533469820.64956175820559
  //                        {{9999, 19998, 29997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_59
  //                           -553402.32229718589441
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184466887420.67256492410559
  //                      {{2999999, 1999998, 999997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_60
  //                           -553402.32229718589441
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                                 0.00000000000009
  //                                 {{9, 0, 0, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_61
  //                           -553402.32229718589441
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467994225.31715929589441
  //                     {{3000001, 2000002, 1000003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_62
  //                           -553402.32229718589441
  // -                              10
  //   ------------------------------------------------
  //                           -553412.32229718589441
  //                           {{-1530494975, 232832, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232832);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_63
  //                           -553402.32229718589441
  // -                      -133456435
  //   ------------------------------------------------
  //                         132903032.67770281410559
  //                         {{349880319, 2013411070, 720, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411070);
  ck_assert_int_eq(res.bits[2], 720);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_64
  //                           -553402.32229718589441
  // -                              -0.2343453
  //   ------------------------------------------------
  //                           -553402.08795188589441
  //                           {{-1188433023, -5455, 2, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5455);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_65
  //                           -553402.32229718589441
  // -                             127.2343
  //   ------------------------------------------------
  //                           -553529.55659718589441
  //                           {{1702460417, 2962406, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962406);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_66
  //                           -553402.32229718589441
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2146930245.67770281410559
  //                        {{-1, -2009260035, 11638, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260035);
  ck_assert_int_eq(res.bits[2], 11638);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_67
  //                               -55.340232221137244782625
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553457.662529407031654782625
  //                           {{10000033, 20000002, 30003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_68
  //                               -55.340232221137244782625
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553346.982064964757165217375
  //                            {{9999967, 19999998, 29997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_69
  //                               -55.340232221137244782625
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                 0.000000000000000000000
  //                                 {{0, 0, 0, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_70
  //                               -55.340232221137244782625
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                               -55.395572453787870167083
  //                               {{43, 102, 3003, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 43);
  ck_assert_int_eq(res.bits[1], 102);
  ck_assert_int_eq(res.bits[2], 3003);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_71
  //                               -55.340232221137244782625
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534078.605294759583644782625
  //                          {{1600000033, 1410065410, 300003002, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1600000033);
  ck_assert_int_eq(res.bits[1], 1410065410);
  ck_assert_int_eq(res.bits[2], 300003002);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_72
  //                               -55.340232221137244782625
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                 7.97877021419729739346392
  //                                 {{29144, -100, 43252, 1507328}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29144);
  ck_assert_int_eq(res.bits[1], -100);
  ck_assert_int_eq(res.bits[2], 43252);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_73
  //                               -55.340232221137244782625
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184522.781012266326374782625
  //                           {{10000033, 10000002, 10003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_74
  //                               -55.340232221137244782625
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                               -55.340232221137244782625
  //                               {{33, 2, 3000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_75
  //                               -55.340232221137244782625
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                               -55.340232221137244782625
  //                               {{33, 2, 3000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_76
  //                               -55.340232221137244782625
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451946.6402322211
  //              {{351541027, 1000000129, 1000000000, -2146828288}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 351541027);
  ck_assert_int_eq(res.bits[1], 1000000129);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_77
  //                               -55.340232221137244782625
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674463.1406841124372447826
  //                       {{1085899346, 1000000000, 1000000030, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000030);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_78
  //                               -55.340232221137244782625
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451838.2597677789
  //               {{-1121344803, 999999876, 1000000000, 655360}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1121344803);
  ck_assert_int_eq(res.bits[1], 999999876);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_79
  //                               -55.340232221137244782625
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674469.1536383268372447826
  //                       {{1085899346, 2115098112, 1000000033, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 2115098112);
  ck_assert_int_eq(res.bits[2], 1000000033);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_80
  //                               -55.340232221137244782625
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451835.9597677789
  //               {{1648458973, 999999871, 1000000000, 655360}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1648458973);
  ck_assert_int_eq(res.bits[1], 999999871);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_81
  //                               -55.340232221137244782625
  // -                               0.0000000001
  //   ------------------------------------------------
  //                               -55.340232221237244782625
  //                               {{1215752225, 25, 3000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752225);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_82
  //                               -55.340232221137244782625
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                               -55.340232221037244782625
  //                               {{-1215752159, -22, 2999, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752159);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2999);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_83
  //                               -55.340232221137244782625
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184522.780969316653414782625
  //                           {{10000033, 2, 10003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 10003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_84
  //                               -55.340232221137244782625
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18502.084310225656157782625
  //                            {{1000033, 1000002, 1003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000033);
  ck_assert_int_eq(res.bits[1], 1000002);
  ck_assert_int_eq(res.bits[2], 1003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_85
  //                               -55.340232221137244782625
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18391.403884438087332217375
  //                             {{999967, 9999998, 997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_86
  //                               -55.340232221137244782625
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18391.403845783381668217375
  //                             {{999967, 999998, 997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967);
  ck_assert_int_eq(res.bits[1], 999998);
  ck_assert_int_eq(res.bits[2], 997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_87
  //                               -55.340232221137244782625
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674352.4602196701627552174
  //                        {{914100654, 1000000000, 999999970, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 999999970);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_88
  //                               -55.340232221137244782625
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858888.7597677789
  //               {{1648458973, 1999999871, -1294967296, 655360}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1648458973);
  ck_assert_int_eq(res.bits[1], 1999999871);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_89
  //                               -55.340232221137244782625
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674352.8897163999627552174
  //                        {{-1380866642, 2000000000, 999999970, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1380866642);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], 999999970);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_90
  //                               -55.340232221137244782625
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023278.3120911652372447826
  //                       {{1085899346, 2000000000, -1294967266, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967266);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_91
  //                               -55.340232221137244782625
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023167.6316267229627552174
  //                        {{914100654, 2000000000, -1294967326, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967326);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_92
  //                               -55.340232221137244782625
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440767.65462988886275522
  //                      {{-436832830, 711509811, 1000000000, 1114112}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -436832830);
  ck_assert_int_eq(res.bits[1], 711509811);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test sub_93
  //                               -55.340232221137244782625
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553346.982064964757255217375
  //                            {{99999967, 19999998, 29997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999967);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_94
  //                               -55.340232221137244782625
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440878.33509433113724478
  //                     {{2141865534, -1006477107, 1000000000, -2146369536}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2141865534);
  ck_assert_int_eq(res.bits[1], -1006477107);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test sub_95
  //                               -55.340232221137244782625
  // -                              10
  //   ------------------------------------------------
  //                               -65.340232221137244782625
  //                               {{-1304428511, 434162108, 3542, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1304428511);
  ck_assert_int_eq(res.bits[1], 434162108);
  ck_assert_int_eq(res.bits[2], 3542);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_96
  //                               -55.340232221137244782625
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456379.65976777886275521738
  //                         {{-1459827510, -876806602, 723468483, 1310720}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1459827510);
  ck_assert_int_eq(res.bits[1], -876806602);
  ck_assert_int_eq(res.bits[2], 723468483);
  ck_assert_int_eq(res.bits[3], 1310720);

#test sub_97
  //                               -55.340232221137244782625
  // -                              -0.2343453
  //   ------------------------------------------------
  //                               -55.105886921137244782625
  //                               {{-1113145311, 1271807813, 2987, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1113145311);
  ck_assert_int_eq(res.bits[1], 1271807813);
  ck_assert_int_eq(res.bits[2], 2987);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_98
  //                               -55.340232221137244782625
  // -                             127.2343
  //   ------------------------------------------------
  //                              -182.574532221137244782625
  //                              {{-1956249567, 1654523339, 9897, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249567);
  ck_assert_int_eq(res.bits[1], 1654523339);
  ck_assert_int_eq(res.bits[2], 9897);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_99
  //                               -55.340232221137244782625
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483592.6597677788627552174
  //                        {{-85899346, 1156841471, 1164153188, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -85899346);
  ck_assert_int_eq(res.bits[1], 1156841471);
  ck_assert_int_eq(res.bits[2], 1164153188);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_100
  //                                 0.055340232650625384458
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.266956953243784615542
  //                           {{9999990, 19999900, 29999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], 19999900);
  ck_assert_int_eq(res.bits[2], 29999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_101
  //                                 0.055340232650625384458
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553402.377637418545035384458
  //                            {{10000010, 20000100, 30000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 20000100);
  ck_assert_int_eq(res.bits[2], 30000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_102
  //                                 0.055340232650625384458
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                55.395572453787870167083
  //                                {{43, 102, 3003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 43);
  ck_assert_int_eq(res.bits[1], 102);
  ck_assert_int_eq(res.bits[2], 3003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_103
  //                                 0.055340232650625384458
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 0.000000000000000000000
  //                                 {{0, 0, 0, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_104
  //                                 0.055340232650625384458
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534023.209722305795774615542
  //                          {{1599999990, 1410065308, 299999999, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599999990);
  ck_assert_int_eq(res.bits[1], 1410065308);
  ck_assert_int_eq(res.bits[2], 299999999);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_105
  //                                 0.055340232650625384458
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.37434266798516756054692
  //                                {{33444, 10100, 343553, 1507328}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33444);
  ck_assert_int_eq(res.bits[1], 10100);
  ck_assert_int_eq(res.bits[2], 343553);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_106
  //                                 0.055340232650625384458
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184467.385439812538504615542
  //                           {{9999990, 9999900, 9999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], 9999900);
  ck_assert_int_eq(res.bits[2], 9999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_107
  //                                 0.055340232650625384458
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.055340232650625384458
  //                                 {{10, 100, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_108
  //                                 0.055340232650625384458
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.055340232650625384458
  //                                 {{10, 100, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_109
  //                                 0.055340232650625384458
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.2446597673
  //              {{446597673, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 446597673);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_110
  //                                 0.055340232650625384458
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.7451116586493746155
  //                       {{1515396075, 871150980, 1000000000, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 871150980);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_111
  //                                 0.055340232650625384458
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451893.6553402327
  //               {{-1216401449, 1000000005, 1000000000, 655360}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1216401449);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_112
  //                                 0.055340232650625384458
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674413.7580658730493746155
  //                       {{1515396075, 1986249092, 1000000003, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 1986249092);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_113
  //                                 0.055340232650625384458
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3553402327
  //               {{1553402327, 1000000000, 1000000000, 655360}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1553402327);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_114
  //                                 0.055340232650625384458
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                 0.055340232550625384458
  //                                 {{-1215752182, 76, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752182);
  ck_assert_int_eq(res.bits[1], 76);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_115
  //                                 0.055340232650625384458
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.055340232750625384458
  //                                 {{1215752202, 123, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752202);
  ck_assert_int_eq(res.bits[1], 123);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_116
  //                                 0.055340232650625384458
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184467.385396862865544615542
  //                           {{9999990, -100, 9999996, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], -100);
  ck_assert_int_eq(res.bits[2], 9999996);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_117
  //                                 0.055340232650625384458
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.688737771868287615542
  //                            {{999990, 999900, 999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999990);
  ck_assert_int_eq(res.bits[1], 999900);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_118
  //                                 0.055340232650625384458
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18446.799456891875202384458
  //                             {{1000010, 10000100, 1000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000010);
  ck_assert_int_eq(res.bits[1], 10000100);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_119
  //                                 0.055340232650625384458
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18446.799418237169538384458
  //                             {{1000010, 1000100, 1000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000010);
  ck_assert_int_eq(res.bits[1], 1000100);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_120
  //                                 0.055340232650625384458
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8557921239506253845
  //                        {{484603925, 1128849020, 1000000000, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 1128849020);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_121
  //                                 0.055340232650625384458
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858944.1553402327
  //               {{1553402327, 2000000000, -1294967296, 655360}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1553402327);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_122
  //                                 0.055340232650625384458
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674408.2852888537506253845
  //                        {{-1810363371, 2128849020, 1000000000, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1810363371);
  ck_assert_int_eq(res.bits[1], 2128849020);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_123
  //                                 0.055340232650625384458
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9165187114493746155
  //                       {{1515396075, 1871150980, -1294967296, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 1871150980);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_124
  //                                 0.055340232650625384458
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023223.0271991767506253845
  //                        {{484603925, 2128849020, -1294967296, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 2128849020);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_125
  //                                 0.055340232650625384458
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440823.05020234265062538
  //                      {{-441127798, 2001288490, 1000000000, 1114112}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -441127798);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test sub_126
  //                                 0.055340232650625384458
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553402.377637418545125384458
  //                            {{100000010, 20000100, 30000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100000010);
  ck_assert_int_eq(res.bits[1], 20000100);
  ck_assert_int_eq(res.bits[2], 30000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_127
  //                                 0.055340232650625384458
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.93952187734937462
  //                     {{2146160502, 1998711510, 1000000000, -2146369536}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2146160502);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test sub_128
  //                                 0.055340232650625384458
  // -                              10
  //   ------------------------------------------------
  //                                -9.944659767349374615542
  //                                {{-1304428554, 434162006, 539, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1304428554);
  ck_assert_int_eq(res.bits[1], 434162006);
  ck_assert_int_eq(res.bits[2], 539);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_129
  //                                 0.055340232650625384458
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456435.05534023265062538446
  //                         {{-1459827506, 411683597, 723468784, 1310720}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1459827506);
  ck_assert_int_eq(res.bits[1], 411683597);
  ck_assert_int_eq(res.bits[2], 723468784);
  ck_assert_int_eq(res.bits[3], 1310720);

#test sub_130
  //                                 0.055340232650625384458
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                 0.289685532650625384458
  //                                 {{1113145354, -1271807712, 15, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1113145354);
  ck_assert_int_eq(res.bits[1], -1271807712);
  ck_assert_int_eq(res.bits[2], 15);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_131
  //                                 0.055340232650625384458
  // -                             127.2343
  //   ------------------------------------------------
  //                              -127.178959767349374615542
  //                              {{-1956249610, 1654523237, 6894, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249610);
  ck_assert_int_eq(res.bits[1], 1654523237);
  ck_assert_int_eq(res.bits[2], 6894);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_132
  //                                 0.055340232650625384458
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483648.0553402326506253845
  //                        {{-515396075, 1285690491, 1164153218, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -515396075);
  ck_assert_int_eq(res.bits[1], 1285690491);
  ck_assert_int_eq(res.bits[2], 1164153218);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_133
  //                           5534023.2650625384464
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           4980620.94276535255199
  //                           {{159, 998, 27, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 998);
  ck_assert_int_eq(res.bits[2], 27);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_134
  //                           5534023.2650625384464
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                           6087425.58735972434081
  //                           {{161, 1002, 33, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1002);
  ck_assert_int_eq(res.bits[2], 33);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_135
  //                           5534023.2650625384464
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                           5534078.605294759583644782625
  //                           {{1600000033, 1410065410, 300003002, 1376256}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1600000033);
  ck_assert_int_eq(res.bits[1], 1410065410);
  ck_assert_int_eq(res.bits[2], 300003002);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_136
  //                           5534023.2650625384464
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                           5534023.209722305795774615542
  //                           {{1599999990, 1410065308, 299999999, 1376256}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599999990);
  ck_assert_int_eq(res.bits[1], 1410065308);
  ck_assert_int_eq(res.bits[2], 299999999);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_137
  //                           5534023.2650625384464
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                                 0.0000000000000
  //                                 {{0, 0, 0, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_138
  //                           5534023.2650625384464
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                           5534086.5840649737809421760889
  //                           {{-2038859399, -1790724902, -1294932948, 1441792}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2038859399);
  ck_assert_int_eq(res.bits[1], -1790724902);
  ck_assert_int_eq(res.bits[2], -1294932948);
  ck_assert_int_eq(res.bits[3], 1441792);

#test sub_139
  //                           5534023.2650625384464
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           5349555.82428249325727
  //                           {{159, 999, 29, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_140
  //                           5534023.2650625384464
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                           5534023.2650625384464
  //                           {{16, 100, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 16);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_141
  //                           5534023.2650625384464
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                           5534023.26506253844640
  //                           {{160, 1000, 30, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 160);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 30);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_142
  //                           5534023.2650625384464
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407794917868.0349374616
  //              {{1051539608, 987115098, 1000000000, -2146828288}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1051539608);
  ck_assert_int_eq(res.bits[1], 987115098);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_143
  //                           5534023.2650625384464
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1839140384.5353893528536
  //                       {{984, 900, 997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_144
  //                           5534023.2650625384464
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407805985916.8650625384
  //               {{-1821343384, 1012884907, 1000000000, 655360}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1821343384);
  ck_assert_int_eq(res.bits[1], 1012884907);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_145
  //                           5534023.2650625384464
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1839140390.5483435672536
  //                       {{984, 14900, 997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 14900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_146
  //                           5534023.2650625384464
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407805985914.5650625384
  //               {{948460392, 1012884902, 1000000000, 655360}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 948460392);
  ck_assert_int_eq(res.bits[1], 1012884902);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_147
  //                           5534023.2650625384464
  // -                               0.0000000001
  //   ------------------------------------------------
  //                           5534023.2650625383464
  //                           {{-984, 99, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -984);
  ck_assert_int_eq(res.bits[1], 99);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_148
  //                           5534023.2650625384464
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                           5534023.2650625385464
  //                           {{1016, 100, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_149
  //                           5534023.2650625384464
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           5349555.82432544293023
  //                           {{159, 1000, 29, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_150
  //                           5534023.2650625384464
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                           5515576.520984533927487
  //                           {{1599, 9999, 299, 983040}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 299);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_151
  //                           5534023.2650625384464
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                           5552470.009179197670977
  //                           {{1601, 10010, 301, 983040}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1601);
  ck_assert_int_eq(res.bits[1], 10010);
  ck_assert_int_eq(res.bits[2], 301);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_152
  //                           5534023.2650625384464
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                           5552470.009140542965313
  //                           {{1601, 10001, 301, 983040}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1601);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 301);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_153
  //                           5534023.2650625384464
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1850208431.0655144297464
  //                        {{1016, 1100, 1003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 1100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_154
  //                           5534023.2650625384464
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222977392967.3650625384
  //               {{948460392, 2012884902, -1294967296, 655360}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 948460392);
  ck_assert_int_eq(res.bits[1], 2012884902);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_155
  //                           5534023.2650625384464
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1850208431.4950111595464
  //                        {{3016, 2100, 1003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3016);
  ck_assert_int_eq(res.bits[1], 2100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_156
  //                           5534023.2650625384464
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5528489199.7067964056536
  //                       {{984, 1900, 2997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 1900);
  ck_assert_int_eq(res.bits[2], 2997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_157
  //                           5534023.2650625384464
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5539557246.2369214825464
  //                        {{1016, 2100, 3003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 2100);
  ck_assert_int_eq(res.bits[2], 3003);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_158
  //                           5534023.2650625384464
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184472974846.2599246484464
  //                      {{300016, 200100, 100003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300016);
  ck_assert_int_eq(res.bits[1], 200100);
  ck_assert_int_eq(res.bits[2], 100003);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_159
  //                           5534023.2650625384464
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                           6087425.58735972434090
  //                           {{170, 1002, 33, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 170);
  ck_assert_int_eq(res.bits[1], 1002);
  ck_assert_int_eq(res.bits[2], 33);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_160
  //                           5534023.2650625384464
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184461906799.7297995715536
  //                     {{299984, 199900, 99997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299984);
  ck_assert_int_eq(res.bits[1], 199900);
  ck_assert_int_eq(res.bits[2], 99997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_161
  //                           5534023.2650625384464
  // -                              10
  //   ------------------------------------------------
  //                           5534013.2650625384464
  //                           {{-276447216, -23184, 2, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -276447216);
  ck_assert_int_eq(res.bits[1], -23184);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_162
  //                           5534023.2650625384464
  // -                      -133456435
  //   ------------------------------------------------
  //                         138990458.2650625384464
  //                         {{34988048, 1489831396, 75, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988048);
  ck_assert_int_eq(res.bits[1], 1489831396);
  ck_assert_int_eq(res.bits[2], 75);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_163
  //                           5534023.2650625384464
  // -                              -0.2343453
  //   ------------------------------------------------
  //                           5534023.4994078384464
  //                           {{-1599143600, 645, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1599143600);
  ck_assert_int_eq(res.bits[1], 645);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_164
  //                           5534023.2650625384464
  // -                             127.2343
  //   ------------------------------------------------
  //                           5533896.0307625384464
  //                           {{-1888232944, -296141, 2, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1888232944);
  ck_assert_int_eq(res.bits[1], -296141);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_165
  //                           5534023.2650625384464
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2153017671.2650625384464
  //                        {{16, 658067556, 1167, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 16);
  ck_assert_int_eq(res.bits[1], 658067556);
  ck_assert_int_eq(res.bits[2], 1167);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_166
  //                               -63.31900243533454217608892
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553465.64129962122895217608892
  //                           {{1000032444, 2000000100, -1294624043, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 2000000100);
  ck_assert_int_eq(res.bits[2], -1294624043);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_167
  //                               -63.31900243533454217608892
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553339.00329475055986782391108
  //                            {{999967556, 1999999900, -1295310549, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], 1999999900);
  ck_assert_int_eq(res.bits[2], -1295310549);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_168
  //                               -63.31900243533454217608892
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                -7.97877021419729739346392
  //                                {{29144, -100, 43252, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29144);
  ck_assert_int_eq(res.bits[1], -100);
  ck_assert_int_eq(res.bits[2], 43252);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_169
  //                               -63.31900243533454217608892
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                               -63.37434266798516756054692
  //                               {{33444, 10100, 343553, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33444);
  ck_assert_int_eq(res.bits[1], 10100);
  ck_assert_int_eq(res.bits[2], 343553);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_170
  //                               -63.31900243533454217608892
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534086.5840649737809421760889
  //                          {{-2038859399, -1790724902, -1294932948, -2146041856}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2038859399);
  ck_assert_int_eq(res.bits[1], -1790724902);
  ck_assert_int_eq(res.bits[2], -1294932948);
  ck_assert_int_eq(res.bits[3], -2146041856);

#test sub_171
  //                               -63.31900243533454217608892
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                 0.00000000000000000000000
  //                                 {{0, 0, 0, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_172
  //                               -63.31900243533454217608892
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184530.75978248052367217608892
  //                           {{1000032444, 1000000100, 1000343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 1000000100);
  ck_assert_int_eq(res.bits[2], 1000343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_173
  //                               -63.31900243533454217608892
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                               -63.31900243533454217608892
  //                               {{32444, 100, 343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_174
  //                               -63.31900243533454217608892
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                               -63.31900243533454217608892
  //                               {{32444, 100, 343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_175
  //                               -63.31900243533454217608892
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451954.6190024353
  //              {{-1465135455, 1000000147, 1000000000, -2146828288}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1465135455);
  ck_assert_int_eq(res.bits[1], 1000000147);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_176
  //                               -63.31900243533454217608892
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674471.1194543266345421761
  //                       {{-1582134335, -1897814435, 1000000034, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -1897814435);
  ck_assert_int_eq(res.bits[2], 1000000034);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_177
  //                               -63.31900243533454217608892
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451830.2809975647
  //               {{695331679, 999999858, 1000000000, 655360}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 695331679);
  ck_assert_int_eq(res.bits[1], 999999858);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_178
  //                               -63.31900243533454217608892
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674477.1324085410345421761
  //                       {{-1582134335, -782716323, 1000000037, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -782716323);
  ck_assert_int_eq(res.bits[2], 1000000037);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_179
  //                               -63.31900243533454217608892
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451827.9809975647
  //               {{-829831841, 999999852, 1000000000, 655360}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -829831841);
  ck_assert_int_eq(res.bits[1], 999999852);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_180
  //                               -63.31900243533454217608892
  // -                               0.0000000001
  //   ------------------------------------------------
  //                               -63.31900243543454217608892
  //                               {{1316167356, 2428, 343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1316167356);
  ck_assert_int_eq(res.bits[1], 2428);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_181
  //                               -63.31900243533454217608892
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                               -63.31900243523454217608892
  //                               {{-1316102468, -2229, 343252, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1316102468);
  ck_assert_int_eq(res.bits[1], -2229);
  ck_assert_int_eq(res.bits[2], 343252);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_182
  //                               -63.31900243533454217608892
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184530.75973953085071217608892
  //                           {{1000032444, 100, 1000343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 1000343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_183
  //                               -63.31900243533454217608892
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18510.06308043985345517608892
  //                            {{100032444, 100000100, 100343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100032444);
  ck_assert_int_eq(res.bits[1], 100000100);
  ck_assert_int_eq(res.bits[2], 100343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_184
  //                               -63.31900243533454217608892
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18383.42511422389003482391108
  //                             {{99967556, 999999900, 99656747, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99967556);
  ck_assert_int_eq(res.bits[1], 999999900);
  ck_assert_int_eq(res.bits[2], 99656747);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_185
  //                               -63.31900243533454217608892
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18383.42507556918437082391108
  //                             {{99967556, 99999900, 99656747, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99967556);
  ck_assert_int_eq(res.bits[1], 99999900);
  ck_assert_int_eq(res.bits[2], 99656747);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_186
  //                               -63.31900243533454217608892
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674344.4814494559654578239
  //                        {{-712832961, -397152862, 999999965, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], -397152862);
  ck_assert_int_eq(res.bits[2], 999999965);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_187
  //                               -63.31900243533454217608892
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858880.7809975647
  //               {{-829831841, 1999999852, -1294967296, 655360}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -829831841);
  ck_assert_int_eq(res.bits[1], 1999999852);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_188
  //                               -63.31900243533454217608892
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674344.9109461857654578239
  //                        {{1287167039, 602847139, 999999966, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1287167039);
  ck_assert_int_eq(res.bits[1], 602847139);
  ck_assert_int_eq(res.bits[2], 999999966);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_189
  //                               -63.31900243533454217608892
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023286.2908613794345421761
  //                       {{-1582134335, -897814435, -1294967262, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -897814435);
  ck_assert_int_eq(res.bits[2], -1294967262);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_190
  //                               -63.31900243533454217608892
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023159.6528565087654578239
  //                        {{-712832961, 602847138, -1294967330, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], 602847138);
  ck_assert_int_eq(res.bits[2], -1294967330);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_191
  //                               -63.31900243533454217608892
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440759.67585967466545782
  //                      {{1909129846, 525739591, 1000000000, 1114112}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1909129846);
  ck_assert_int_eq(res.bits[1], 525739591);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test sub_192
  //                               -63.31900243533454217608892
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553339.00329475055995782391108
  //                            {{1410032964, 1999999902, -1295310549, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1410032964);
  ck_assert_int_eq(res.bits[1], 1999999902);
  ck_assert_int_eq(res.bits[2], -1295310549);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_193
  //                               -63.31900243533454217608892
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440886.31386454533454218
  //                     {{-204097142, -820706887, 1000000000, -2146369536}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -204097142);
  ck_assert_int_eq(res.bits[1], -820706887);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test sub_194
  //                               -63.31900243533454217608892
  // -                              10
  //   ------------------------------------------------
  //                               -73.31900243533454217608892
  //                               {{-1593803076, 466537809, 397463, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1593803076);
  ck_assert_int_eq(res.bits[1], 466537809);
  ck_assert_int_eq(res.bits[2], 397463);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_195
  //                               -63.31900243533454217608892
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456371.68099756466545782391
  //                         {{-549294473, -1963433328, 723468440, 1310720}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -549294473);
  ck_assert_int_eq(res.bits[1], -1963433328);
  ck_assert_int_eq(res.bits[2], 723468440);
  ck_assert_int_eq(res.bits[3], 1310720);

#test sub_196
  //                               -63.31900243533454217608892
  // -                              -0.2343453
  //   ------------------------------------------------
  //                               -63.08465713533454217608892
  //                               {{354647740, -1668237606, 341982, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 354647740);
  ck_assert_int_eq(res.bits[1], -1668237606);
  ck_assert_int_eq(res.bits[2], 341982);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_197
  //                               -63.31900243533454217608892
  // -                             127.2343
  //   ------------------------------------------------
  //                              -190.55330243533454217608892
  //                              {{1943568060, -2051390690, 1032991, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1943568060);
  ck_assert_int_eq(res.bits[1], -2051390690);
  ck_assert_int_eq(res.bits[2], 1032991);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_198
  //                               -63.31900243533454217608892
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483584.6809975646654578239
  //                        {{-1712832961, -240311390, 1164153183, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1712832961);
  ck_assert_int_eq(res.bits[1], -240311390);
  ck_assert_int_eq(res.bits[2], 1164153183);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_199
  //                            184467.44078004518913
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -368934.88151714070528
  //                           {{0, 1, 2, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_200
  //                            184467.44078004518913
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            737869.76307723108354
  //                            {{2, 3, 4, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_201
  //                            184467.44078004518913
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            184522.781012266326374782625
  //                            {{10000033, 10000002, 10003000, 1376256}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10003000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_202
  //                            184467.44078004518913
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                            184467.385439812538504615542
  //                            {{9999990, 9999900, 9999997, 1376256}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], 9999900);
  ck_assert_int_eq(res.bits[2], 9999997);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_203
  //                            184467.44078004518913
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5349555.82428249325727
  //                          {{159, 999, 29, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_204
  //                            184467.44078004518913
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            184530.75978248052367217608892
  //                            {{1000032444, 1000000100, 1000343253, 1507328}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 1000000100);
  ck_assert_int_eq(res.bits[2], 1000343253);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_205
  //                            184467.44078004518913
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_206
  //                            184467.44078004518913
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                            184467.44078004518913
  //                            {{1, 1, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_207
  //                            184467.44078004518913
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                            184467.44078004518913
  //                            {{1, 1, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_208
  //                            184467.44078004518913
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800267423.8592199548
  //              {{-2134037636, 999570503, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2134037636);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_209
  //                            184467.44078004518913
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844489940.35967184611087
  //                       {{9999, 9999, 9999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_210
  //                            184467.44078004518913
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800636361.0407800452
  //               {{1364233860, 1000429502, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1364233860);
  ck_assert_int_eq(res.bits[1], 1000429502);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_211
  //                            184467.44078004518913
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844489946.37262606051087
  //                       {{9999, 149999, 9999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 149999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_212
  //                            184467.44078004518913
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800636358.7407800452
  //               {{-160929660, 1000429496, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -160929660);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_213
  //                            184467.44078004518913
  // -                               0.0000000001
  //   ------------------------------------------------
  //                            184467.44078004508913
  //                            {{-9999, 0, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_214
  //                            184467.44078004518913
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                            184467.44078004528913
  //                            {{10001, 1, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_215
  //                            184467.44078004518913
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                                 0.00004294967296
  //                                 {{0, 1, 0, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_216
  //                            184467.44078004518913
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            166020.696702040670217
  //                            {{9, 9, 9, 983040}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_217
  //                            184467.44078004518913
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                            202914.184896704413707
  //                            {{11, 20, 11, 983040}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 20);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_218
  //                            184467.44078004518913
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                            202914.184858049708043
  //                            {{11, 11, 11, 983040}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_219
  //                            184467.44078004518913
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844858875.24123193648913
  //                        {{10001, 10001, 10001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_220
  //                            184467.44078004518913
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222972043411.5407800452
  //               {{-160929660, 2000429496, -1294967296, 655360}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -160929660);
  ck_assert_int_eq(res.bits[1], 2000429496);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_221
  //                            184467.44078004518913
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844858875.67072866628913
  //                        {{30001, 20001, 10001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_222
  //                            184467.44078004518913
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5533838755.53107889891087
  //                       {{9999, 19999, 29999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19999);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_223
  //                            184467.44078004518913
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534207690.41263898928913
  //                        {{10001, 20001, 30001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20001);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_224
  //                            184467.44078004518913
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467625290.43564215518913
  //                      {{3000001, 2000001, 1000001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000001);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_225
  //                            184467.44078004518913
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            737869.76307723108363
  //                            {{11, 3, 4, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_226
  //                            184467.44078004518913
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467256355.55408206481087
  //                     {{2999999, 1999999, 999999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999999);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_227
  //                            184467.44078004518913
  // -                              10
  //   ------------------------------------------------
  //                            184457.44078004518913
  //                            {{1530494977, -232830, 0, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232830);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_228
  //                            184467.44078004518913
  // -                      -133456435
  //   ------------------------------------------------
  //                         133640902.44078004518913
  //                         {{349880321, 2013411073, 724, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411073);
  ck_assert_int_eq(res.bits[2], 724);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_229
  //                            184467.44078004518913
  // -                              -0.2343453
  //   ------------------------------------------------
  //                            184467.67512534518913
  //                            {{1188433025, 5457, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5457);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_230
  //                            184467.44078004518913
  // -                             127.2343
  //   ------------------------------------------------
  //                            184340.20648004518913
  //                            {{-1702460415, -2962404, 0, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962404);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_231
  //                            184467.44078004518913
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147668115.44078004518913
  //                        {{1, -2009260031, 11642, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260031);
  ck_assert_int_eq(res.bits[2], 11642);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_232
  //                                 0.0000000000000
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_233
  //                                 0.0000000000000
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_234
  //                                 0.0000000000000
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                55.340232221137244782625
  //                                {{33, 2, 3000, 1376256}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_235
  //                                 0.0000000000000
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                -0.055340232650625384458
  //                                {{10, 100, 3, -2146107392}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_236
  //                                 0.0000000000000
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534023.2650625384464
  //                          {{16, 100, 3, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 16);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_237
  //                                 0.0000000000000
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.31900243533454217608892
  //                                {{32444, 100, 343253, 1507328}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_238
  //                                 0.0000000000000
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184467.44078004518913
  //                           {{1, 1, 1, -2146566144}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_239
  //                                 0.0000000000000
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.0000000000000
  //                                 {{0, 0, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_240
  //                                 0.0000000000000
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, -2146566144}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_241
  //                                 0.0000000000000
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_242
  //                                 0.0000000000000
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.8004518913000
  //                       {{1000, 1000, 1000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_243
  //                                 0.0000000000000
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451893.6000000000
  //               {{-1769803776, 1000000005, 1000000000, 655360}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_244
  //                                 0.0000000000000
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674413.8134061057000
  //                       {{1000, 15000, 1000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 15000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_245
  //                                 0.0000000000000
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_246
  //                                 0.0000000000000
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                -0.0000000001000
  //                                {{1000, 0, 0, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_247
  //                                 0.0000000000000
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000001000
  //                                 {{1000, 0, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_248
  //                                 0.0000000000000
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184467.44073709551617
  //                           {{1, 0, 1, -2146566144}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_249
  //                                 0.0000000000000
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_250
  //                                 0.0000000000000
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18446.744116659224577
  //                             {{1, 10, 1, 983040}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_251
  //                                 0.0000000000000
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_252
  //                                 0.0000000000000
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8004518913000
  //                        {{1000, 1000, 1000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_253
  //                                 0.0000000000000
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858944.1000000000
  //               {{1000000000, 2000000000, -1294967296, 655360}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_254
  //                                 0.0000000000000
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674408.2299486211000
  //                        {{3000, 2000, 1000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_255
  //                                 0.0000000000000
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9718589441000
  //                       {{1000, 2000, 3000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_256
  //                                 0.0000000000000
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.9718589441000
  //                        {{1000, 2000, 3000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_257
  //                                 0.0000000000000
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.9948621100000
  //                      {{300000, 200000, 100000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_258
  //                                 0.0000000000000
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553402.32229718589450
  //                            {{10, 2, 3, 917504}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_259
  //                                 0.0000000000000
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.9948621100000
  //                     {{300000, 200000, 100000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_260
  //                                 0.0000000000000
  // -                              10
  //   ------------------------------------------------
  //                               -10.0000000000000
  //                               {{276447232, 23283, 0, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 276447232);
  ck_assert_int_eq(res.bits[1], 23283);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_261
  //                                 0.0000000000000
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456435.0000000000000
  //                         {{34988032, 1489831296, 72, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988032);
  ck_assert_int_eq(res.bits[1], 1489831296);
  ck_assert_int_eq(res.bits[2], 72);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_262
  //                                 0.0000000000000
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                 0.2343453000000
  //                                 {{-1599143616, 545, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1599143616);
  ck_assert_int_eq(res.bits[1], 545);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_263
  //                                 0.0000000000000
  // -                             127.2343
  //   ------------------------------------------------
  //                              -127.2343000000000
  //                              {{1888232960, 296240, 0, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1888232960);
  ck_assert_int_eq(res.bits[1], 296240);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_264
  //                                 0.0000000000000
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483648.0000000000000
  //                        {{0, 658067456, 1164, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 658067456);
  ck_assert_int_eq(res.bits[2], 1164);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_265
  //                                 0.00000000000000
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_266
  //                                 0.00000000000000
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_267
  //                                 0.00000000000000
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                55.340232221137244782625
  //                                {{33, 2, 3000, 1376256}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_268
  //                                 0.00000000000000
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                -0.055340232650625384458
  //                                {{10, 100, 3, -2146107392}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_269
  //                                 0.00000000000000
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534023.26506253844640
  //                          {{160, 1000, 30, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 160);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 30);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_270
  //                                 0.00000000000000
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.31900243533454217608892
  //                                {{32444, 100, 343253, 1507328}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_271
  //                                 0.00000000000000
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184467.44078004518913
  //                           {{1, 1, 1, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_272
  //                                 0.00000000000000
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_273
  //                                 0.00000000000000
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_274
  //                                 0.00000000000000
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_275
  //                                 0.00000000000000
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.80045189130000
  //                       {{10000, 10000, 10000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_276
  //                                 0.00000000000000
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451893.6000000000
  //               {{-1769803776, 1000000005, 1000000000, 655360}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_277
  //                                 0.00000000000000
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674413.81340610570000
  //                       {{10000, 150000, 10000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_278
  //                                 0.00000000000000
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_279
  //                                 0.00000000000000
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                -0.00000000010000
  //                                {{10000, 0, 0, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_280
  //                                 0.00000000000000
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.00000000010000
  //                                 {{10000, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_281
  //                                 0.00000000000000
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184467.44073709551617
  //                           {{1, 0, 1, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_282
  //                                 0.00000000000000
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_283
  //                                 0.00000000000000
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18446.744116659224577
  //                             {{1, 10, 1, 983040}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_284
  //                                 0.00000000000000
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_285
  //                                 0.00000000000000
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.80045189130000
  //                        {{10000, 10000, 10000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_286
  //                                 0.00000000000000
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858944.1000000000
  //               {{1000000000, 2000000000, -1294967296, 655360}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_287
  //                                 0.00000000000000
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674408.22994862110000
  //                        {{30000, 20000, 10000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_288
  //                                 0.00000000000000
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.97185894410000
  //                       {{10000, 20000, 30000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_289
  //                                 0.00000000000000
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.97185894410000
  //                        {{10000, 20000, 30000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_290
  //                                 0.00000000000000
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.99486211000000
  //                      {{3000000, 2000000, 1000000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_291
  //                                 0.00000000000000
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553402.32229718589450
  //                            {{10, 2, 3, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_292
  //                                 0.00000000000000
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.99486211000000
  //                     {{3000000, 2000000, 1000000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_293
  //                                 0.00000000000000
  // -                              10
  //   ------------------------------------------------
  //                               -10.00000000000000
  //                               {{-1530494976, 232830, 0, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494976);
  ck_assert_int_eq(res.bits[1], 232830);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_294
  //                                 0.00000000000000
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456435.00000000000000
  //                         {{349880320, 2013411072, 723, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880320);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 723);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_295
  //                                 0.00000000000000
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                 0.23434530000000
  //                                 {{1188433024, 5456, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433024);
  ck_assert_int_eq(res.bits[1], 5456);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_296
  //                                 0.00000000000000
  // -                             127.2343
  //   ------------------------------------------------
  //                              -127.23430000000000
  //                              {{1702460416, 2962404, 0, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460416);
  ck_assert_int_eq(res.bits[1], 2962404);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_297
  //                                 0.00000000000000
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483648.00000000000000
  //                        {{0, -2009260032, 11641, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -2009260032);
  ck_assert_int_eq(res.bits[2], 11641);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_298
  //               1844674407800451891.3
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_299
  //               1844674407800451891.3
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //               1844674407801005293.6222971859
  //               {{1811748819, 1001288490, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_300
  //               1844674407800451891.3
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //               1844674407800451946.6402322211
  //               {{351541027, 1000000129, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 351541027);
  ck_assert_int_eq(res.bits[1], 1000000129);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_301
  //               1844674407800451891.3
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //               1844674407800451891.2446597673
  //               {{446597673, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 446597673);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_302
  //               1844674407800451891.3
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //               1844674407794917868.0349374616
  //               {{1051539608, 987115098, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1051539608);
  ck_assert_int_eq(res.bits[1], 987115098);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_303
  //               1844674407800451891.3
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //               1844674407800451954.6190024353
  //               {{-1465135455, 1000000147, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1465135455);
  ck_assert_int_eq(res.bits[1], 1000000147);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_304
  //               1844674407800451891.3
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //               1844674407800267423.8592199548
  //               {{-2134037636, 999570503, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2134037636);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_305
  //               1844674407800451891.3
  // -                               0.0000000000000
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_306
  //               1844674407800451891.3
  // -                               0.00000000000000
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_307
  //               1844674407800451891.3
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //                                 0.0
  //                                 {{0, 0, 0, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_308
  //               1844674407800451891.3
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //               1844674405955777483.4995481087
  //               {{999999999, 999999999, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_309
  //               1844674407800451891.3
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               3689348815600903784.9
  //               {{25, 2, 2, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 25);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_310
  //               1844674407800451891.3
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //               1844674405955777477.4865938943
  //               {{999999999, 999999985, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999985);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_311
  //               1844674407800451891.3
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               3689348815600903782.6
  //               {{2, 2, 2, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_312
  //               1844674407800451891.3
  // -                               0.0000000001
  //   ------------------------------------------------
  //               1844674407800451891.2999999999
  //               {{999999999, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_313
  //               1844674407800451891.3
  // -                              -0.0000000001
  //   ------------------------------------------------
  //               1844674407800451891.3000000001
  //               {{1000000001, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_314
  //               1844674407800451891.3
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //               1844674407800267423.8592629045
  //               {{-2133608139, 999570503, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2133608139);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_315
  //               1844674407800451891.3
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //               1844674407800433444.5559219955
  //               {{-1890384141, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_316
  //               1844674407800451891.3
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //               1844674407800470338.0441166592
  //               {{-404196608, 1000042949, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404196608);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_317
  //               1844674407800451891.3
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //               1844674407800470338.0440780045
  //               {{-404583155, 1000042949, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_318
  //               1844674407800451891.3
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //               1844674409645126299.1004518913
  //               {{1000000001, 1000000001, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_319
  //               1844674407800451891.3
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               7378697630772310835.4
  //               {{2, 3, 4, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_320
  //               1844674407800451891.3
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //               1844674409645126299.5299486211
  //               {{1000000003, 1000000002, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_321
  //               1844674407800451891.3
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //               1844674402266428668.3281410559
  //               {{999999999, 999999998, 999999997, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_322
  //               1844674407800451891.3
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //               1844674413334475114.2718589441
  //               {{1000000001, 1000000002, 1000000003, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_323
  //               1844674407800451891.3
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //               1844674592267892714.29486211
  //               {{10000003, 10000002, 10000001, 524288}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_324
  //               1844674407800451891.3
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //               1844674407801005293.6222971859
  //               {{1811748819, 1001288490, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_325
  //               1844674407800451891.3
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //               1844674223333011068.30513789
  //               {{9999997, 9999998, 9999999, 524288}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_326
  //               1844674407800451891.3
  // -                              10
  //   ------------------------------------------------
  //               1844674407800451881.3
  //               {{-99, 0, 1, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_327
  //               1844674407800451891.3
  // -                      -133456435
  //   ------------------------------------------------
  //               1844674407933908326.3
  //               {{1334564351, 1, 1, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564351);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_328
  //               1844674407800451891.3
  // -                              -0.2343453
  //   ------------------------------------------------
  //               1844674407800451891.5343453
  //               {{3343453, 1000000, 1000000, 458752}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3343453);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_329
  //               1844674407800451891.3
  // -                             127.2343
  //   ------------------------------------------------
  //               1844674407800451764.0657
  //               {{-1271343, 999, 1000, 262144}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1271343);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_330
  //               1844674407800451891.3
  // -                     -2147483648
  //   ------------------------------------------------
  //               1844674409947935539.3
  //               {{1, 6, 1, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 6);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_331
  //                        1844674407.8004518913
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                        1844121005.47815470540559
  //                        {{9999, 9998, 9997, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_332
  //                        1844674407.8004518913
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                        1845227810.12274907719441
  //                        {{10001, 10002, 10003, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_333
  //                        1844674407.8004518913
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        1844674463.1406841124372447826
  //                        {{1085899346, 1000000000, 1000000030, 1245184}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000030);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_334
  //                        1844674407.8004518913
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                        1844674407.7451116586493746155
  //                        {{1515396075, 871150980, 1000000000, 1245184}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 871150980);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_335
  //                        1844674407.8004518913
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                        1839140384.5353893528536
  //                        {{984, 900, 997, 851968}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_336
  //                        1844674407.8004518913
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        1844674471.1194543266345421761
  //                        {{-1582134335, -1897814435, 1000000034, 1245184}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -1897814435);
  ck_assert_int_eq(res.bits[2], 1000000034);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_337
  //                        1844674407.8004518913
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                        1844489940.35967184611087
  //                        {{9999, 9999, 9999, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_338
  //                        1844674407.8004518913
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                        1844674407.8004518913000
  //                        {{1000, 1000, 1000, 851968}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_339
  //                        1844674407.8004518913
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                        1844674407.80045189130000
  //                        {{10000, 10000, 10000, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_340
  //                        1844674407.8004518913
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674405955777483.4995481087
  //              {{999999999, 999999999, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_341
  //                        1844674407.8004518913
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_342
  //                        1844674407.8004518913
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674409645126301.4004518913
  //               {{-1769803775, 1000000006, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000006);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_343
  //                        1844674407.8004518913
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                                -6.0129542144
  //                                {{0, 14, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 14);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_344
  //                        1844674407.8004518913
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674409645126299.1004518913
  //               {{1000000001, 1000000001, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_345
  //                        1844674407.8004518913
  // -                               0.0000000001
  //   ------------------------------------------------
  //                        1844674407.8004518912
  //                        {{0, 1, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_346
  //                        1844674407.8004518913
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                        1844674407.8004518914
  //                        {{2, 1, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_347
  //                        1844674407.8004518913
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                        1844489940.35971479578383
  //                        {{9999, 10000, 9999, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_348
  //                        1844674407.8004518913
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                        1844655961.056373886781087
  //                        {{99999, 99999, 99999, 983040}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_349
  //                        1844674407.8004518913
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                        1844692854.544568550524577
  //                        {{100001, 100010, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_350
  //                        1844674407.8004518913
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                        1844692854.544529895818913
  //                        {{100001, 100001, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_351
  //                        1844674407.8004518913
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        3689348815.6009037826
  //                        {{2, 2, 2, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_352
  //                        1844674407.8004518913
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023224816533351.9004518913
  //               {{1000000001, 2000000001, -1294967295, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000001);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_353
  //                        1844674407.8004518913
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        3689348816.0304005124
  //                        {{4, 3, 2, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_354
  //                        1844674407.8004518913
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -3689348815.1714070528
  //                       {{0, 1, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_355
  //                        1844674407.8004518913
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        7378697630.7723108354
  //                        {{2, 3, 4, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_356
  //                        1844674407.8004518913
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      186312115230.7953140013
  //                      {{301, 201, 101, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_357
  //                        1844674407.8004518913
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                        1845227810.12274907719450
  //                        {{10010, 10002, 10003, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_358
  //                        1844674407.8004518913
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -182622766415.1944102187
  //                     {{299, 199, 99, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_359
  //                        1844674407.8004518913
  // -                              10
  //   ------------------------------------------------
  //                        1844674397.8004518913
  //                        {{-1215752191, -23, 0, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_360
  //                        1844674407.8004518913
  // -                      -133456435
  //   ------------------------------------------------
  //                        1978130842.8004518913
  //                        {{-1683592191, 310727477, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727477);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_361
  //                        1844674407.8004518913
  // -                              -0.2343453
  //   ------------------------------------------------
  //                        1844674408.0347971913
  //                        {{-1951514295, 1, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_362
  //                        1844674407.8004518913
  // -                             127.2343
  //   ------------------------------------------------
  //                        1844674280.5661518913
  //                        {{-1032680383, -296, 0, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_363
  //                        1844674407.8004518913
  // -                     -2147483648
  //   ------------------------------------------------
  //                        3992158055.8004518913
  //                        {{1, 705032705, 2, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032705);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_364
  //              -1844674407800451893.6
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407801005295.9222971859
  //              {{-958054957, 1001288495, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -958054957);
  ck_assert_int_eq(res.bits[1], 1001288495);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_365
  //              -1844674407800451893.6
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407799898491.2777028141
  //              {{1713414701, 998711515, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1713414701);
  ck_assert_int_eq(res.bits[1], 998711515);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_366
  //              -1844674407800451893.6
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //              -1844674407800451838.2597677789
  //              {{-1121344803, 999999876, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1121344803);
  ck_assert_int_eq(res.bits[1], 999999876);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_367
  //              -1844674407800451893.6
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //              -1844674407800451893.6553402327
  //              {{-1216401449, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1216401449);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_368
  //              -1844674407800451893.6
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //              -1844674407805985916.8650625384
  //              {{-1821343384, 1012884907, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1821343384);
  ck_assert_int_eq(res.bits[1], 1012884907);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_369
  //              -1844674407800451893.6
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //              -1844674407800451830.2809975647
  //              {{695331679, 999999858, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 695331679);
  ck_assert_int_eq(res.bits[1], 999999858);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_370
  //              -1844674407800451893.6
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //              -1844674407800636361.0407800452
  //              {{1364233860, 1000429502, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1364233860);
  ck_assert_int_eq(res.bits[1], 1000429502);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_371
  //              -1844674407800451893.6
  // -                               0.0000000000000
  //   ------------------------------------------------
  //              -1844674407800451893.6000000000
  //              {{-1769803776, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_372
  //              -1844674407800451893.6
  // -                               0.00000000000000
  //   ------------------------------------------------
  //              -1844674407800451893.6000000000
  //              {{-1769803776, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_373
  //              -1844674407800451893.6
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -3689348815600903784.9
  //              {{25, 2, 2, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 25);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_374
  //              -1844674407800451893.6
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674409645126301.4004518913
  //              {{-1769803775, 1000000006, 1000000001, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000006);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_375
  //              -1844674407800451893.6
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //                                 0.0
  //                                 {{0, 0, 0, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_376
  //              -1844674407800451893.6
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //              -1844674409645126307.4134061057
  //              {{-1769803775, 1000000020, 1000000001, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000020);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_377
  //              -1844674407800451893.6
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //                                -2.3
  //                                {{23, 0, 0, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_378
  //              -1844674407800451893.6
  // -                               0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451893.6000000001
  //              {{-1769803775, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_379
  //              -1844674407800451893.6
  // -                              -0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451893.5999999999
  //              {{-1769803777, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_380
  //              -1844674407800451893.6
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //              -1844674407800636361.0407370955
  //              {{1363804363, 1000429502, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1363804363);
  ck_assert_int_eq(res.bits[1], 1000429502);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_381
  //              -1844674407800451893.6
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800470340.3440780045
  //              {{1120580365, 1000042955, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1120580365);
  ck_assert_int_eq(res.bits[1], 1000042955);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_382
  //              -1844674407800451893.6
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //              -1844674407800433446.8558833408
  //              {{-365607168, 999957055, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -365607168);
  ck_assert_int_eq(res.bits[1], 999957055);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_383
  //              -1844674407800451893.6
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800433446.8559219955
  //              {{-365220621, 999957055, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -365220621);
  ck_assert_int_eq(res.bits[1], 999957055);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_384
  //              -1844674407800451893.6
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674405955777485.7995481087
  //              {{-1769803777, 1000000004, 999999999, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000004);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_385
  //              -1844674407800451893.6
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               3689348815171407050.5
  //               {{-23, 0, 2, 65536}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -23);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_386
  //              -1844674407800451893.6
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //              -1844674405955777485.3700513789
  //              {{-1769803779, 1000000003, 999999999, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803779);
  ck_assert_int_eq(res.bits[1], 1000000003);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_387
  //              -1844674407800451893.6
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674413334475116.5718589441
  //              {{-1769803775, 1000000007, 1000000003, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000007);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_388
  //              -1844674407800451893.6
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674402266428670.6281410559
  //              {{-1769803777, 1000000003, 999999997, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000003);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_389
  //              -1844674407800451893.6
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //              -1844674223333011070.60513789
  //              {{239999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 239999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_390
  //              -1844674407800451893.6
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //              -1844674407799898491.2777028141
  //              {{1713414701, 998711515, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1713414701);
  ck_assert_int_eq(res.bits[1], 998711515);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_391
  //              -1844674407800451893.6
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //              -1844674592267892716.59486211
  //              {{240000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 240000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_392
  //              -1844674407800451893.6
  // -                              10
  //   ------------------------------------------------
  //              -1844674407800451903.6
  //              {{124, 1, 1, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 124);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_393
  //              -1844674407800451893.6
  // -                      -133456435
  //   ------------------------------------------------
  //              -1844674407666995458.6
  //              {{-1334564326, 0, 1, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564326);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_394
  //              -1844674407800451893.6
  // -                              -0.2343453
  //   ------------------------------------------------
  //              -1844674407800451893.3656547
  //              {{21656547, 1000000, 1000000, -2147024896}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 21656547);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_395
  //              -1844674407800451893.6
  // -                             127.2343
  //   ------------------------------------------------
  //              -1844674407800452020.8343
  //              {{1296343, 1000, 1000, -2147221504}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1296343);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_396
  //              -1844674407800451893.6
  // -                     -2147483648
  //   ------------------------------------------------
  //              -1844674405652968245.6
  //              {{24, -4, 0, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 24);
  ck_assert_int_eq(res.bits[1], -4);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_397
  //                        1844674413.8134061057
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                        1844121011.49110891980559
  //                        {{9999, 149998, 9997, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 149998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_398
  //                        1844674413.8134061057
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                        1845227816.13570329159441
  //                        {{10001, 150002, 10003, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_399
  //                        1844674413.8134061057
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        1844674469.1536383268372447826
  //                        {{1085899346, 2115098112, 1000000033, 1245184}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 2115098112);
  ck_assert_int_eq(res.bits[2], 1000000033);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_400
  //                        1844674413.8134061057
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                        1844674413.7580658730493746155
  //                        {{1515396075, 1986249092, 1000000003, 1245184}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 1986249092);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_401
  //                        1844674413.8134061057
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                        1839140390.5483435672536
  //                        {{984, 14900, 997, 851968}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 14900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_402
  //                        1844674413.8134061057
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        1844674477.1324085410345421761
  //                        {{-1582134335, -782716323, 1000000037, 1245184}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -782716323);
  ck_assert_int_eq(res.bits[2], 1000000037);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_403
  //                        1844674413.8134061057
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                        1844489946.37262606051087
  //                        {{9999, 149999, 9999, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 149999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_404
  //                        1844674413.8134061057
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                        1844674413.8134061057000
  //                        {{1000, 15000, 1000, 851968}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 15000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_405
  //                        1844674413.8134061057
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                        1844674413.81340610570000
  //                        {{10000, 150000, 10000, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_406
  //                        1844674413.8134061057
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674405955777477.4865938943
  //              {{999999999, 999999985, 999999999, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999985);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_407
  //                        1844674413.8134061057
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                                 6.0129542144
  //                                 {{0, 14, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 14);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_408
  //                        1844674413.8134061057
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674409645126307.4134061057
  //               {{-1769803775, 1000000020, 1000000001, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000020);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_409
  //                        1844674413.8134061057
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_410
  //                        1844674413.8134061057
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674409645126305.1134061057
  //               {{1000000001, 1000000015, 1000000001, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000015);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_411
  //                        1844674413.8134061057
  // -                               0.0000000001
  //   ------------------------------------------------
  //                        1844674413.8134061056
  //                        {{0, 15, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_412
  //                        1844674413.8134061057
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                        1844674413.8134061058
  //                        {{2, 15, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_413
  //                        1844674413.8134061057
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                        1844489946.37266901018383
  //                        {{9999, 150000, 9999, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_414
  //                        1844674413.8134061057
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                        1844655967.069328101181087
  //                        {{99999, 1499999, 99999, 983040}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 1499999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_415
  //                        1844674413.8134061057
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                        1844692860.557522764924577
  //                        {{100001, 1500010, 100001, 983040}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1500010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_416
  //                        1844674413.8134061057
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                        1844692860.557484110218913
  //                        {{100001, 1500001, 100001, 983040}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1500001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_417
  //                        1844674413.8134061057
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        3689348821.6138579970
  //                        {{2, 16, 2, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 16);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_418
  //                        1844674413.8134061057
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023224816533357.9134061057
  //               {{1000000001, 2000000015, -1294967295, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000015);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_419
  //                        1844674413.8134061057
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        3689348822.0433547268
  //                        {{4, 17, 2, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 17);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_420
  //                        1844674413.8134061057
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -3689348809.1584528384
  //                       {{0, -13, 1, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -13);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_421
  //                        1844674413.8134061057
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        7378697636.7852650498
  //                        {{2, 17, 4, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 17);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_422
  //                        1844674413.8134061057
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      186312115236.8082682157
  //                      {{301, 215, 101, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 215);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_423
  //                        1844674413.8134061057
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                        1845227816.13570329159450
  //                        {{10010, 150002, 10003, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 150002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_424
  //                        1844674413.8134061057
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -182622766409.1814560043
  //                     {{299, 185, 99, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 185);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_425
  //                        1844674413.8134061057
  // -                              10
  //   ------------------------------------------------
  //                        1844674403.8134061057
  //                        {{-1215752191, -9, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -9);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_426
  //                        1844674413.8134061057
  // -                      -133456435
  //   ------------------------------------------------
  //                        1978130848.8134061057
  //                        {{-1683592191, 310727491, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727491);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_427
  //                        1844674413.8134061057
  // -                              -0.2343453
  //   ------------------------------------------------
  //                        1844674414.0477514057
  //                        {{-1951514295, 15, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_428
  //                        1844674413.8134061057
  // -                             127.2343
  //   ------------------------------------------------
  //                        1844674286.5791061057
  //                        {{-1032680383, -282, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -282);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_429
  //                        1844674413.8134061057
  // -                     -2147483648
  //   ------------------------------------------------
  //                        3992158061.8134061057
  //                        {{1, 705032719, 2, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032719);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_430
  //              -1844674407800451891.3
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_431
  //              -1844674407800451891.3
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407799898488.9777028141
  //              {{188251181, 998711510, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_432
  //              -1844674407800451891.3
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //              -1844674407800451835.9597677789
  //              {{1648458973, 999999871, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1648458973);
  ck_assert_int_eq(res.bits[1], 999999871);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_433
  //              -1844674407800451891.3
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //              -1844674407800451891.3553402327
  //              {{1553402327, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1553402327);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_434
  //              -1844674407800451891.3
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //              -1844674407805985914.5650625384
  //              {{948460392, 1012884902, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 948460392);
  ck_assert_int_eq(res.bits[1], 1012884902);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_435
  //              -1844674407800451891.3
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //              -1844674407800451827.9809975647
  //              {{-829831841, 999999852, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -829831841);
  ck_assert_int_eq(res.bits[1], 999999852);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_436
  //              -1844674407800451891.3
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //              -1844674407800636358.7407800452
  //              {{-160929660, 1000429496, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -160929660);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_437
  //              -1844674407800451891.3
  // -                               0.0000000000000
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_438
  //              -1844674407800451891.3
  // -                               0.00000000000000
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_439
  //              -1844674407800451891.3
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -3689348815600903782.6
  //              {{2, 2, 2, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_440
  //              -1844674407800451891.3
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674409645126299.1004518913
  //              {{1000000001, 1000000001, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_441
  //              -1844674407800451891.3
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //                                 2.3
  //                                 {{23, 0, 0, 65536}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_442
  //              -1844674407800451891.3
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //              -1844674409645126305.1134061057
  //              {{1000000001, 1000000015, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000015);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_443
  //              -1844674407800451891.3
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //                                 0.0
  //                                 {{0, 0, 0, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_444
  //              -1844674407800451891.3
  // -                               0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451891.3000000001
  //              {{1000000001, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_445
  //              -1844674407800451891.3
  // -                              -0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451891.2999999999
  //              {{999999999, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_446
  //              -1844674407800451891.3
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //              -1844674407800636358.7407370955
  //              {{-161359157, 1000429496, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161359157);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_447
  //              -1844674407800451891.3
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800470338.0440780045
  //              {{-404583155, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_448
  //              -1844674407800451891.3
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //              -1844674407800433444.5558833408
  //              {{-1890770688, 999957050, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890770688);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_449
  //              -1844674407800451891.3
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800433444.5559219955
  //              {{-1890384141, 999957050, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_450
  //              -1844674407800451891.3
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674405955777483.4995481087
  //              {{999999999, 999999999, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_451
  //              -1844674407800451891.3
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               3689348815171407052.8
  //               {{0, 1, 2, 65536}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_452
  //              -1844674407800451891.3
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //              -1844674405955777483.0700513789
  //              {{999999997, 999999998, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999997);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_453
  //              -1844674407800451891.3
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674413334475114.2718589441
  //              {{1000000001, 1000000002, 1000000003, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_454
  //              -1844674407800451891.3
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674402266428668.3281410559
  //              {{999999999, 999999998, 999999997, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_455
  //              -1844674407800451891.3
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //              -1844674223333011068.30513789
  //              {{9999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_456
  //              -1844674407800451891.3
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //              -1844674407799898488.9777028141
  //              {{188251181, 998711510, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_457
  //              -1844674407800451891.3
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //              -1844674592267892714.29486211
  //              {{10000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_458
  //              -1844674407800451891.3
  // -                              10
  //   ------------------------------------------------
  //              -1844674407800451901.3
  //              {{101, 1, 1, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_459
  //              -1844674407800451891.3
  // -                      -133456435
  //   ------------------------------------------------
  //              -1844674407666995456.3
  //              {{-1334564349, 0, 1, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564349);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_460
  //              -1844674407800451891.3
  // -                              -0.2343453
  //   ------------------------------------------------
  //              -1844674407800451891.0656547
  //              {{-1343453, 999999, 1000000, -2147024896}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1343453);
  ck_assert_int_eq(res.bits[1], 999999);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_461
  //              -1844674407800451891.3
  // -                             127.2343
  //   ------------------------------------------------
  //              -1844674407800452018.5343
  //              {{1273343, 1000, 1000, -2147221504}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1273343);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_462
  //              -1844674407800451891.3
  // -                     -2147483648
  //   ------------------------------------------------
  //              -1844674405652968243.3
  //              {{1, -4, 0, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -4);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_463
  //                                 0.0000000001
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718579441
  //                           {{-9999, 1, 3, -2146566144}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_464
  //                                 0.0000000001
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718599441
  //                            {{10001, 2, 3, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_465
  //                                 0.0000000001
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                55.340232221237244782625
  //                                {{1215752225, 25, 3000, 1376256}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752225);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_466
  //                                 0.0000000001
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                -0.055340232550625384458
  //                                {{-1215752182, 76, 3, -2146107392}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752182);
  ck_assert_int_eq(res.bits[1], 76);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_467
  //                                 0.0000000001
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534023.2650625383464
  //                          {{-984, 99, 3, -2146631680}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -984);
  ck_assert_int_eq(res.bits[1], 99);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_468
  //                                 0.0000000001
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.31900243543454217608892
  //                                {{1316167356, 2428, 343253, 1507328}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1316167356);
  ck_assert_int_eq(res.bits[1], 2428);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_469
  //                                 0.0000000001
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184467.44078004508913
  //                           {{-9999, 0, 1, -2146566144}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_470
  //                                 0.0000000001
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.0000000001000
  //                                 {{1000, 0, 0, 851968}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_471
  //                                 0.0000000001
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.00000000010000
  //                                 {{10000, 0, 0, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_472
  //                                 0.0000000001
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.2999999999
  //              {{999999999, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_473
  //                                 0.0000000001
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.8004518912
  //                       {{0, 1, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_474
  //                                 0.0000000001
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451893.6000000001
  //               {{-1769803775, 1000000005, 1000000000, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_475
  //                                 0.0000000001
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674413.8134061056
  //                       {{0, 15, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_476
  //                                 0.0000000001
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3000000001
  //               {{1000000001, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_477
  //                                 0.0000000001
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_478
  //                                 0.0000000001
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000002
  //                                 {{2, 0, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_479
  //                                 0.0000000001
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184467.44073709541617
  //                           {{-9999, -1, 0, -2146566144}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_480
  //                                 0.0000000001
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004418913
  //                            {{-99999, 0, 1, -2146500608}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_481
  //                                 0.0000000001
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18446.744116659324577
  //                             {{100001, 10, 1, 983040}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_482
  //                                 0.0000000001
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004618913
  //                             {{100001, 1, 1, 983040}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_483
  //                                 0.0000000001
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8004518914
  //                        {{2, 1, 1, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_484
  //                                 0.0000000001
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858944.1000000001
  //               {{1000000001, 2000000000, -1294967296, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_485
  //                                 0.0000000001
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674408.2299486212
  //                        {{4, 2, 1, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_486
  //                                 0.0000000001
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9718589440
  //                       {{0, 2, 3, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_487
  //                                 0.0000000001
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.9718589442
  //                        {{2, 2, 3, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_488
  //                                 0.0000000001
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.9948621101
  //                      {{301, 200, 100, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_489
  //                                 0.0000000001
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553402.32229718599450
  //                            {{10010, 2, 3, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_490
  //                                 0.0000000001
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.9948621099
  //                     {{299, 200, 100, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_491
  //                                 0.0000000001
  // -                              10
  //   ------------------------------------------------
  //                                -9.9999999999
  //                                {{1215752191, 23, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752191);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_492
  //                                 0.0000000001
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456435.0000000001
  //                         {{-1683592191, 310727476, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_493
  //                                 0.0000000001
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                 0.2343453001
  //                                 {{-1951514295, 0, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_494
  //                                 0.0000000001
  // -                             127.2343
  //   ------------------------------------------------
  //                              -127.2342999999
  //                              {{1032680383, 296, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680383);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_495
  //                                 0.0000000001
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483648.0000000001
  //                        {{1, 705032704, 1, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032704);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_496
  //                                -0.0000000001
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718599441
  //                           {{10001, 2, 3, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_497
  //                                -0.0000000001
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718579441
  //                            {{-9999, 1, 3, 917504}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_498
  //                                -0.0000000001
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                55.340232221037244782625
  //                                {{-1215752159, -22, 2999, 1376256}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752159);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2999);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_499
  //                                -0.0000000001
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                -0.055340232750625384458
  //                                {{1215752202, 123, 3, -2146107392}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752202);
  ck_assert_int_eq(res.bits[1], 123);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_500
  //                                -0.0000000001
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534023.2650625385464
  //                          {{1016, 100, 3, -2146631680}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_501
  //                                -0.0000000001
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.31900243523454217608892
  //                                {{-1316102468, -2229, 343252, 1507328}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1316102468);
  ck_assert_int_eq(res.bits[1], -2229);
  ck_assert_int_eq(res.bits[2], 343252);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_502
  //                                -0.0000000001
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184467.44078004528913
  //                           {{10001, 1, 1, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_503
  //                                -0.0000000001
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                -0.0000000001000
  //                                {{1000, 0, 0, -2146631680}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_504
  //                                -0.0000000001
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                -0.00000000010000
  //                                {{10000, 0, 0, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_505
  //                                -0.0000000001
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.3000000001
  //              {{1000000001, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_506
  //                                -0.0000000001
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.8004518914
  //                       {{2, 1, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_507
  //                                -0.0000000001
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451893.5999999999
  //               {{-1769803777, 1000000005, 1000000000, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_508
  //                                -0.0000000001
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674413.8134061058
  //                       {{2, 15, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_509
  //                                -0.0000000001
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.2999999999
  //               {{999999999, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_510
  //                                -0.0000000001
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                -0.0000000002
  //                                {{2, 0, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_511
  //                                -0.0000000001
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_512
  //                                -0.0000000001
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184467.44073709561617
  //                           {{10001, 0, 1, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_513
  //                                -0.0000000001
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004618913
  //                            {{100001, 1, 1, -2146500608}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_514
  //                                -0.0000000001
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18446.744116659124577
  //                             {{-99999, 9, 1, 983040}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_515
  //                                -0.0000000001
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004418913
  //                             {{-99999, 0, 1, 983040}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_516
  //                                -0.0000000001
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8004518912
  //                        {{0, 1, 1, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_517
  //                                -0.0000000001
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858944.0999999999
  //               {{999999999, 2000000000, -1294967296, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_518
  //                                -0.0000000001
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674408.2299486210
  //                        {{2, 2, 1, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_519
  //                                -0.0000000001
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9718589442
  //                       {{2, 2, 3, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_520
  //                                -0.0000000001
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.9718589440
  //                        {{0, 2, 3, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_521
  //                                -0.0000000001
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.9948621099
  //                      {{299, 200, 100, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_522
  //                                -0.0000000001
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553402.32229718579450
  //                            {{-9990, 1, 3, 917504}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9990);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_523
  //                                -0.0000000001
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.9948621101
  //                     {{301, 200, 100, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_524
  //                                -0.0000000001
  // -                              10
  //   ------------------------------------------------
  //                               -10.0000000001
  //                               {{1215752193, 23, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_525
  //                                -0.0000000001
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456434.9999999999
  //                         {{-1683592193, 310727476, 0, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592193);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_526
  //                                -0.0000000001
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                 0.2343452999
  //                                 {{-1951514297, 0, 0, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_527
  //                                -0.0000000001
  // -                             127.2343
  //   ------------------------------------------------
  //                              -127.2343000001
  //                              {{1032680385, 296, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_528
  //                                -0.0000000001
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483647.9999999999
  //                        {{-1, 705032703, 1, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032703);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_529
  //                            184467.44073709551617
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -368934.88156009037824
  //                           {{0, 2, 2, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_530
  //                            184467.44073709551617
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            737869.76303428141058
  //                            {{2, 2, 4, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_531
  //                            184467.44073709551617
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            184522.780969316653414782625
  //                            {{10000033, 2, 10003000, 1376256}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 10003000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_532
  //                            184467.44073709551617
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                            184467.385396862865544615542
  //                            {{9999990, -100, 9999996, 1376256}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], -100);
  ck_assert_int_eq(res.bits[2], 9999996);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_533
  //                            184467.44073709551617
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5349555.82432544293023
  //                          {{159, 1000, 29, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_534
  //                            184467.44073709551617
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            184530.75973953085071217608892
  //                            {{1000032444, 100, 1000343253, 1507328}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 1000343253);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_535
  //                            184467.44073709551617
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                                -0.00004294967296
  //                                {{0, 1, 0, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_536
  //                            184467.44073709551617
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                            184467.44073709551617
  //                            {{1, 0, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_537
  //                            184467.44073709551617
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                            184467.44073709551617
  //                            {{1, 0, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_538
  //                            184467.44073709551617
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800267423.8592629045
  //              {{-2133608139, 999570503, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2133608139);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_539
  //                            184467.44073709551617
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844489940.35971479578383
  //                       {{9999, 10000, 9999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_540
  //                            184467.44073709551617
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800636361.0407370955
  //               {{1363804363, 1000429502, 1000000000, 655360}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1363804363);
  ck_assert_int_eq(res.bits[1], 1000429502);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_541
  //                            184467.44073709551617
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844489946.37266901018383
  //                       {{9999, 150000, 9999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_542
  //                            184467.44073709551617
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800636358.7407370955
  //               {{-161359157, 1000429496, 1000000000, 655360}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161359157);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_543
  //                            184467.44073709551617
  // -                               0.0000000001
  //   ------------------------------------------------
  //                            184467.44073709541617
  //                            {{-9999, -1, 0, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_544
  //                            184467.44073709551617
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                            184467.44073709561617
  //                            {{10001, 0, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_545
  //                            184467.44073709551617
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_546
  //                            184467.44073709551617
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            166020.696659090997257
  //                            {{9, -1, 8, 983040}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 8);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_547
  //                            184467.44073709551617
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                            202914.184853754740747
  //                            {{11, 10, 11, 983040}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_548
  //                            184467.44073709551617
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                            202914.184815100035083
  //                            {{11, 1, 11, 983040}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_549
  //                            184467.44073709551617
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844858875.24118898681617
  //                        {{10001, 10000, 10001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_550
  //                            184467.44073709551617
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222972043411.5407370955
  //               {{-161359157, 2000429496, -1294967296, 655360}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161359157);
  ck_assert_int_eq(res.bits[1], 2000429496);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_551
  //                            184467.44073709551617
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844858875.67068571661617
  //                        {{30001, 20000, 10001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_552
  //                            184467.44073709551617
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5533838755.53112184858383
  //                       {{9999, 20000, 29999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_553
  //                            184467.44073709551617
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534207690.41259603961617
  //                        {{10001, 20000, 30001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_554
  //                            184467.44073709551617
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467625290.43559920551617
  //                      {{3000001, 2000000, 1000001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_555
  //                            184467.44073709551617
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            737869.76303428141067
  //                            {{11, 2, 4, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_556
  //                            184467.44073709551617
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467256355.55412501448383
  //                     {{2999999, 2000000, 999999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_557
  //                            184467.44073709551617
  // -                              10
  //   ------------------------------------------------
  //                            184457.44073709551617
  //                            {{1530494977, -232831, 0, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232831);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_558
  //                            184467.44073709551617
  // -                      -133456435
  //   ------------------------------------------------
  //                         133640902.44073709551617
  //                         {{349880321, 2013411072, 724, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 724);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_559
  //                            184467.44073709551617
  // -                              -0.2343453
  //   ------------------------------------------------
  //                            184467.67508239551617
  //                            {{1188433025, 5456, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5456);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_560
  //                            184467.44073709551617
  // -                             127.2343
  //   ------------------------------------------------
  //                            184340.20643709551617
  //                            {{-1702460415, -2962405, 0, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962405);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_561
  //                            184467.44073709551617
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147668115.44073709551617
  //                        {{1, -2009260032, 11642, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260032);
  ck_assert_int_eq(res.bits[2], 11642);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_562
  //                             18446.744078004518913
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -534955.578219181375497
  //                           {{9, 19, 29, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_563
  //                             18446.744078004518913
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            571849.066375190413323
  //                            {{11, 21, 31, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_564
  //                             18446.744078004518913
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                             18502.084310225656157782625
  //                             {{1000033, 1000002, 1003000, 1376256}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000033);
  ck_assert_int_eq(res.bits[1], 1000002);
  ck_assert_int_eq(res.bits[2], 1003000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_565
  //                             18446.744078004518913
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                             18446.688737771868287615542
  //                             {{999990, 999900, 999997, 1376256}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999990);
  ck_assert_int_eq(res.bits[1], 999900);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_566
  //                             18446.744078004518913
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5515576.520984533927487
  //                          {{1599, 9999, 299, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 299);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_567
  //                             18446.744078004518913
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                             18510.06308043985345517608892
  //                             {{100032444, 100000100, 100343253, 1507328}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100032444);
  ck_assert_int_eq(res.bits[1], 100000100);
  ck_assert_int_eq(res.bits[2], 100343253);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_568
  //                             18446.744078004518913
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -166020.696702040670217
  //                           {{9, 9, 9, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_569
  //                             18446.744078004518913
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_570
  //                             18446.744078004518913
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_571
  //                             18446.744078004518913
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800433444.5559219955
  //              {{-1890384141, 999957050, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_572
  //                             18446.744078004518913
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844655961.056373886781087
  //                       {{99999, 99999, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_573
  //                             18446.744078004518913
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800470340.3440780045
  //               {{1120580365, 1000042955, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1120580365);
  ck_assert_int_eq(res.bits[1], 1000042955);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_574
  //                             18446.744078004518913
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844655967.069328101181087
  //                       {{99999, 1499999, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 1499999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_575
  //                             18446.744078004518913
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800470338.0440780045
  //               {{-404583155, 1000042949, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_576
  //                             18446.744078004518913
  // -                               0.0000000001
  //   ------------------------------------------------
  //                             18446.744078004418913
  //                             {{-99999, 0, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_577
  //                             18446.744078004518913
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                             18446.744078004618913
  //                             {{100001, 1, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_578
  //                             18446.744078004518913
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -166020.696659090997257
  //                           {{9, -1, 8, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 8);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_579
  //                             18446.744078004518913
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                                 0.000000000000000
  //                                 {{0, 0, 0, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_580
  //                             18446.744078004518913
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             36893.488194663743490
  //                             {{2, 11, 2, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_581
  //                             18446.744078004518913
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             36893.488156009037826
  //                             {{2, 2, 2, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_582
  //                             18446.744078004518913
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844692854.544529895818913
  //                        {{100001, 100001, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_583
  //                             18446.744078004518913
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971877390.8440780045
  //               {{-404583155, 2000042949, -1294967296, 655360}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 2000042949);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_584
  //                             18446.744078004518913
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844692854.974026625618913
  //                        {{300001, 200001, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_585
  //                             18446.744078004518913
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534004776.227780939581087
  //                       {{99999, 199999, 299999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_586
  //                             18446.744078004518913
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534041669.715936948618913
  //                        {{100001, 200001, 300001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_587
  //                             18446.744078004518913
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467459269.738940114518913
  //                      {{30000001, 20000001, 10000001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_588
  //                             18446.744078004518913
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            571849.066375190413413
  //                            {{101, 21, 31, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_589
  //                             18446.744078004518913
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467422376.250784105481087
  //                     {{29999999, 19999999, 9999999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_590
  //                             18446.744078004518913
  // -                              10
  //   ------------------------------------------------
  //                             18436.744078004518913
  //                             {{-1874919423, -2328306, 0, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1874919423);
  ck_assert_int_eq(res.bits[1], -2328306);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_591
  //                             18446.744078004518913
  // -                      -133456435
  //   ------------------------------------------------
  //                         133474881.744078004518913
  //                         {{-796164095, -1340725759, 7235, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164095);
  ck_assert_int_eq(res.bits[1], -1340725759);
  ck_assert_int_eq(res.bits[2], 7235);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_592
  //                             18446.744078004518913
  // -                              -0.2343453
  //   ------------------------------------------------
  //                             18446.978423304518913
  //                             {{-1000571647, 54563, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1000571647);
  ck_assert_int_eq(res.bits[1], 54563);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_593
  //                             18446.744078004518913
  // -                             127.2343
  //   ------------------------------------------------
  //                             18319.509778004518913
  //                             {{155265025, -29624043, 0, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 155265025);
  ck_assert_int_eq(res.bits[1], -29624043);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_594
  //                             18446.744078004518913
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147502094.744078004518913
  //                        {{1, 1382236161, 116416, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1382236161);
  ck_assert_int_eq(res.bits[2], 116416);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_595
  //                            -18446.744116659224577
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -571849.066413845118987
  //                           {{11, 30, 31, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_596
  //                            -18446.744116659224577
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            534955.578180526669833
  //                            {{9, 10, 29, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_597
  //                            -18446.744116659224577
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            -18391.403884438087332217375
  //                            {{999967, 9999998, 997000, -2146107392}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 997000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_598
  //                            -18446.744116659224577
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                            -18446.799456891875202384458
  //                            {{1000010, 10000100, 1000003, -2146107392}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000010);
  ck_assert_int_eq(res.bits[1], 10000100);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_599
  //                            -18446.744116659224577
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5552470.009179197670977
  //                          {{1601, 10010, 301, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1601);
  ck_assert_int_eq(res.bits[1], 10010);
  ck_assert_int_eq(res.bits[2], 301);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_600
  //                            -18446.744116659224577
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            -18383.42511422389003482391108
  //                            {{99967556, 999999900, 99656747, -2145976320}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99967556);
  ck_assert_int_eq(res.bits[1], 999999900);
  ck_assert_int_eq(res.bits[2], 99656747);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_601
  //                            -18446.744116659224577
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -202914.184896704413707
  //                           {{11, 20, 11, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 20);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_602
  //                            -18446.744116659224577
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                            -18446.744116659224577
  //                            {{1, 10, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_603
  //                            -18446.744116659224577
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                            -18446.744116659224577
  //                            {{1, 10, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_604
  //                            -18446.744116659224577
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800470338.0441166592
  //              {{-404196608, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404196608);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_605
  //                            -18446.744116659224577
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844692854.544568550524577
  //                       {{100001, 100010, 100001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_606
  //                            -18446.744116659224577
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800433446.8558833408
  //               {{-365607168, 999957055, 1000000000, 655360}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -365607168);
  ck_assert_int_eq(res.bits[1], 999957055);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_607
  //                            -18446.744116659224577
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844692860.557522764924577
  //                       {{100001, 1500010, 100001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1500010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_608
  //                            -18446.744116659224577
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800433444.5558833408
  //               {{-1890770688, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890770688);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_609
  //                            -18446.744116659224577
  // -                               0.0000000001
  //   ------------------------------------------------
  //                            -18446.744116659324577
  //                            {{100001, 10, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_610
  //                            -18446.744116659224577
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                            -18446.744116659124577
  //                            {{-99999, 9, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_611
  //                            -18446.744116659224577
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -202914.184853754740747
  //                           {{11, 10, 11, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_612
  //                            -18446.744116659224577
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -36893.488194663743490
  //                            {{2, 11, 2, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_613
  //                            -18446.744116659224577
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                                 0.000000000000000
  //                                 {{0, 0, 0, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_614
  //                            -18446.744116659224577
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                                -0.000038654705664
  //                                {{0, 9, 0, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_615
  //                            -18446.744116659224577
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844655961.056335232075423
  //                        {{99999, 99990, 99999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_616
  //                            -18446.744116659224577
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971840497.3558833408
  //               {{-1890770688, 1999957050, -1294967296, 655360}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890770688);
  ck_assert_int_eq(res.bits[1], 1999957050);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_617
  //                            -18446.744116659224577
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844655961.485831961875423
  //                        {{299999, 199990, 99999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299999);
  ck_assert_int_eq(res.bits[1], 199990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_618
  //                            -18446.744116659224577
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534041669.715975603324577
  //                       {{100001, 200010, 300001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200010);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_619
  //                            -18446.744116659224577
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534004776.227742284875423
  //                        {{99999, 199990, 299999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199990);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_620
  //                            -18446.744116659224577
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467422376.250745450775423
  //                      {{29999999, 19999990, 9999999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999990);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_621
  //                            -18446.744116659224577
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            534955.578180526669923
  //                            {{99, 10, 29, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_622
  //                            -18446.744116659224577
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467459269.738978769224577
  //                     {{30000001, 20000010, 10000001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000010);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_623
  //                            -18446.744116659224577
  // -                              10
  //   ------------------------------------------------
  //                            -18456.744116659224577
  //                            {{1874919425, 2328316, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1874919425);
  ck_assert_int_eq(res.bits[1], 2328316);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_624
  //                            -18446.744116659224577
  // -                      -133456435
  //   ------------------------------------------------
  //                         133437988.255883340775423
  //                         {{-796164097, -1340725770, 7233, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164097);
  ck_assert_int_eq(res.bits[1], -1340725770);
  ck_assert_int_eq(res.bits[2], 7233);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_625
  //                            -18446.744116659224577
  // -                              -0.2343453
  //   ------------------------------------------------
  //                            -18446.509771359224577
  //                            {{1000571649, -54553, 0, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000571649);
  ck_assert_int_eq(res.bits[1], -54553);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_626
  //                            -18446.744116659224577
  // -                             127.2343
  //   ------------------------------------------------
  //                            -18573.978416659224577
  //                            {{-155265023, 29624053, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -155265023);
  ck_assert_int_eq(res.bits[1], 29624053);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_627
  //                            -18446.744116659224577
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147465201.255883340775423
  //                        {{-1, 1382236149, 116414, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 1382236149);
  ck_assert_int_eq(res.bits[2], 116414);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_628
  //                            -18446.744078004518913
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -571849.066375190413323
  //                           {{11, 21, 31, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_629
  //                            -18446.744078004518913
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            534955.578219181375497
  //                            {{9, 19, 29, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_630
  //                            -18446.744078004518913
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            -18391.403845783381668217375
  //                            {{999967, 999998, 997000, -2146107392}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967);
  ck_assert_int_eq(res.bits[1], 999998);
  ck_assert_int_eq(res.bits[2], 997000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_631
  //                            -18446.744078004518913
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                            -18446.799418237169538384458
  //                            {{1000010, 1000100, 1000003, -2146107392}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000010);
  ck_assert_int_eq(res.bits[1], 1000100);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_632
  //                            -18446.744078004518913
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5552470.009140542965313
  //                          {{1601, 10001, 301, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1601);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 301);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_633
  //                            -18446.744078004518913
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            -18383.42507556918437082391108
  //                            {{99967556, 99999900, 99656747, -2145976320}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99967556);
  ck_assert_int_eq(res.bits[1], 99999900);
  ck_assert_int_eq(res.bits[2], 99656747);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_634
  //                            -18446.744078004518913
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -202914.184858049708043
  //                           {{11, 11, 11, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_635
  //                            -18446.744078004518913
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_636
  //                            -18446.744078004518913
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_637
  //                            -18446.744078004518913
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800470338.0440780045
  //              {{-404583155, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_638
  //                            -18446.744078004518913
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844692854.544529895818913
  //                       {{100001, 100001, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_639
  //                            -18446.744078004518913
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800433446.8559219955
  //               {{-365220621, 999957055, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -365220621);
  ck_assert_int_eq(res.bits[1], 999957055);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_640
  //                            -18446.744078004518913
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844692860.557484110218913
  //                       {{100001, 1500001, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1500001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_641
  //                            -18446.744078004518913
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800433444.5559219955
  //               {{-1890384141, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_642
  //                            -18446.744078004518913
  // -                               0.0000000001
  //   ------------------------------------------------
  //                            -18446.744078004618913
  //                            {{100001, 1, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_643
  //                            -18446.744078004518913
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                            -18446.744078004418913
  //                            {{-99999, 0, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_644
  //                            -18446.744078004518913
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -202914.184815100035083
  //                           {{11, 1, 11, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_645
  //                            -18446.744078004518913
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -36893.488156009037826
  //                            {{2, 2, 2, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_646
  //                            -18446.744078004518913
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                                 0.000038654705664
  //                                 {{0, 9, 0, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_647
  //                            -18446.744078004518913
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                                 0.000000000000000
  //                                 {{0, 0, 0, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_648
  //                            -18446.744078004518913
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844655961.056373886781087
  //                        {{99999, 99999, 99999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_649
  //                            -18446.744078004518913
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971840497.3559219955
  //               {{-1890384141, 1999957050, -1294967296, 655360}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 1999957050);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_650
  //                            -18446.744078004518913
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844655961.485870616581087
  //                        {{299999, 199999, 99999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_651
  //                            -18446.744078004518913
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534041669.715936948618913
  //                       {{100001, 200001, 300001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_652
  //                            -18446.744078004518913
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534004776.227780939581087
  //                        {{99999, 199999, 299999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_653
  //                            -18446.744078004518913
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467422376.250784105481087
  //                      {{29999999, 19999999, 9999999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_654
  //                            -18446.744078004518913
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            534955.578219181375587
  //                            {{99, 19, 29, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_655
  //                            -18446.744078004518913
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467459269.738940114518913
  //                     {{30000001, 20000001, 10000001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_656
  //                            -18446.744078004518913
  // -                              10
  //   ------------------------------------------------
  //                            -18456.744078004518913
  //                            {{1874919425, 2328307, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1874919425);
  ck_assert_int_eq(res.bits[1], 2328307);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_657
  //                            -18446.744078004518913
  // -                      -133456435
  //   ------------------------------------------------
  //                         133437988.255921995481087
  //                         {{-796164097, -1340725761, 7233, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164097);
  ck_assert_int_eq(res.bits[1], -1340725761);
  ck_assert_int_eq(res.bits[2], 7233);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_658
  //                            -18446.744078004518913
  // -                              -0.2343453
  //   ------------------------------------------------
  //                            -18446.509732704518913
  //                            {{1000571649, -54562, 0, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000571649);
  ck_assert_int_eq(res.bits[1], -54562);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_659
  //                            -18446.744078004518913
  // -                             127.2343
  //   ------------------------------------------------
  //                            -18573.978378004518913
  //                            {{-155265023, 29624044, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -155265023);
  ck_assert_int_eq(res.bits[1], 29624044);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_660
  //                            -18446.744078004518913
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147465201.255921995481087
  //                        {{-1, 1382236158, 116414, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 1382236158);
  ck_assert_int_eq(res.bits[2], 116414);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_661
  //                       -1844674407.8004518913
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                       -1845227810.12274907719441
  //                       {{10001, 10002, 10003, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_662
  //                       -1844674407.8004518913
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -1844121005.47815470540559
  //                       {{9999, 9998, 9997, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_663
  //                       -1844674407.8004518913
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -1844674352.4602196701627552174
  //                       {{914100654, 1000000000, 999999970, -2146238464}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 999999970);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_664
  //                       -1844674407.8004518913
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -1844674407.8557921239506253845
  //                       {{484603925, 1128849020, 1000000000, -2146238464}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 1128849020);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_665
  //                       -1844674407.8004518913
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -1850208431.0655144297464
  //                       {{1016, 1100, 1003, -2146631680}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 1100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_666
  //                       -1844674407.8004518913
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -1844674344.4814494559654578239
  //                       {{-712832961, -397152862, 999999965, -2146238464}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], -397152862);
  ck_assert_int_eq(res.bits[2], 999999965);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_667
  //                       -1844674407.8004518913
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                       -1844858875.24123193648913
  //                       {{10001, 10001, 10001, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_668
  //                       -1844674407.8004518913
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                       -1844674407.8004518913000
  //                       {{1000, 1000, 1000, -2146631680}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_669
  //                       -1844674407.8004518913
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                       -1844674407.80045189130000
  //                       {{10000, 10000, 10000, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_670
  //                       -1844674407.8004518913
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674409645126299.1004518913
  //              {{1000000001, 1000000001, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_671
  //                       -1844674407.8004518913
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -3689348815.6009037826
  //                       {{2, 2, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_672
  //                       -1844674407.8004518913
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674405955777485.7995481087
  //               {{-1769803777, 1000000004, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000004);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_673
  //                       -1844674407.8004518913
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -3689348821.6138579970
  //                       {{2, 16, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 16);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_674
  //                       -1844674407.8004518913
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674405955777483.4995481087
  //               {{999999999, 999999999, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_675
  //                       -1844674407.8004518913
  // -                               0.0000000001
  //   ------------------------------------------------
  //                       -1844674407.8004518914
  //                       {{2, 1, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_676
  //                       -1844674407.8004518913
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                       -1844674407.8004518912
  //                       {{0, 1, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_677
  //                       -1844674407.8004518913
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                       -1844858875.24118898681617
  //                       {{10001, 10000, 10001, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_678
  //                       -1844674407.8004518913
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                       -1844692854.544529895818913
  //                       {{100001, 100001, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_679
  //                       -1844674407.8004518913
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -1844655961.056335232075423
  //                       {{99999, 99990, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_680
  //                       -1844674407.8004518913
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -1844655961.056373886781087
  //                       {{99999, 99999, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_681
  //                       -1844674407.8004518913
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_682
  //                       -1844674407.8004518913
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023221127184536.2995481087
  //               {{999999999, 1999999999, -1294967297, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999999);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_683
  //                       -1844674407.8004518913
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                                 0.4294967298
  //                                 {{2, 1, 0, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_684
  //                       -1844674407.8004518913
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -7378697630.7723108354
  //                       {{2, 3, 4, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_685
  //                       -1844674407.8004518913
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        3689348815.1714070528
  //                        {{0, 1, 2, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_686
  //                       -1844674407.8004518913
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      182622766415.1944102187
  //                      {{299, 199, 99, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_687
  //                       -1844674407.8004518913
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -1844121005.47815470540550
  //                       {{9990, 9998, 9997, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_688
  //                       -1844674407.8004518913
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -186312115230.7953140013
  //                     {{301, 201, 101, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_689
  //                       -1844674407.8004518913
  // -                              10
  //   ------------------------------------------------
  //                       -1844674417.8004518913
  //                       {{1215752193, 24, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 24);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_690
  //                       -1844674407.8004518913
  // -                      -133456435
  //   ------------------------------------------------
  //                       -1711217972.8004518913
  //                       {{1683592193, -310727476, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_691
  //                       -1844674407.8004518913
  // -                              -0.2343453
  //   ------------------------------------------------
  //                       -1844674407.5661065913
  //                       {{1951514297, 0, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_692
  //                       -1844674407.8004518913
  // -                             127.2343
  //   ------------------------------------------------
  //                       -1844674535.0347518913
  //                       {{1032680385, 297, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 297);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_693
  //                       -1844674407.8004518913
  // -                     -2147483648
  //   ------------------------------------------------
  //                         302809240.1995481087
  //                         {{-1, 705032702, 0, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032702);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_694
  //              -5534023222971858944.1
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //              -5534023222972412346.4222971859
  //              {{1811748819, 2001288490, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_695
  //              -5534023222971858944.1
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //              -5534023222971305541.7777028141
  //              {{188251181, 1998711510, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_696
  //              -5534023222971858944.1
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //              -5534023222971858888.7597677789
  //              {{1648458973, 1999999871, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1648458973);
  ck_assert_int_eq(res.bits[1], 1999999871);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_697
  //              -5534023222971858944.1
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //              -5534023222971858944.1553402327
  //              {{1553402327, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1553402327);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_698
  //              -5534023222971858944.1
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //              -5534023222977392967.3650625384
  //              {{948460392, 2012884902, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 948460392);
  ck_assert_int_eq(res.bits[1], 2012884902);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_699
  //              -5534023222971858944.1
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //              -5534023222971858880.7809975647
  //              {{-829831841, 1999999852, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -829831841);
  ck_assert_int_eq(res.bits[1], 1999999852);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_700
  //              -5534023222971858944.1
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //              -5534023222972043411.5407800452
  //              {{-160929660, 2000429496, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -160929660);
  ck_assert_int_eq(res.bits[1], 2000429496);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_701
  //              -5534023222971858944.1
  // -                               0.0000000000000
  //   ------------------------------------------------
  //              -5534023222971858944.1000000000
  //              {{1000000000, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_702
  //              -5534023222971858944.1
  // -                               0.00000000000000
  //   ------------------------------------------------
  //              -5534023222971858944.1000000000
  //              {{1000000000, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_703
  //              -5534023222971858944.1
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -7378697630772310835.4
  //              {{2, 3, 4, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_704
  //              -5534023222971858944.1
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //              -5534023224816533351.9004518913
  //              {{1000000001, 2000000001, -1294967295, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000001);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_705
  //              -5534023222971858944.1
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //              -3689348815171407050.5
  //              {{-23, 0, 2, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -23);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_706
  //              -5534023222971858944.1
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //              -5534023224816533357.9134061057
  //              {{1000000001, 2000000015, -1294967295, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000015);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_707
  //              -5534023222971858944.1
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //              -3689348815171407052.8
  //              {{0, 1, 2, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_708
  //              -5534023222971858944.1
  // -                               0.0000000001
  //   ------------------------------------------------
  //              -5534023222971858944.1000000001
  //              {{1000000001, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_709
  //              -5534023222971858944.1
  // -                              -0.0000000001
  //   ------------------------------------------------
  //              -5534023222971858944.0999999999
  //              {{999999999, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_710
  //              -5534023222971858944.1
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //              -5534023222972043411.5407370955
  //              {{-161359157, 2000429496, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161359157);
  ck_assert_int_eq(res.bits[1], 2000429496);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_711
  //              -5534023222971858944.1
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //              -5534023222971877390.8440780045
  //              {{-404583155, 2000042949, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 2000042949);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_712
  //              -5534023222971858944.1
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //              -5534023222971840497.3558833408
  //              {{-1890770688, 1999957050, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890770688);
  ck_assert_int_eq(res.bits[1], 1999957050);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_713
  //              -5534023222971858944.1
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //              -5534023222971840497.3559219955
  //              {{-1890384141, 1999957050, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 1999957050);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_714
  //              -5534023222971858944.1
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //              -5534023221127184536.2995481087
  //              {{999999999, 1999999999, -1294967297, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999999);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_715
  //              -5534023222971858944.1
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //                                 0.0
  //                                 {{0, 0, 0, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_716
  //              -5534023222971858944.1
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //              -5534023221127184535.8700513789
  //              {{999999997, 1999999998, -1294967297, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999997);
  ck_assert_int_eq(res.bits[1], 1999999998);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_717
  //              -5534023222971858944.1
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //              -5534023228505882167.0718589441
  //              {{1000000001, 2000000002, -1294967293, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000002);
  ck_assert_int_eq(res.bits[2], -1294967293);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_718
  //              -5534023222971858944.1
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //              -5534023217437835721.1281410559
  //              {{999999999, 1999999998, -1294967299, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999998);
  ck_assert_int_eq(res.bits[2], -1294967299);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_719
  //              -5534023222971858944.1
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //              -5534023038504418121.10513789
  //              {{9999997, 19999998, 29999999, -2146959360}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_720
  //              -5534023222971858944.1
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //              -5534023222971305541.7777028141
  //              {{188251181, 1998711510, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_721
  //              -5534023222971858944.1
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //              -5534023407439299767.09486211
  //              {{10000003, 20000002, 30000001, -2146959360}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_722
  //              -5534023222971858944.1
  // -                              10
  //   ------------------------------------------------
  //              -5534023222971858954.1
  //              {{101, 2, 3, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_723
  //              -5534023222971858944.1
  // -                      -133456435
  //   ------------------------------------------------
  //              -5534023222838402509.1
  //              {{-1334564349, 1, 3, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564349);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_724
  //              -5534023222971858944.1
  // -                              -0.2343453
  //   ------------------------------------------------
  //              -5534023222971858943.8656547
  //              {{-1343453, 1999999, 3000000, -2147024896}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1343453);
  ck_assert_int_eq(res.bits[1], 1999999);
  ck_assert_int_eq(res.bits[2], 3000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_725
  //              -5534023222971858944.1
  // -                             127.2343
  //   ------------------------------------------------
  //              -5534023222971859071.3343
  //              {{1273343, 2000, 3000, -2147221504}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1273343);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_726
  //              -5534023222971858944.1
  // -                     -2147483648
  //   ------------------------------------------------
  //              -5534023220824375296.1
  //              {{1, -3, 2, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -3);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_727
  //                       -1844674408.2299486211
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                       -1845227810.55224580699441
  //                       {{30001, 20002, 10003, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_728
  //                       -1844674408.2299486211
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -1844121005.90765143520559
  //                       {{29999, 19998, 9997, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_729
  //                       -1844674408.2299486211
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -1844674352.8897163999627552174
  //                       {{-1380866642, 2000000000, 999999970, -2146238464}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1380866642);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], 999999970);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_730
  //                       -1844674408.2299486211
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -1844674408.2852888537506253845
  //                       {{-1810363371, 2128849020, 1000000000, -2146238464}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1810363371);
  ck_assert_int_eq(res.bits[1], 2128849020);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_731
  //                       -1844674408.2299486211
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -1850208431.4950111595464
  //                       {{3016, 2100, 1003, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3016);
  ck_assert_int_eq(res.bits[1], 2100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_732
  //                       -1844674408.2299486211
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -1844674344.9109461857654578239
  //                       {{1287167039, 602847139, 999999966, -2146238464}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1287167039);
  ck_assert_int_eq(res.bits[1], 602847139);
  ck_assert_int_eq(res.bits[2], 999999966);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_733
  //                       -1844674408.2299486211
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                       -1844858875.67072866628913
  //                       {{30001, 20001, 10001, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_734
  //                       -1844674408.2299486211
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                       -1844674408.2299486211000
  //                       {{3000, 2000, 1000, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_735
  //                       -1844674408.2299486211
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                       -1844674408.22994862110000
  //                       {{30000, 20000, 10000, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_736
  //                       -1844674408.2299486211
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674409645126299.5299486211
  //              {{1000000003, 1000000002, 1000000001, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_737
  //                       -1844674408.2299486211
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -3689348816.0304005124
  //                       {{4, 3, 2, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_738
  //                       -1844674408.2299486211
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674405955777485.3700513789
  //               {{-1769803779, 1000000003, 999999999, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803779);
  ck_assert_int_eq(res.bits[1], 1000000003);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_739
  //                       -1844674408.2299486211
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -3689348822.0433547268
  //                       {{4, 17, 2, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 17);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_740
  //                       -1844674408.2299486211
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674405955777483.0700513789
  //               {{999999997, 999999998, 999999999, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999997);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_741
  //                       -1844674408.2299486211
  // -                               0.0000000001
  //   ------------------------------------------------
  //                       -1844674408.2299486212
  //                       {{4, 2, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_742
  //                       -1844674408.2299486211
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                       -1844674408.2299486210
  //                       {{2, 2, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_743
  //                       -1844674408.2299486211
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                       -1844858875.67068571661617
  //                       {{30001, 20000, 10001, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_744
  //                       -1844674408.2299486211
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                       -1844692854.974026625618913
  //                       {{300001, 200001, 100001, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_745
  //                       -1844674408.2299486211
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -1844655961.485831961875423
  //                       {{299999, 199990, 99999, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299999);
  ck_assert_int_eq(res.bits[1], 199990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_746
  //                       -1844674408.2299486211
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -1844655961.485870616581087
  //                       {{299999, 199999, 99999, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_747
  //                       -1844674408.2299486211
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                                -0.4294967298
  //                                {{2, 1, 0, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_748
  //                       -1844674408.2299486211
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023221127184535.8700513789
  //               {{999999997, 1999999998, -1294967297, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999997);
  ck_assert_int_eq(res.bits[1], 1999999998);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_749
  //                       -1844674408.2299486211
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_750
  //                       -1844674408.2299486211
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -7378697631.2018075652
  //                       {{4, 4, 4, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_751
  //                       -1844674408.2299486211
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        3689348814.7419103230
  //                        {{-2, -1, 1, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_752
  //                       -1844674408.2299486211
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      182622766414.7649134889
  //                      {{297, 198, 99, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 297);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_753
  //                       -1844674408.2299486211
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -1844121005.90765143520550
  //                       {{29990, 19998, 9997, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29990);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_754
  //                       -1844674408.2299486211
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -186312115231.2248107311
  //                     {{303, 202, 101, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 303);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_755
  //                       -1844674408.2299486211
  // -                              10
  //   ------------------------------------------------
  //                       -1844674418.2299486211
  //                       {{1215752195, 25, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752195);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_756
  //                       -1844674408.2299486211
  // -                      -133456435
  //   ------------------------------------------------
  //                       -1711217973.2299486211
  //                       {{1683592195, -310727475, 0, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592195);
  ck_assert_int_eq(res.bits[1], -310727475);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_757
  //                       -1844674408.2299486211
  // -                              -0.2343453
  //   ------------------------------------------------
  //                       -1844674407.9956033211
  //                       {{1951514299, 1, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514299);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_758
  //                       -1844674408.2299486211
  // -                             127.2343
  //   ------------------------------------------------
  //                       -1844674535.4642486211
  //                       {{1032680387, 298, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680387);
  ck_assert_int_eq(res.bits[1], 298);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_759
  //                       -1844674408.2299486211
  // -                     -2147483648
  //   ------------------------------------------------
  //                         302809239.7700513789
  //                         {{-3, 705032701, 0, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -3);
  ck_assert_int_eq(res.bits[1], 705032701);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_760
  //                        5534023222.9718589441
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                        5533469820.64956175820559
  //                        {{9999, 19998, 29997, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_761
  //                        5534023222.9718589441
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                        5534576625.29415612999441
  //                        {{10001, 20002, 30003, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_762
  //                        5534023222.9718589441
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        5534023278.3120911652372447826
  //                        {{1085899346, 2000000000, -1294967266, 1245184}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967266);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_763
  //                        5534023222.9718589441
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                        5534023222.9165187114493746155
  //                        {{1515396075, 1871150980, -1294967296, 1245184}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 1871150980);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_764
  //                        5534023222.9718589441
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                        5528489199.7067964056536
  //                        {{984, 1900, 2997, 851968}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 1900);
  ck_assert_int_eq(res.bits[2], 2997);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_765
  //                        5534023222.9718589441
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        5534023286.2908613794345421761
  //                        {{-1582134335, -897814435, -1294967262, 1245184}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -897814435);
  ck_assert_int_eq(res.bits[2], -1294967262);
  ck_assert_int_eq(res.bits[3], 1245184);

#test sub_766
  //                        5534023222.9718589441
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                        5533838755.53107889891087
  //                        {{9999, 19999, 29999, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19999);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_767
  //                        5534023222.9718589441
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                        5534023222.9718589441000
  //                        {{1000, 2000, 3000, 851968}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_768
  //                        5534023222.9718589441
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                        5534023222.97185894410000
  //                        {{10000, 20000, 30000, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_769
  //                        5534023222.9718589441
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674402266428668.3281410559
  //              {{999999999, 999999998, 999999997, -2146828288}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_770
  //                        5534023222.9718589441
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                        3689348815.1714070528
  //                        {{0, 1, 2, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_771
  //                        5534023222.9718589441
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674413334475116.5718589441
  //               {{-1769803775, 1000000007, 1000000003, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000007);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_772
  //                        5534023222.9718589441
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                        3689348809.1584528384
  //                        {{0, -13, 1, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -13);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_773
  //                        5534023222.9718589441
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674413334475114.2718589441
  //               {{1000000001, 1000000002, 1000000003, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_774
  //                        5534023222.9718589441
  // -                               0.0000000001
  //   ------------------------------------------------
  //                        5534023222.9718589440
  //                        {{0, 2, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_775
  //                        5534023222.9718589441
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                        5534023222.9718589442
  //                        {{2, 2, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_776
  //                        5534023222.9718589441
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                        5533838755.53112184858383
  //                        {{9999, 20000, 29999, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_777
  //                        5534023222.9718589441
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                        5534004776.227780939581087
  //                        {{99999, 199999, 299999, 983040}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_778
  //                        5534023222.9718589441
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                        5534041669.715975603324577
  //                        {{100001, 200010, 300001, 983040}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200010);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_779
  //                        5534023222.9718589441
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                        5534041669.715936948618913
  //                        {{100001, 200001, 300001, 983040}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_780
  //                        5534023222.9718589441
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        7378697630.7723108354
  //                        {{2, 3, 4, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_781
  //                        5534023222.9718589441
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023228505882167.0718589441
  //               {{1000000001, 2000000002, -1294967293, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000002);
  ck_assert_int_eq(res.bits[2], -1294967293);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_782
  //                        5534023222.9718589441
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        7378697631.2018075652
  //                        {{4, 4, 4, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_783
  //                        5534023222.9718589441
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_784
  //                        5534023222.9718589441
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       11068046445.9437178882
  //                       {{2, 4, 6, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_785
  //                        5534023222.9718589441
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      190001464045.9667210541
  //                      {{301, 202, 103, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_786
  //                        5534023222.9718589441
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                        5534576625.29415612999450
  //                        {{10010, 20002, 30003, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_787
  //                        5534023222.9718589441
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -178933417600.0230031659
  //                     {{299, 198, 97, -2146828288}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_788
  //                        5534023222.9718589441
  // -                              10
  //   ------------------------------------------------
  //                        5534023212.9718589441
  //                        {{-1215752191, -22, 2, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_789
  //                        5534023222.9718589441
  // -                      -133456435
  //   ------------------------------------------------
  //                        5667479657.9718589441
  //                        {{-1683592191, 310727478, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727478);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_790
  //                        5534023222.9718589441
  // -                              -0.2343453
  //   ------------------------------------------------
  //                        5534023223.2062042441
  //                        {{-1951514295, 2, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_791
  //                        5534023222.9718589441
  // -                             127.2343
  //   ------------------------------------------------
  //                        5534023095.7375589441
  //                        {{-1032680383, -295, 2, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -295);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_792
  //                        5534023222.9718589441
  // -                     -2147483648
  //   ------------------------------------------------
  //                        7681506870.9718589441
  //                        {{1, 705032706, 4, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032706);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_793
  //                       -5534023222.9718589441
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                       -5534576625.29415612999441
  //                       {{10001, 20002, 30003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_794
  //                       -5534023222.9718589441
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -5533469820.64956175820559
  //                       {{9999, 19998, 29997, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_795
  //                       -5534023222.9718589441
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -5534023167.6316267229627552174
  //                       {{914100654, 2000000000, -1294967326, -2146238464}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967326);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_796
  //                       -5534023222.9718589441
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -5534023223.0271991767506253845
  //                       {{484603925, 2128849020, -1294967296, -2146238464}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 2128849020);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_797
  //                       -5534023222.9718589441
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -5539557246.2369214825464
  //                       {{1016, 2100, 3003, -2146631680}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 2100);
  ck_assert_int_eq(res.bits[2], 3003);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_798
  //                       -5534023222.9718589441
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -5534023159.6528565087654578239
  //                       {{-712832961, 602847138, -1294967330, -2146238464}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], 602847138);
  ck_assert_int_eq(res.bits[2], -1294967330);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_799
  //                       -5534023222.9718589441
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                       -5534207690.41263898928913
  //                       {{10001, 20001, 30001, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20001);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_800
  //                       -5534023222.9718589441
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                       -5534023222.9718589441000
  //                       {{1000, 2000, 3000, -2146631680}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_801
  //                       -5534023222.9718589441
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                       -5534023222.97185894410000
  //                       {{10000, 20000, 30000, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_802
  //                       -5534023222.9718589441
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674413334475114.2718589441
  //              {{1000000001, 1000000002, 1000000003, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_803
  //                       -5534023222.9718589441
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -7378697630.7723108354
  //                       {{2, 3, 4, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_804
  //                       -5534023222.9718589441
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674402266428670.6281410559
  //               {{-1769803777, 1000000003, 999999997, 655360}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000003);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_805
  //                       -5534023222.9718589441
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -7378697636.7852650498
  //                       {{2, 17, 4, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 17);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_806
  //                       -5534023222.9718589441
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674402266428668.3281410559
  //               {{999999999, 999999998, 999999997, 655360}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_807
  //                       -5534023222.9718589441
  // -                               0.0000000001
  //   ------------------------------------------------
  //                       -5534023222.9718589442
  //                       {{2, 2, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_808
  //                       -5534023222.9718589441
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                       -5534023222.9718589440
  //                       {{0, 2, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_809
  //                       -5534023222.9718589441
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                       -5534207690.41259603961617
  //                       {{10001, 20000, 30001, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_810
  //                       -5534023222.9718589441
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                       -5534041669.715936948618913
  //                       {{100001, 200001, 300001, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_811
  //                       -5534023222.9718589441
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -5534004776.227742284875423
  //                       {{99999, 199990, 299999, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199990);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_812
  //                       -5534023222.9718589441
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -5534004776.227780939581087
  //                       {{99999, 199999, 299999, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_813
  //                       -5534023222.9718589441
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -3689348815.1714070528
  //                       {{0, 1, 2, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_814
  //                       -5534023222.9718589441
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023217437835721.1281410559
  //               {{999999999, 1999999998, -1294967299, 655360}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999998);
  ck_assert_int_eq(res.bits[2], -1294967299);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_815
  //                       -5534023222.9718589441
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -3689348814.7419103230
  //                       {{-2, -1, 1, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_816
  //                       -5534023222.9718589441
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                      -11068046445.9437178882
  //                      {{2, 4, 6, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_817
  //                       -5534023222.9718589441
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_818
  //                       -5534023222.9718589441
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      178933417600.0230031659
  //                      {{299, 198, 97, 655360}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_819
  //                       -5534023222.9718589441
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -5533469820.64956175820550
  //                       {{9990, 19998, 29997, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_820
  //                       -5534023222.9718589441
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -190001464045.9667210541
  //                     {{301, 202, 103, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_821
  //                       -5534023222.9718589441
  // -                              10
  //   ------------------------------------------------
  //                       -5534023232.9718589441
  //                       {{1215752193, 25, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_822
  //                       -5534023222.9718589441
  // -                      -133456435
  //   ------------------------------------------------
  //                       -5400566787.9718589441
  //                       {{1683592193, -310727475, 2, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727475);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_823
  //                       -5534023222.9718589441
  // -                              -0.2343453
  //   ------------------------------------------------
  //                       -5534023222.7375136441
  //                       {{1951514297, 1, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_824
  //                       -5534023222.9718589441
  // -                             127.2343
  //   ------------------------------------------------
  //                       -5534023350.2061589441
  //                       {{1032680385, 298, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 298);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_825
  //                       -5534023222.9718589441
  // -                     -2147483648
  //   ------------------------------------------------
  //                       -3386539574.9718589441
  //                       {{1, -705032702, 1, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -705032702);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_826
  //                     -184467440822.99486211
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                     -184467994225.31715929589441
  //                     {{3000001, 2000002, 1000003, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_827
  //                     -184467440822.99486211
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                     -184466887420.67256492410559
  //                     {{2999999, 1999998, 999997, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_828
  //                     -184467440822.99486211
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                     -184467440767.65462988886275522
  //                     {{-436832830, 711509811, 1000000000, -2146369536}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -436832830);
  ck_assert_int_eq(res.bits[1], 711509811);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test sub_829
  //                     -184467440822.99486211
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                     -184467440823.05020234265062538
  //                     {{-441127798, 2001288490, 1000000000, -2146369536}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -441127798);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test sub_830
  //                     -184467440822.99486211
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                     -184472974846.2599246484464
  //                     {{300016, 200100, 100003, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300016);
  ck_assert_int_eq(res.bits[1], 200100);
  ck_assert_int_eq(res.bits[2], 100003);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_831
  //                     -184467440822.99486211
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                     -184467440759.67585967466545782
  //                     {{1909129846, 525739591, 1000000000, -2146369536}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1909129846);
  ck_assert_int_eq(res.bits[1], 525739591);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test sub_832
  //                     -184467440822.99486211
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                     -184467625290.43564215518913
  //                     {{3000001, 2000001, 1000001, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000001);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_833
  //                     -184467440822.99486211
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                     -184467440822.9948621100000
  //                     {{300000, 200000, 100000, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_834
  //                     -184467440822.99486211
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                     -184467440822.99486211000000
  //                     {{3000000, 2000000, 1000000, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_835
  //                     -184467440822.99486211
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674592267892714.29486211
  //              {{10000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_836
  //                     -184467440822.99486211
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                     -186312115230.7953140013
  //                     {{301, 201, 101, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_837
  //                     -184467440822.99486211
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674223333011070.60513789
  //               {{239999997, 9999998, 9999999, 524288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 239999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_838
  //                     -184467440822.99486211
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                     -186312115236.8082682157
  //                     {{301, 215, 101, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 215);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_839
  //                     -184467440822.99486211
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674223333011068.30513789
  //               {{9999997, 9999998, 9999999, 524288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_840
  //                     -184467440822.99486211
  // -                               0.0000000001
  //   ------------------------------------------------
  //                     -184467440822.9948621101
  //                     {{301, 200, 100, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_841
  //                     -184467440822.99486211
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                     -184467440822.9948621099
  //                     {{299, 200, 100, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_842
  //                     -184467440822.99486211
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                     -184467625290.43559920551617
  //                     {{3000001, 2000000, 1000001, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_843
  //                     -184467440822.99486211
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                     -184467459269.738940114518913
  //                     {{30000001, 20000001, 10000001, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_844
  //                     -184467440822.99486211
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                     -184467422376.250745450775423
  //                     {{29999999, 19999990, 9999999, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999990);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_845
  //                     -184467440822.99486211
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                     -184467422376.250784105481087
  //                     {{29999999, 19999999, 9999999, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_846
  //                     -184467440822.99486211
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                     -182622766415.1944102187
  //                     {{299, 199, 99, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_847
  //                     -184467440822.99486211
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023038504418121.10513789
  //               {{9999997, 19999998, 29999999, 524288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29999999);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_848
  //                     -184467440822.99486211
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                     -182622766414.7649134889
  //                     {{297, 198, 99, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 297);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_849
  //                     -184467440822.99486211
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                     -190001464045.9667210541
  //                     {{301, 202, 103, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_850
  //                     -184467440822.99486211
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                     -178933417600.0230031659
  //                     {{299, 198, 97, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_851
  //                     -184467440822.99486211
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                                 0.00000000
  //                                 {{0, 0, 0, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_852
  //                     -184467440822.99486211
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                     -184466887420.67256492410550
  //                     {{2999990, 1999998, 999997, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999990);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_853
  //                     -184467440822.99486211
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -368934881645.98972422
  //                     {{6, 4, 2, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 6);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_854
  //                     -184467440822.99486211
  // -                              10
  //   ------------------------------------------------
  //                     -184467440832.99486211
  //                     {{1000000003, 2, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_855
  //                     -184467440822.99486211
  // -                      -133456435
  //   ------------------------------------------------
  //                     -184333984387.99486211
  //                     {{1004678403, -3107273, 0, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1004678403);
  ck_assert_int_eq(res.bits[1], -3107273);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_856
  //                     -184467440822.99486211
  // -                              -0.2343453
  //   ------------------------------------------------
  //                     -184467440822.76051681
  //                     {{-23434527, 1, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -23434527);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_857
  //                     -184467440822.99486211
  // -                             127.2343
  //   ------------------------------------------------
  //                     -184467440950.22916211
  //                     {{-161471885, 4, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161471885);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_858
  //                     -184467440822.99486211
  // -                     -2147483648
  //   ------------------------------------------------
  //                     -182319957174.99486211
  //                     {{3, -49999998, 0, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], -49999998);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_859
  //                           -553402.32229718589450
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                          -1106804.64459437178891
  //                          {{11, 4, 6, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_860
  //                           -553402.32229718589450
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                                -0.00000000000009
  //                                {{9, 0, 0, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_861
  //                           -553402.32229718589450
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                           -553346.982064964757255217375
  //                           {{99999967, 19999998, 29997000, -2146107392}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999967);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29997000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_862
  //                           -553402.32229718589450
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                           -553402.377637418545125384458
  //                           {{100000010, 20000100, 30000003, -2146107392}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100000010);
  ck_assert_int_eq(res.bits[1], 20000100);
  ck_assert_int_eq(res.bits[2], 30000003);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_863
  //                           -553402.32229718589450
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -6087425.58735972434090
  //                          {{170, 1002, 33, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 170);
  ck_assert_int_eq(res.bits[1], 1002);
  ck_assert_int_eq(res.bits[2], 33);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_864
  //                           -553402.32229718589450
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                           -553339.00329475055995782391108
  //                           {{1410032964, 1999999902, -1295310549, -2145976320}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1410032964);
  ck_assert_int_eq(res.bits[1], 1999999902);
  ck_assert_int_eq(res.bits[2], -1295310549);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test sub_865
  //                           -553402.32229718589450
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -737869.76307723108363
  //                           {{11, 3, 4, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_866
  //                           -553402.32229718589450
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589450
  //                           {{10, 2, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_867
  //                           -553402.32229718589450
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589450
  //                           {{10, 2, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_868
  //                           -553402.32229718589450
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_869
  //                           -553402.32229718589450
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1845227810.12274907719450
  //                       {{10010, 10002, 10003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_870
  //                           -553402.32229718589450
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407799898491.2777028141
  //               {{1713414701, 998711515, 1000000000, 655360}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1713414701);
  ck_assert_int_eq(res.bits[1], 998711515);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_871
  //                           -553402.32229718589450
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1845227816.13570329159450
  //                       {{10010, 150002, 10003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 150002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_872
  //                           -553402.32229718589450
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_873
  //                           -553402.32229718589450
  // -                               0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718599450
  //                           {{10010, 2, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_874
  //                           -553402.32229718589450
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718579450
  //                           {{-9990, 1, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9990);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_875
  //                           -553402.32229718589450
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -737869.76303428141067
  //                           {{11, 2, 4, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_876
  //                           -553402.32229718589450
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                           -571849.066375190413413
  //                           {{101, 21, 31, -2146500608}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_877
  //                           -553402.32229718589450
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                           -534955.578180526669923
  //                           {{99, 10, 29, -2146500608}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_878
  //                           -553402.32229718589450
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                           -534955.578219181375587
  //                           {{99, 19, 29, -2146500608}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_879
  //                           -553402.32229718589450
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844121005.47815470540550
  //                        {{9990, 9998, 9997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_880
  //                           -553402.32229718589450
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971305541.7777028141
  //               {{188251181, 1998711510, -1294967296, 655360}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_881
  //                           -553402.32229718589450
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844121005.90765143520550
  //                        {{29990, 19998, 9997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29990);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_882
  //                           -553402.32229718589450
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534576625.29415612999450
  //                       {{10010, 20002, 30003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_883
  //                           -553402.32229718589450
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5533469820.64956175820550
  //                        {{9990, 19998, 29997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_884
  //                           -553402.32229718589450
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184466887420.67256492410550
  //                      {{2999990, 1999998, 999997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999990);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_885
  //                           -553402.32229718589450
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_886
  //                           -553402.32229718589450
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467994225.31715929589450
  //                     {{3000010, 2000002, 1000003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000010);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_887
  //                           -553402.32229718589450
  // -                              10
  //   ------------------------------------------------
  //                           -553412.32229718589450
  //                           {{-1530494966, 232832, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494966);
  ck_assert_int_eq(res.bits[1], 232832);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_888
  //                           -553402.32229718589450
  // -                      -133456435
  //   ------------------------------------------------
  //                         132903032.67770281410550
  //                         {{349880310, 2013411070, 720, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880310);
  ck_assert_int_eq(res.bits[1], 2013411070);
  ck_assert_int_eq(res.bits[2], 720);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_889
  //                           -553402.32229718589450
  // -                              -0.2343453
  //   ------------------------------------------------
  //                           -553402.08795188589450
  //                           {{-1188433014, -5455, 2, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433014);
  ck_assert_int_eq(res.bits[1], -5455);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_890
  //                           -553402.32229718589450
  // -                             127.2343
  //   ------------------------------------------------
  //                           -553529.55659718589450
  //                           {{1702460426, 2962406, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460426);
  ck_assert_int_eq(res.bits[1], 2962406);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_891
  //                           -553402.32229718589450
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2146930245.67770281410550
  //                        {{-10, -2009260035, 11638, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -10);
  ck_assert_int_eq(res.bits[1], -2009260035);
  ck_assert_int_eq(res.bits[2], 11638);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_892
  //                      184467440822.99486211
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                      184466887420.67256492410559
  //                      {{2999999, 1999998, 999997, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_893
  //                      184467440822.99486211
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                      184467994225.31715929589441
  //                      {{3000001, 2000002, 1000003, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_894
  //                      184467440822.99486211
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                      184467440878.33509433113724478
  //                      {{2141865534, -1006477107, 1000000000, 1114112}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2141865534);
  ck_assert_int_eq(res.bits[1], -1006477107);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test sub_895
  //                      184467440822.99486211
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                      184467440822.93952187734937462
  //                      {{2146160502, 1998711510, 1000000000, 1114112}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2146160502);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test sub_896
  //                      184467440822.99486211
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                      184461906799.7297995715536
  //                      {{299984, 199900, 99997, 851968}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299984);
  ck_assert_int_eq(res.bits[1], 199900);
  ck_assert_int_eq(res.bits[2], 99997);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_897
  //                      184467440822.99486211
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                      184467440886.31386454533454218
  //                      {{-204097142, -820706887, 1000000000, 1114112}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -204097142);
  ck_assert_int_eq(res.bits[1], -820706887);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test sub_898
  //                      184467440822.99486211
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                      184467256355.55408206481087
  //                      {{2999999, 1999999, 999999, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999999);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_899
  //                      184467440822.99486211
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                      184467440822.9948621100000
  //                      {{300000, 200000, 100000, 851968}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_900
  //                      184467440822.99486211
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                      184467440822.99486211000000
  //                      {{3000000, 2000000, 1000000, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_901
  //                      184467440822.99486211
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674223333011068.30513789
  //              {{9999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_902
  //                      184467440822.99486211
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                      182622766415.1944102187
  //                      {{299, 199, 99, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_903
  //                      184467440822.99486211
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674592267892716.59486211
  //               {{240000003, 10000002, 10000001, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 240000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_904
  //                      184467440822.99486211
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                      182622766409.1814560043
  //                      {{299, 185, 99, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 185);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_905
  //                      184467440822.99486211
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674592267892714.29486211
  //               {{10000003, 10000002, 10000001, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_906
  //                      184467440822.99486211
  // -                               0.0000000001
  //   ------------------------------------------------
  //                      184467440822.9948621099
  //                      {{299, 200, 100, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_907
  //                      184467440822.99486211
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                      184467440822.9948621101
  //                      {{301, 200, 100, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_908
  //                      184467440822.99486211
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                      184467256355.55412501448383
  //                      {{2999999, 2000000, 999999, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_909
  //                      184467440822.99486211
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                      184467422376.250784105481087
  //                      {{29999999, 19999999, 9999999, 983040}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_910
  //                      184467440822.99486211
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                      184467459269.738978769224577
  //                      {{30000001, 20000010, 10000001, 983040}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000010);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_911
  //                      184467440822.99486211
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                      184467459269.738940114518913
  //                      {{30000001, 20000001, 10000001, 983040}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_912
  //                      184467440822.99486211
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                      186312115230.7953140013
  //                      {{301, 201, 101, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_913
  //                      184467440822.99486211
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023407439299767.09486211
  //               {{10000003, 20000002, 30000001, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30000001);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_914
  //                      184467440822.99486211
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                      186312115231.2248107311
  //                      {{303, 202, 101, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 303);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_915
  //                      184467440822.99486211
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                      178933417600.0230031659
  //                      {{299, 198, 97, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_916
  //                      184467440822.99486211
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                      190001464045.9667210541
  //                      {{301, 202, 103, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_917
  //                      184467440822.99486211
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      368934881645.98972422
  //                      {{6, 4, 2, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 6);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_918
  //                      184467440822.99486211
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                      184467994225.31715929589450
  //                      {{3000010, 2000002, 1000003, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000010);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_919
  //                      184467440822.99486211
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                                 0.00000000
  //                                 {{0, 0, 0, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_920
  //                      184467440822.99486211
  // -                              10
  //   ------------------------------------------------
  //                      184467440812.99486211
  //                      {{-999999997, 1, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -999999997);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_921
  //                      184467440822.99486211
  // -                      -133456435
  //   ------------------------------------------------
  //                      184600897257.99486211
  //                      {{-1004678397, 3107276, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1004678397);
  ck_assert_int_eq(res.bits[1], 3107276);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_922
  //                      184467440822.99486211
  // -                              -0.2343453
  //   ------------------------------------------------
  //                      184467440823.22920741
  //                      {{23434533, 2, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23434533);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_923
  //                      184467440822.99486211
  // -                             127.2343
  //   ------------------------------------------------
  //                      184467440695.76056211
  //                      {{161471891, -1, 0, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161471891);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_924
  //                      184467440822.99486211
  // -                     -2147483648
  //   ------------------------------------------------
  //                      186614924470.99486211
  //                      {{3, 50000002, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], 50000002);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_925
  //                                10
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553392.32229718589441
  //                           {{1530494977, -232829, 2, -2146566144}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232829);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_926
  //                                10
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553412.32229718589441
  //                            {{-1530494975, 232832, 3, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232832);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_927
  //                                10
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                65.340232221137244782625
  //                                {{-1304428511, 434162108, 3542, 1376256}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1304428511);
  ck_assert_int_eq(res.bits[1], 434162108);
  ck_assert_int_eq(res.bits[2], 3542);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_928
  //                                10
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 9.944659767349374615542
  //                                 {{-1304428554, 434162006, 539, 1376256}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1304428554);
  ck_assert_int_eq(res.bits[1], 434162006);
  ck_assert_int_eq(res.bits[2], 539);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_929
  //                                10
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534013.2650625384464
  //                          {{-276447216, -23184, 2, -2146631680}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -276447216);
  ck_assert_int_eq(res.bits[1], -23184);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_930
  //                                10
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                73.31900243533454217608892
  //                                {{-1593803076, 466537809, 397463, 1507328}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1593803076);
  ck_assert_int_eq(res.bits[1], 466537809);
  ck_assert_int_eq(res.bits[2], 397463);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_931
  //                                10
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184457.44078004518913
  //                           {{1530494977, -232830, 0, -2146566144}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232830);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_932
  //                                10
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                10.0000000000000
  //                                {{276447232, 23283, 0, 851968}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 276447232);
  ck_assert_int_eq(res.bits[1], 23283);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_933
  //                                10
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                10.00000000000000
  //                                {{-1530494976, 232830, 0, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494976);
  ck_assert_int_eq(res.bits[1], 232830);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_934
  //                                10
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451881.3
  //              {{-99, 0, 1, -2147418112}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_935
  //                                10
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674397.8004518913
  //                       {{-1215752191, -23, 0, -2146828288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_936
  //                                10
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451903.6
  //               {{124, 1, 1, 65536}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 124);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_937
  //                                10
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674403.8134061057
  //                       {{-1215752191, -9, 0, -2146828288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -9);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_938
  //                                10
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451901.3
  //               {{101, 1, 1, 65536}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_939
  //                                10
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                 9.9999999999
  //                                 {{1215752191, 23, 0, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752191);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_940
  //                                10
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                10.0000000001
  //                                {{1215752193, 23, 0, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_941
  //                                10
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184457.44073709551617
  //                           {{1530494977, -232831, 0, -2146566144}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232831);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_942
  //                                10
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18436.744078004518913
  //                            {{-1874919423, -2328306, 0, -2146500608}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1874919423);
  ck_assert_int_eq(res.bits[1], -2328306);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_943
  //                                10
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18456.744116659224577
  //                             {{1874919425, 2328316, 1, 983040}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1874919425);
  ck_assert_int_eq(res.bits[1], 2328316);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_944
  //                                10
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18456.744078004518913
  //                             {{1874919425, 2328307, 1, 983040}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1874919425);
  ck_assert_int_eq(res.bits[1], 2328307);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_945
  //                                10
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674417.8004518913
  //                        {{1215752193, 24, 1, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 24);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_946
  //                                10
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858954.1
  //               {{101, 2, 3, 65536}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_947
  //                                10
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674418.2299486211
  //                        {{1215752195, 25, 1, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752195);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_948
  //                                10
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023212.9718589441
  //                       {{-1215752191, -22, 2, -2146828288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_949
  //                                10
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023232.9718589441
  //                        {{1215752193, 25, 3, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_950
  //                                10
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440832.99486211
  //                      {{1000000003, 2, 1, 524288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_951
  //                                10
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553412.32229718589450
  //                            {{-1530494966, 232832, 3, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494966);
  ck_assert_int_eq(res.bits[1], 232832);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_952
  //                                10
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440812.99486211
  //                     {{-999999997, 1, 1, -2146959360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -999999997);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_953
  //                                10
  // -                              10
  //   ------------------------------------------------
  //                                 0
  //                                 {{0, 0, 0, 0}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 0);

#test sub_954
  //                                10
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456445
  //                         {{133456445, 0, 0, 0}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 133456445);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 0);

#test sub_955
  //                                10
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                10.2343453
  //                                {{102343453, 0, 0, 458752}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 102343453);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_956
  //                                10
  // -                             127.2343
  //   ------------------------------------------------
  //                              -117.2343
  //                              {{1172343, 0, 0, -2147221504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1172343);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_957
  //                                10
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483658
  //                        {{-2147483638, 0, 0, 0}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2147483638);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 0);

#test sub_958
  //                        -133456435
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                        -134009837.32229718589441
  //                        {{349880321, 2013411074, 726, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411074);
  ck_assert_int_eq(res.bits[2], 726);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_959
  //                        -133456435
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                        -132903032.67770281410559
  //                        {{349880319, 2013411070, 720, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411070);
  ck_assert_int_eq(res.bits[2], 720);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_960
  //                        -133456435
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        -133456379.65976777886275521738
  //                        {{-1459827510, -876806602, 723468483, -2146172928}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1459827510);
  ck_assert_int_eq(res.bits[1], -876806602);
  ck_assert_int_eq(res.bits[2], 723468483);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test sub_961
  //                        -133456435
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                        -133456435.05534023265062538446
  //                        {{-1459827506, 411683597, 723468784, -2146172928}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1459827506);
  ck_assert_int_eq(res.bits[1], 411683597);
  ck_assert_int_eq(res.bits[2], 723468784);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test sub_962
  //                        -133456435
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                        -138990458.2650625384464
  //                        {{34988048, 1489831396, 75, -2146631680}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988048);
  ck_assert_int_eq(res.bits[1], 1489831396);
  ck_assert_int_eq(res.bits[2], 75);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_963
  //                        -133456435
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        -133456371.68099756466545782391
  //                        {{-549294473, -1963433328, 723468440, -2146172928}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -549294473);
  ck_assert_int_eq(res.bits[1], -1963433328);
  ck_assert_int_eq(res.bits[2], 723468440);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test sub_964
  //                        -133456435
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                        -133640902.44078004518913
  //                        {{349880321, 2013411073, 724, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411073);
  ck_assert_int_eq(res.bits[2], 724);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_965
  //                        -133456435
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                        -133456435.0000000000000
  //                        {{34988032, 1489831296, 72, -2146631680}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988032);
  ck_assert_int_eq(res.bits[1], 1489831296);
  ck_assert_int_eq(res.bits[2], 72);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_966
  //                        -133456435
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                        -133456435.00000000000000
  //                        {{349880320, 2013411072, 723, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880320);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 723);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_967
  //                        -133456435
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407933908326.3
  //              {{1334564351, 1, 1, -2147418112}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564351);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_968
  //                        -133456435
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1978130842.8004518913
  //                       {{-1683592191, 310727477, 1, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727477);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_969
  //                        -133456435
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407666995458.6
  //               {{-1334564326, 0, 1, 65536}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564326);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_970
  //                        -133456435
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1978130848.8134061057
  //                       {{-1683592191, 310727491, 1, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727491);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_971
  //                        -133456435
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407666995456.3
  //               {{-1334564349, 0, 1, 65536}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564349);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_972
  //                        -133456435
  // -                               0.0000000001
  //   ------------------------------------------------
  //                        -133456435.0000000001
  //                        {{-1683592191, 310727476, 0, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_973
  //                        -133456435
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                        -133456434.9999999999
  //                        {{-1683592193, 310727476, 0, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592193);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_974
  //                        -133456435
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                        -133640902.44073709551617
  //                        {{349880321, 2013411072, 724, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 724);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_975
  //                        -133456435
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                        -133474881.744078004518913
  //                        {{-796164095, -1340725759, 7235, -2146500608}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164095);
  ck_assert_int_eq(res.bits[1], -1340725759);
  ck_assert_int_eq(res.bits[2], 7235);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_976
  //                        -133456435
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                        -133437988.255883340775423
  //                        {{-796164097, -1340725770, 7233, -2146500608}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164097);
  ck_assert_int_eq(res.bits[1], -1340725770);
  ck_assert_int_eq(res.bits[2], 7233);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_977
  //                        -133456435
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                        -133437988.255921995481087
  //                        {{-796164097, -1340725761, 7233, -2146500608}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164097);
  ck_assert_int_eq(res.bits[1], -1340725761);
  ck_assert_int_eq(res.bits[2], 7233);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_978
  //                        -133456435
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1711217972.8004518913
  //                        {{1683592193, -310727476, 0, 655360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_979
  //                        -133456435
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222838402509.1
  //               {{-1334564349, 1, 3, 65536}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564349);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_980
  //                        -133456435
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1711217973.2299486211
  //                        {{1683592195, -310727475, 0, 655360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592195);
  ck_assert_int_eq(res.bits[1], -310727475);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_981
  //                        -133456435
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5667479657.9718589441
  //                       {{-1683592191, 310727478, 3, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727478);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_982
  //                        -133456435
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5400566787.9718589441
  //                        {{1683592193, -310727475, 2, 655360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727475);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_983
  //                        -133456435
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184333984387.99486211
  //                      {{1004678403, -3107273, 0, 524288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1004678403);
  ck_assert_int_eq(res.bits[1], -3107273);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_984
  //                        -133456435
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                        -132903032.67770281410550
  //                        {{349880310, 2013411070, 720, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880310);
  ck_assert_int_eq(res.bits[1], 2013411070);
  ck_assert_int_eq(res.bits[2], 720);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_985
  //                        -133456435
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184600897257.99486211
  //                     {{-1004678397, 3107276, 1, -2146959360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1004678397);
  ck_assert_int_eq(res.bits[1], 3107276);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_986
  //                        -133456435
  // -                              10
  //   ------------------------------------------------
  //                        -133456445
  //                        {{133456445, 0, 0, -2147483648}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 133456445);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test sub_987
  //                        -133456435
  // -                      -133456435
  //   ------------------------------------------------
  //                                 0
  //                                 {{0, 0, 0, -2147483648}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test sub_988
  //                        -133456435
  // -                              -0.2343453
  //   ------------------------------------------------
  //                        -133456434.7656547
  //                        {{2044672355, 310727, 0, -2147024896}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2044672355);
  ck_assert_int_eq(res.bits[1], 310727);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_989
  //                        -133456435
  // -                             127.2343
  //   ------------------------------------------------
  //                        -133456562.2343
  //                        {{-1169206713, 310, 0, -2147221504}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1169206713);
  ck_assert_int_eq(res.bits[1], 310);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_990
  //                        -133456435
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2014027213
  //                        {{2014027213, 0, 0, 0}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2014027213);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 0);

#test sub_991
  //                                -0.2343453
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.55664248589441
  //                           {{1188433025, 5458, 3, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5458);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_992
  //                                -0.2343453
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553402.08795188589441
  //                            {{-1188433023, -5455, 2, 917504}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5455);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_993
  //                                -0.2343453
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                55.105886921137244782625
  //                                {{-1113145311, 1271807813, 2987, 1376256}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1113145311);
  ck_assert_int_eq(res.bits[1], 1271807813);
  ck_assert_int_eq(res.bits[2], 2987);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_994
  //                                -0.2343453
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                                -0.289685532650625384458
  //                                {{1113145354, -1271807712, 15, -2146107392}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1113145354);
  ck_assert_int_eq(res.bits[1], -1271807712);
  ck_assert_int_eq(res.bits[2], 15);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test sub_995
  //                                -0.2343453
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5534023.4994078384464
  //                          {{-1599143600, 645, 3, -2146631680}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1599143600);
  ck_assert_int_eq(res.bits[1], 645);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_996
  //                                -0.2343453
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.08465713533454217608892
  //                                {{354647740, -1668237606, 341982, 1507328}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 354647740);
  ck_assert_int_eq(res.bits[1], -1668237606);
  ck_assert_int_eq(res.bits[2], 341982);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_997
  //                                -0.2343453
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184467.67512534518913
  //                           {{1188433025, 5457, 1, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5457);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_998
  //                                -0.2343453
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                                -0.2343453000000
  //                                {{-1599143616, 545, 0, -2146631680}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1599143616);
  ck_assert_int_eq(res.bits[1], 545);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_999
  //                                -0.2343453
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                                -0.23434530000000
  //                                {{1188433024, 5456, 0, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433024);
  ck_assert_int_eq(res.bits[1], 5456);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1000
  //                                -0.2343453
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.5343453
  //              {{3343453, 1000000, 1000000, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3343453);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_1001
  //                                -0.2343453
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674408.0347971913
  //                       {{-1951514295, 1, 1, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1002
  //                                -0.2343453
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800451893.3656547
  //               {{21656547, 1000000, 1000000, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 21656547);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_1003
  //                                -0.2343453
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674414.0477514057
  //                       {{-1951514295, 15, 1, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1004
  //                                -0.2343453
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.0656547
  //               {{-1343453, 999999, 1000000, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1343453);
  ck_assert_int_eq(res.bits[1], 999999);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_1005
  //                                -0.2343453
  // -                               0.0000000001
  //   ------------------------------------------------
  //                                -0.2343453001
  //                                {{-1951514295, 0, 0, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1006
  //                                -0.2343453
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                                -0.2343452999
  //                                {{-1951514297, 0, 0, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1007
  //                                -0.2343453
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184467.67508239551617
  //                           {{1188433025, 5456, 1, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5456);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1008
  //                                -0.2343453
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.978423304518913
  //                            {{-1000571647, 54563, 1, -2146500608}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1000571647);
  ck_assert_int_eq(res.bits[1], 54563);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_1009
  //                                -0.2343453
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18446.509771359224577
  //                             {{1000571649, -54553, 0, 983040}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000571649);
  ck_assert_int_eq(res.bits[1], -54553);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_1010
  //                                -0.2343453
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18446.509732704518913
  //                             {{1000571649, -54562, 0, 983040}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000571649);
  ck_assert_int_eq(res.bits[1], -54562);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_1011
  //                                -0.2343453
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.5661065913
  //                        {{1951514297, 0, 1, 655360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1012
  //                                -0.2343453
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971858943.8656547
  //               {{-1343453, 1999999, 3000000, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1343453);
  ck_assert_int_eq(res.bits[1], 1999999);
  ck_assert_int_eq(res.bits[2], 3000000);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_1013
  //                                -0.2343453
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674407.9956033211
  //                        {{1951514299, 1, 1, 655360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514299);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1014
  //                                -0.2343453
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023223.2062042441
  //                       {{-1951514295, 2, 3, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1015
  //                                -0.2343453
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.7375136441
  //                        {{1951514297, 1, 3, 655360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1016
  //                                -0.2343453
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.76051681
  //                      {{-23434527, 1, 1, 524288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -23434527);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_1017
  //                                -0.2343453
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553402.08795188589450
  //                            {{-1188433014, -5455, 2, 917504}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433014);
  ck_assert_int_eq(res.bits[1], -5455);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_1018
  //                                -0.2343453
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440823.22920741
  //                     {{23434533, 2, 1, -2146959360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23434533);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_1019
  //                                -0.2343453
  // -                              10
  //   ------------------------------------------------
  //                               -10.2343453
  //                               {{102343453, 0, 0, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 102343453);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_1020
  //                                -0.2343453
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456434.7656547
  //                         {{2044672355, 310727, 0, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2044672355);
  ck_assert_int_eq(res.bits[1], 310727);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_1021
  //                                -0.2343453
  // -                              -0.2343453
  //   ------------------------------------------------
  //                                 0.0000000
  //                                 {{0, 0, 0, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_1022
  //                                -0.2343453
  // -                             127.2343
  //   ------------------------------------------------
  //                              -127.4686453
  //                              {{1274686453, 0, 0, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1274686453);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_1023
  //                                -0.2343453
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483647.7656547
  //                        {{-2343453, 4999999, 0, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2343453);
  ck_assert_int_eq(res.bits[1], 4999999);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_1024
  //                               127.2343
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                           -553275.08799718589441
  //                           {{-1702460415, -2962403, 2, -2146566144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962403);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1025
  //                               127.2343
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                            553529.55659718589441
  //                            {{1702460417, 2962406, 3, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962406);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_1026
  //                               127.2343
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               182.574532221137244782625
  //                               {{-1956249567, 1654523339, 9897, 1376256}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249567);
  ck_assert_int_eq(res.bits[1], 1654523339);
  ck_assert_int_eq(res.bits[2], 9897);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_1027
  //                               127.2343
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                               127.178959767349374615542
  //                               {{-1956249610, 1654523237, 6894, 1376256}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249610);
  ck_assert_int_eq(res.bits[1], 1654523237);
  ck_assert_int_eq(res.bits[2], 6894);
  ck_assert_int_eq(res.bits[3], 1376256);

#test sub_1028
  //                               127.2343
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                          -5533896.0307625384464
  //                          {{-1888232944, -296141, 2, -2146631680}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1888232944);
  ck_assert_int_eq(res.bits[1], -296141);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_1029
  //                               127.2343
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               190.55330243533454217608892
  //                               {{1943568060, -2051390690, 1032991, 1507328}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1943568060);
  ck_assert_int_eq(res.bits[1], -2051390690);
  ck_assert_int_eq(res.bits[2], 1032991);
  ck_assert_int_eq(res.bits[3], 1507328);

#test sub_1030
  //                               127.2343
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                           -184340.20648004518913
  //                           {{-1702460415, -2962404, 0, -2146566144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962404);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1031
  //                               127.2343
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                               127.2343000000000
  //                               {{1888232960, 296240, 0, 851968}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1888232960);
  ck_assert_int_eq(res.bits[1], 296240);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test sub_1032
  //                               127.2343
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                               127.23430000000000
  //                               {{1702460416, 2962404, 0, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460416);
  ck_assert_int_eq(res.bits[1], 2962404);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_1033
  //                               127.2343
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451764.0657
  //              {{-1271343, 999, 1000, -2147221504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1271343);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_1034
  //                               127.2343
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674280.5661518913
  //                       {{-1032680383, -296, 0, -2146828288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1035
  //                               127.2343
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674407800452020.8343
  //               {{1296343, 1000, 1000, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1296343);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1036
  //                               127.2343
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -1844674286.5791061057
  //                       {{-1032680383, -282, 0, -2146828288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -282);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1037
  //                               127.2343
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800452018.5343
  //               {{1273343, 1000, 1000, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1273343);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1038
  //                               127.2343
  // -                               0.0000000001
  //   ------------------------------------------------
  //                               127.2342999999
  //                               {{1032680383, 296, 0, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680383);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1039
  //                               127.2343
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                               127.2343000001
  //                               {{1032680385, 296, 0, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1040
  //                               127.2343
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                           -184340.20643709551617
  //                           {{-1702460415, -2962405, 0, -2146566144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962405);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1041
  //                               127.2343
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                            -18319.509778004518913
  //                            {{155265025, -29624043, 0, -2146500608}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 155265025);
  ck_assert_int_eq(res.bits[1], -29624043);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_1042
  //                               127.2343
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                             18573.978416659224577
  //                             {{-155265023, 29624053, 1, 983040}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -155265023);
  ck_assert_int_eq(res.bits[1], 29624053);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_1043
  //                               127.2343
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                             18573.978378004518913
  //                             {{-155265023, 29624044, 1, 983040}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -155265023);
  ck_assert_int_eq(res.bits[1], 29624044);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test sub_1044
  //                               127.2343
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674535.0347518913
  //                        {{1032680385, 297, 1, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 297);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1045
  //                               127.2343
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023222971859071.3343
  //               {{1273343, 2000, 3000, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1273343);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1046
  //                               127.2343
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        1844674535.4642486211
  //                        {{1032680387, 298, 1, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680387);
  ck_assert_int_eq(res.bits[1], 298);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1047
  //                               127.2343
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023095.7375589441
  //                       {{-1032680383, -295, 2, -2146828288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -295);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1048
  //                               127.2343
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023350.2061589441
  //                        {{1032680385, 298, 3, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 298);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1049
  //                               127.2343
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      184467440950.22916211
  //                      {{-161471885, 4, 1, 524288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161471885);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_1050
  //                               127.2343
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                            553529.55659718589450
  //                            {{1702460426, 2962406, 3, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460426);
  ck_assert_int_eq(res.bits[1], 2962406);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test sub_1051
  //                               127.2343
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440695.76056211
  //                     {{161471891, -1, 0, -2146959360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161471891);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_1052
  //                               127.2343
  // -                              10
  //   ------------------------------------------------
  //                               117.2343
  //                               {{1172343, 0, 0, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1172343);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1053
  //                               127.2343
  // -                      -133456435
  //   ------------------------------------------------
  //                         133456562.2343
  //                         {{-1169206713, 310, 0, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1169206713);
  ck_assert_int_eq(res.bits[1], 310);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1054
  //                               127.2343
  // -                              -0.2343453
  //   ------------------------------------------------
  //                               127.4686453
  //                               {{1274686453, 0, 0, 458752}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1274686453);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test sub_1055
  //                               127.2343
  // -                             127.2343
  //   ------------------------------------------------
  //                                 0.0000
  //                                 {{0, 0, 0, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1056
  //                               127.2343
  // -                     -2147483648
  //   ------------------------------------------------
  //                        2147483775.2343
  //                        {{1272343, 5000, 0, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1272343);
  ck_assert_int_eq(res.bits[1], 5000);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test sub_1057
  //                       -2147483648
  // -                          553402.32229718589441
  //   ------------------------------------------------
  //                       -2148037050.32229718589441
  //                       {{1, -2009260030, 11644, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260030);
  ck_assert_int_eq(res.bits[2], 11644);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1058
  //                       -2147483648
  // -                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -2146930245.67770281410559
  //                       {{-1, -2009260035, 11638, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260035);
  ck_assert_int_eq(res.bits[2], 11638);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1059
  //                       -2147483648
  // -                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -2147483592.6597677788627552174
  //                       {{-85899346, 1156841471, 1164153188, -2146238464}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -85899346);
  ck_assert_int_eq(res.bits[1], 1156841471);
  ck_assert_int_eq(res.bits[2], 1164153188);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_1060
  //                       -2147483648
  // -                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -2147483648.0553402326506253845
  //                       {{-515396075, 1285690491, 1164153218, -2146238464}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -515396075);
  ck_assert_int_eq(res.bits[1], 1285690491);
  ck_assert_int_eq(res.bits[2], 1164153218);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_1061
  //                       -2147483648
  // -                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -2153017671.2650625384464
  //                       {{16, 658067556, 1167, -2146631680}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 16);
  ck_assert_int_eq(res.bits[1], 658067556);
  ck_assert_int_eq(res.bits[2], 1167);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_1062
  //                       -2147483648
  // -                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -2147483584.6809975646654578239
  //                       {{-1712832961, -240311390, 1164153183, -2146238464}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1712832961);
  ck_assert_int_eq(res.bits[1], -240311390);
  ck_assert_int_eq(res.bits[2], 1164153183);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test sub_1063
  //                       -2147483648
  // -                          184467.44078004518913
  //   ------------------------------------------------
  //                       -2147668115.44078004518913
  //                       {{1, -2009260031, 11642, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260031);
  ck_assert_int_eq(res.bits[2], 11642);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1064
  //                       -2147483648
  // -                               0.0000000000000
  //   ------------------------------------------------
  //                       -2147483648.0000000000000
  //                       {{0, 658067456, 1164, -2146631680}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 658067456);
  ck_assert_int_eq(res.bits[2], 1164);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test sub_1065
  //                       -2147483648
  // -                               0.00000000000000
  //   ------------------------------------------------
  //                       -2147483648.00000000000000
  //                       {{0, -2009260032, 11641, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -2009260032);
  ck_assert_int_eq(res.bits[2], 11641);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1066
  //                       -2147483648
  // -             1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674409947935539.3
  //              {{1, 6, 1, -2147418112}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 6);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test sub_1067
  //                       -2147483648
  // -                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -3992158055.8004518913
  //                       {{1, 705032705, 2, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032705);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1068
  //                       -2147483648
  // -            -1844674407800451893.6
  //   ------------------------------------------------
  //               1844674405652968245.6
  //               {{24, -4, 0, 65536}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 24);
  ck_assert_int_eq(res.bits[1], -4);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_1069
  //                       -2147483648
  // -                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -3992158061.8134061057
  //                       {{1, 705032719, 2, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032719);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1070
  //                       -2147483648
  // -            -1844674407800451891.3
  //   ------------------------------------------------
  //               1844674405652968243.3
  //               {{1, -4, 0, 65536}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -4);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_1071
  //                       -2147483648
  // -                               0.0000000001
  //   ------------------------------------------------
  //                       -2147483648.0000000001
  //                       {{1, 705032704, 1, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032704);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1072
  //                       -2147483648
  // -                              -0.0000000001
  //   ------------------------------------------------
  //                       -2147483647.9999999999
  //                       {{-1, 705032703, 1, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032703);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1073
  //                       -2147483648
  // -                          184467.44073709551617
  //   ------------------------------------------------
  //                       -2147668115.44073709551617
  //                       {{1, -2009260032, 11642, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260032);
  ck_assert_int_eq(res.bits[2], 11642);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1074
  //                       -2147483648
  // -                           18446.744078004518913
  //   ------------------------------------------------
  //                       -2147502094.744078004518913
  //                       {{1, 1382236161, 116416, -2146500608}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1382236161);
  ck_assert_int_eq(res.bits[2], 116416);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_1075
  //                       -2147483648
  // -                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -2147465201.255883340775423
  //                       {{-1, 1382236149, 116414, -2146500608}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 1382236149);
  ck_assert_int_eq(res.bits[2], 116414);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_1076
  //                       -2147483648
  // -                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -2147465201.255921995481087
  //                       {{-1, 1382236158, 116414, -2146500608}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 1382236158);
  ck_assert_int_eq(res.bits[2], 116414);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test sub_1077
  //                       -2147483648
  // -                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        -302809240.1995481087
  //                        {{-1, 705032702, 0, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032702);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1078
  //                       -2147483648
  // -            -5534023222971858944.1
  //   ------------------------------------------------
  //               5534023220824375296.1
  //               {{1, -3, 2, 65536}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -3);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 65536);

#test sub_1079
  //                       -2147483648
  // -                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        -302809239.7700513789
  //                        {{-3, 705032701, 0, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -3);
  ck_assert_int_eq(res.bits[1], 705032701);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1080
  //                       -2147483648
  // -                      5534023222.9718589441
  //   ------------------------------------------------
  //                       -7681506870.9718589441
  //                       {{1, 705032706, 4, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032706);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test sub_1081
  //                       -2147483648
  // -                     -5534023222.9718589441
  //   ------------------------------------------------
  //                        3386539574.9718589441
  //                        {{1, -705032702, 1, 655360}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -705032702);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test sub_1082
  //                       -2147483648
  // -                   -184467440822.99486211
  //   ------------------------------------------------
  //                      182319957174.99486211
  //                      {{3, -49999998, 0, 524288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], -49999998);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test sub_1083
  //                       -2147483648
  // -                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -2146930245.67770281410550
  //                       {{-10, -2009260035, 11638, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -10);
  ck_assert_int_eq(res.bits[1], -2009260035);
  ck_assert_int_eq(res.bits[2], 11638);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test sub_1084
  //                       -2147483648
  // -                    184467440822.99486211
  //   ------------------------------------------------
  //                     -186614924470.99486211
  //                     {{3, 50000002, 1, -2146959360}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], 50000002);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test sub_1085
  //                       -2147483648
  // -                              10
  //   ------------------------------------------------
  //                       -2147483658
  //                       {{-2147483638, 0, 0, -2147483648}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2147483638);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test sub_1086
  //                       -2147483648
  // -                      -133456435
  //   ------------------------------------------------
  //                       -2014027213
  //                       {{2014027213, 0, 0, -2147483648}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2014027213);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test sub_1087
  //                       -2147483648
  // -                              -0.2343453
  //   ------------------------------------------------
  //                       -2147483647.7656547
  //                       {{-2343453, 4999999, 0, -2147024896}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2343453);
  ck_assert_int_eq(res.bits[1], 4999999);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test sub_1088
  //                       -2147483648
  // -                             127.2343
  //   ------------------------------------------------
  //                       -2147483775.2343
  //                       {{1272343, 5000, 0, -2147221504}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1272343);
  ck_assert_int_eq(res.bits[1], 5000);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test sub_1089
  //                       -2147483648
  // -                     -2147483648
  //   ------------------------------------------------
  //                                 0
  //                                 {{0, 0, 0, -2147483648}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_sub(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

