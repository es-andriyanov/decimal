#suite add_test

#test add_1
  //                            553402.32229718589441
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                           1106804.64459437178882
  //                           {{2, 4, 6, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_2
  //                            553402.32229718589441
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_3
  //                            553402.32229718589441
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            553346.982064964757165217375
  //                            {{9999967, 19999998, 29997000, 1376256}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_4
  //                            553402.32229718589441
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                            553402.377637418545035384458
  //                            {{10000010, 20000100, 30000003, 1376256}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 20000100);
  ck_assert_int_eq(res.bits[2], 30000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_5
  //                            553402.32229718589441
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           6087425.58735972434081
  //                           {{161, 1002, 33, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1002);
  ck_assert_int_eq(res.bits[2], 33);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_6
  //                            553402.32229718589441
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            553339.00329475055986782391108
  //                            {{999967556, 1999999900, -1295310549, 1507328}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], 1999999900);
  ck_assert_int_eq(res.bits[2], -1295310549);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_7
  //                            553402.32229718589441
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            737869.76307723108354
  //                            {{2, 3, 4, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_8
  //                            553402.32229718589441
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_9
  //                            553402.32229718589441
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_10
  //                            553402.32229718589441
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407801005293.6222971859
  //               {{1811748819, 1001288490, 1000000000, 655360}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_11
  //                            553402.32229718589441
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1845227810.12274907719441
  //                        {{10001, 10002, 10003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_12
  //                            553402.32229718589441
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407799898491.2777028141
  //              {{1713414701, 998711515, 1000000000, -2146828288}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1713414701);
  ck_assert_int_eq(res.bits[1], 998711515);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_13
  //                            553402.32229718589441
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1845227816.13570329159441
  //                        {{10001, 150002, 10003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_14
  //                            553402.32229718589441
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407799898488.9777028141
  //              {{188251181, 998711510, 1000000000, -2146828288}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_15
  //                            553402.32229718589441
  // +                               0.0000000001
  //   ------------------------------------------------
  //                            553402.32229718599441
  //                            {{10001, 2, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_16
  //                            553402.32229718589441
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                            553402.32229718579441
  //                            {{-9999, 1, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_17
  //                            553402.32229718589441
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            737869.76303428141058
  //                            {{2, 2, 4, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_18
  //                            553402.32229718589441
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                            571849.066375190413323
  //                            {{11, 21, 31, 983040}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_19
  //                            553402.32229718589441
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            534955.578180526669833
  //                            {{9, 10, 29, 983040}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_20
  //                            553402.32229718589441
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            534955.578219181375497
  //                            {{9, 19, 29, 983040}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_21
  //                            553402.32229718589441
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844121005.47815470540559
  //                       {{9999, 9998, 9997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_22
  //                            553402.32229718589441
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971305541.7777028141
  //              {{188251181, 1998711510, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_23
  //                            553402.32229718589441
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844121005.90765143520559
  //                       {{29999, 19998, 9997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_24
  //                            553402.32229718589441
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534576625.29415612999441
  //                        {{10001, 20002, 30003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_25
  //                            553402.32229718589441
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5533469820.64956175820559
  //                       {{9999, 19998, 29997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_26
  //                            553402.32229718589441
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184466887420.67256492410559
  //                     {{2999999, 1999998, 999997, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_27
  //                            553402.32229718589441
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                                -0.00000000000009
  //                                {{9, 0, 0, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_28
  //                            553402.32229718589441
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467994225.31715929589441
  //                      {{3000001, 2000002, 1000003, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_29
  //                            553402.32229718589441
  // +                              10
  //   ------------------------------------------------
  //                            553412.32229718589441
  //                            {{-1530494975, 232832, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232832);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_30
  //                            553402.32229718589441
  // +                      -133456435
  //   ------------------------------------------------
  //                        -132903032.67770281410559
  //                        {{349880319, 2013411070, 720, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411070);
  ck_assert_int_eq(res.bits[2], 720);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_31
  //                            553402.32229718589441
  // +                              -0.2343453
  //   ------------------------------------------------
  //                            553402.08795188589441
  //                            {{-1188433023, -5455, 2, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5455);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_32
  //                            553402.32229718589441
  // +                             127.2343
  //   ------------------------------------------------
  //                            553529.55659718589441
  //                            {{1702460417, 2962406, 3, 917504}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962406);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_33
  //                            553402.32229718589441
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2146930245.67770281410559
  //                       {{-1, -2009260035, 11638, -2146566144}};

  es_decimal one = {{1, 2, 3, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260035);
  ck_assert_int_eq(res.bits[2], 11638);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_34
  //                           -553402.32229718589441
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_35
  //                           -553402.32229718589441
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                          -1106804.64459437178882
  //                          {{2, 4, 6, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_36
  //                           -553402.32229718589441
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                           -553457.662529407031654782625
  //                           {{10000033, 20000002, 30003000, -2146107392}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_37
  //                           -553402.32229718589441
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                           -553402.266956953243784615542
  //                           {{9999990, 19999900, 29999997, -2146107392}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], 19999900);
  ck_assert_int_eq(res.bits[2], 29999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_38
  //                           -553402.32229718589441
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           4980620.94276535255199
  //                           {{159, 998, 27, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 998);
  ck_assert_int_eq(res.bits[2], 27);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_39
  //                           -553402.32229718589441
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                           -553465.64129962122895217608892
  //                           {{1000032444, 2000000100, -1294624043, -2145976320}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 2000000100);
  ck_assert_int_eq(res.bits[2], -1294624043);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_40
  //                           -553402.32229718589441
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                           -368934.88151714070528
  //                           {{0, 1, 2, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_41
  //                           -553402.32229718589441
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_42
  //                           -553402.32229718589441
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_43
  //                           -553402.32229718589441
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_44
  //                           -553402.32229718589441
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844121005.47815470540559
  //                        {{9999, 9998, 9997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_45
  //                           -553402.32229718589441
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407801005295.9222971859
  //              {{-958054957, 1001288495, 1000000000, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -958054957);
  ck_assert_int_eq(res.bits[1], 1001288495);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_46
  //                           -553402.32229718589441
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844121011.49110891980559
  //                        {{9999, 149998, 9997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 149998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_47
  //                           -553402.32229718589441
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_48
  //                           -553402.32229718589441
  // +                               0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718579441
  //                           {{-9999, 1, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_49
  //                           -553402.32229718589441
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718599441
  //                           {{10001, 2, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_50
  //                           -553402.32229718589441
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                           -368934.88156009037824
  //                           {{0, 2, 2, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_51
  //                           -553402.32229718589441
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                           -534955.578219181375497
  //                           {{9, 19, 29, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_52
  //                           -553402.32229718589441
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                           -571849.066413845118987
  //                           {{11, 30, 31, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_53
  //                           -553402.32229718589441
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                           -571849.066375190413323
  //                           {{11, 21, 31, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_54
  //                           -553402.32229718589441
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1845227810.12274907719441
  //                       {{10001, 10002, 10003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_55
  //                           -553402.32229718589441
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222972412346.4222971859
  //              {{1811748819, 2001288490, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_56
  //                           -553402.32229718589441
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1845227810.55224580699441
  //                       {{30001, 20002, 10003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_57
  //                           -553402.32229718589441
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5533469820.64956175820559
  //                        {{9999, 19998, 29997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_58
  //                           -553402.32229718589441
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534576625.29415612999441
  //                       {{10001, 20002, 30003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_59
  //                           -553402.32229718589441
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467994225.31715929589441
  //                     {{3000001, 2000002, 1000003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_60
  //                           -553402.32229718589441
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                          -1106804.64459437178891
  //                          {{11, 4, 6, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_61
  //                           -553402.32229718589441
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184466887420.67256492410559
  //                      {{2999999, 1999998, 999997, 917504}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_62
  //                           -553402.32229718589441
  // +                              10
  //   ------------------------------------------------
  //                           -553392.32229718589441
  //                           {{1530494977, -232829, 2, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232829);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_63
  //                           -553402.32229718589441
  // +                      -133456435
  //   ------------------------------------------------
  //                        -134009837.32229718589441
  //                        {{349880321, 2013411074, 726, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411074);
  ck_assert_int_eq(res.bits[2], 726);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_64
  //                           -553402.32229718589441
  // +                              -0.2343453
  //   ------------------------------------------------
  //                           -553402.55664248589441
  //                           {{1188433025, 5458, 3, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5458);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_65
  //                           -553402.32229718589441
  // +                             127.2343
  //   ------------------------------------------------
  //                           -553275.08799718589441
  //                           {{-1702460415, -2962403, 2, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962403);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_66
  //                           -553402.32229718589441
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2148037050.32229718589441
  //                       {{1, -2009260030, 11644, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146566144}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260030);
  ck_assert_int_eq(res.bits[2], 11644);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_67
  //                               -55.340232221137244782625
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553346.982064964757165217375
  //                            {{9999967, 19999998, 29997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_68
  //                               -55.340232221137244782625
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553457.662529407031654782625
  //                           {{10000033, 20000002, 30003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000033);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_69
  //                               -55.340232221137244782625
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                              -110.680464442274489565250
  //                              {{66, 4, 6000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 66);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_70
  //                               -55.340232221137244782625
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                               -55.284891988486619398167
  //                               {{23, -98, 2996, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23);
  ck_assert_int_eq(res.bits[1], -98);
  ck_assert_int_eq(res.bits[2], 2996);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_71
  //                               -55.340232221137244782625
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5533967.924830317309155217375
  //                           {{1599999967, 1410065406, 299997002, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599999967);
  ck_assert_int_eq(res.bits[1], 1410065406);
  ck_assert_int_eq(res.bits[2], 299997002);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_72
  //                               -55.340232221137244782625
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                              -118.65923465647178695871392
  //                              {{35744, 300, 643253, -2145976320}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 35744);
  ck_assert_int_eq(res.bits[1], 300);
  ck_assert_int_eq(res.bits[2], 643253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_73
  //                               -55.340232221137244782625
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184412.100547824051885217375
  //                            {{9999967, 9999998, 9997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_74
  //                               -55.340232221137244782625
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                               -55.340232221137244782625
  //                               {{33, 2, 3000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_75
  //                               -55.340232221137244782625
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                               -55.340232221137244782625
  //                               {{33, 2, 3000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_76
  //                               -55.340232221137244782625
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451835.9597677789
  //               {{1648458973, 999999871, 1000000000, 655360}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1648458973);
  ck_assert_int_eq(res.bits[1], 999999871);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_77
  //                               -55.340232221137244782625
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674352.4602196701627552174
  //                        {{914100654, 1000000000, 999999970, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 999999970);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_78
  //                               -55.340232221137244782625
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451948.9402322211
  //              {{1876704547, 1000000134, 1000000000, -2146828288}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1876704547);
  ck_assert_int_eq(res.bits[1], 1000000134);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_79
  //                               -55.340232221137244782625
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674358.4731738845627552174
  //                        {{914100654, 2115098112, 999999973, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 2115098112);
  ck_assert_int_eq(res.bits[2], 999999973);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_80
  //                               -55.340232221137244782625
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451946.6402322211
  //              {{351541027, 1000000129, 1000000000, -2146828288}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 351541027);
  ck_assert_int_eq(res.bits[1], 1000000129);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_81
  //                               -55.340232221137244782625
  // +                               0.0000000001
  //   ------------------------------------------------
  //                               -55.340232221037244782625
  //                               {{-1215752159, -22, 2999, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752159);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2999);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_82
  //                               -55.340232221137244782625
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                               -55.340232221237244782625
  //                               {{1215752225, 25, 3000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752225);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_83
  //                               -55.340232221137244782625
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184412.100504874378925217375
  //                            {{9999967, -2, 9996999, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], -2);
  ck_assert_int_eq(res.bits[2], 9996999);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_84
  //                               -55.340232221137244782625
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18391.403845783381668217375
  //                             {{999967, 999998, 997000, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967);
  ck_assert_int_eq(res.bits[1], 999998);
  ck_assert_int_eq(res.bits[2], 997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_85
  //                               -55.340232221137244782625
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18502.084348880361821782625
  //                            {{1000033, 10000002, 1003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000033);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 1003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_86
  //                               -55.340232221137244782625
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18502.084310225656157782625
  //                            {{1000033, 1000002, 1003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000033);
  ck_assert_int_eq(res.bits[1], 1000002);
  ck_assert_int_eq(res.bits[2], 1003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_87
  //                               -55.340232221137244782625
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674463.1406841124372447826
  //                       {{1085899346, 1000000000, 1000000030, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000030);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_88
  //                               -55.340232221137244782625
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858999.4402322211
  //              {{351541027, 2000000129, -1294967296, -2146828288}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 351541027);
  ck_assert_int_eq(res.bits[1], 2000000129);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_89
  //                               -55.340232221137244782625
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674463.5701808422372447826
  //                       {{-1209067950, 2000000000, 1000000030, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1209067950);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], 1000000030);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_90
  //                               -55.340232221137244782625
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023167.6316267229627552174
  //                        {{914100654, 2000000000, -1294967326, 1245184}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967326);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_91
  //                               -55.340232221137244782625
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023278.3120911652372447826
  //                       {{1085899346, 2000000000, -1294967266, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967266);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_92
  //                               -55.340232221137244782625
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440878.33509433113724478
  //                     {{2141865534, -1006477107, 1000000000, -2146369536}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2141865534);
  ck_assert_int_eq(res.bits[1], -1006477107);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test add_93
  //                               -55.340232221137244782625
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553457.662529407031744782625
  //                           {{100000033, 20000002, 30003000, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100000033);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_94
  //                               -55.340232221137244782625
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440767.65462988886275522
  //                      {{-436832830, 711509811, 1000000000, 1114112}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -436832830);
  ck_assert_int_eq(res.bits[1], 711509811);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test add_95
  //                               -55.340232221137244782625
  // +                              10
  //   ------------------------------------------------
  //                               -45.340232221137244782625
  //                               {{1304428577, -434162105, 2457, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1304428577);
  ck_assert_int_eq(res.bits[1], -434162105);
  ck_assert_int_eq(res.bits[2], 2457);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_96
  //                               -55.340232221137244782625
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456490.34023222113724478262
  //                        {{258159414, -876806601, 723469083, -2146172928}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 258159414);
  ck_assert_int_eq(res.bits[1], -876806601);
  ck_assert_int_eq(res.bits[2], 723469083);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test add_97
  //                               -55.340232221137244782625
  // +                              -0.2343453
  //   ------------------------------------------------
  //                               -55.574577521137244782625
  //                               {{1113145377, -1271807810, 3012, -2146107392}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1113145377);
  ck_assert_int_eq(res.bits[1], -1271807810);
  ck_assert_int_eq(res.bits[2], 3012);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_98
  //                               -55.340232221137244782625
  // +                             127.2343
  //   ------------------------------------------------
  //                                71.894067778862755217375
  //                                {{-1956249633, 1654523335, 3897, 1376256}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249633);
  ck_assert_int_eq(res.bits[1], 1654523335);
  ck_assert_int_eq(res.bits[2], 3897);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_99
  //                               -55.340232221137244782625
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483703.3402322211372447826
  //                       {{85899346, 1156841472, 1164153248, -2146238464}};

  es_decimal one = {{33, 2, 3000, -2146107392}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 85899346);
  ck_assert_int_eq(res.bits[1], 1156841472);
  ck_assert_int_eq(res.bits[2], 1164153248);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_100
  //                                 0.055340232650625384458
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553402.377637418545035384458
  //                            {{10000010, 20000100, 30000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 20000100);
  ck_assert_int_eq(res.bits[2], 30000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_101
  //                                 0.055340232650625384458
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.266956953243784615542
  //                           {{9999990, 19999900, 29999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999990);
  ck_assert_int_eq(res.bits[1], 19999900);
  ck_assert_int_eq(res.bits[2], 29999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_102
  //                                 0.055340232650625384458
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -55.284891988486619398167
  //                               {{23, -98, 2996, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23);
  ck_assert_int_eq(res.bits[1], -98);
  ck_assert_int_eq(res.bits[2], 2996);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_103
  //                                 0.055340232650625384458
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 0.110680465301250768916
  //                                 {{20, 200, 6, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 20);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_104
  //                                 0.055340232650625384458
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534023.320402771097025384458
  //                           {{1600000010, 1410065508, 300000005, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1600000010);
  ck_assert_int_eq(res.bits[1], 1410065508);
  ck_assert_int_eq(res.bits[2], 300000005);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_105
  //                                 0.055340232650625384458
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -63.26366220268391679163092
  //                               {{31444, -9900, 342952, -2145976320}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 31444);
  ck_assert_int_eq(res.bits[1], -9900);
  ck_assert_int_eq(res.bits[2], 342952);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_106
  //                                 0.055340232650625384458
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184467.496120277839755384458
  //                            {{10000010, 10000100, 10000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 10000100);
  ck_assert_int_eq(res.bits[2], 10000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_107
  //                                 0.055340232650625384458
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.055340232650625384458
  //                                 {{10, 100, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_108
  //                                 0.055340232650625384458
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.055340232650625384458
  //                                 {{10, 100, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_109
  //                                 0.055340232650625384458
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3553402327
  //               {{1553402327, 1000000000, 1000000000, 655360}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1553402327);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_110
  //                                 0.055340232650625384458
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8557921239506253845
  //                        {{484603925, 1128849020, 1000000000, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 1128849020);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_111
  //                                 0.055340232650625384458
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451893.5446597673
  //              {{1971761193, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1971761193);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_112
  //                                 0.055340232650625384458
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674413.8687463383506253845
  //                        {{484603925, -2051020164, 1000000003, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], -2051020164);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_113
  //                                 0.055340232650625384458
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.2446597673
  //              {{446597673, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 446597673);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_114
  //                                 0.055340232650625384458
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                 0.055340232750625384458
  //                                 {{1215752202, 123, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752202);
  ck_assert_int_eq(res.bits[1], 123);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_115
  //                                 0.055340232650625384458
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.055340232550625384458
  //                                 {{-1215752182, 76, 3, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752182);
  ck_assert_int_eq(res.bits[1], 76);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_116
  //                                 0.055340232650625384458
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184467.496077328166795384458
  //                            {{10000010, 100, 10000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 10000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_117
  //                                 0.055340232650625384458
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18446.799418237169538384458
  //                             {{1000010, 1000100, 1000003, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000010);
  ck_assert_int_eq(res.bits[1], 1000100);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_118
  //                                 0.055340232650625384458
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18446.688776426573951615542
  //                            {{999990, 9999900, 999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999990);
  ck_assert_int_eq(res.bits[1], 9999900);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_119
  //                                 0.055340232650625384458
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.688737771868287615542
  //                            {{999990, 999900, 999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999990);
  ck_assert_int_eq(res.bits[1], 999900);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_120
  //                                 0.055340232650625384458
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.7451116586493746155
  //                       {{1515396075, 871150980, 1000000000, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 871150980);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_121
  //                                 0.055340232650625384458
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858944.0446597673
  //              {{446597673, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 446597673);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_122
  //                                 0.055340232650625384458
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674408.1746083884493746155
  //                       {{-779571221, 1871150980, 1000000000, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -779571221);
  ck_assert_int_eq(res.bits[1], 1871150980);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_123
  //                                 0.055340232650625384458
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023223.0271991767506253845
  //                        {{484603925, 2128849020, -1294967296, 1245184}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 2128849020);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_124
  //                                 0.055340232650625384458
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9165187114493746155
  //                       {{1515396075, 1871150980, -1294967296, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 1871150980);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_125
  //                                 0.055340232650625384458
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.93952187734937462
  //                     {{2146160502, 1998711510, 1000000000, -2146369536}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2146160502);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test add_126
  //                                 0.055340232650625384458
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553402.266956953243874615542
  //                           {{99999990, 19999900, 29999997, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999990);
  ck_assert_int_eq(res.bits[1], 19999900);
  ck_assert_int_eq(res.bits[2], 29999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_127
  //                                 0.055340232650625384458
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440823.05020234265062538
  //                      {{-441127798, 2001288490, 1000000000, 1114112}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -441127798);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test add_128
  //                                 0.055340232650625384458
  // +                              10
  //   ------------------------------------------------
  //                                10.055340232650625384458
  //                                {{-1304428534, 434162206, 545, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1304428534);
  ck_assert_int_eq(res.bits[1], 434162206);
  ck_assert_int_eq(res.bits[2], 545);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_129
  //                                 0.055340232650625384458
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456434.94465976734937461554
  //                        {{258159410, 2129670496, 723468783, -2146172928}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 258159410);
  ck_assert_int_eq(res.bits[1], 2129670496);
  ck_assert_int_eq(res.bits[2], 723468783);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test add_130
  //                                 0.055340232650625384458
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                -0.179005067349374615542
  //                                {{1113145334, -1271807912, 9, -2146107392}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1113145334);
  ck_assert_int_eq(res.bits[1], -1271807912);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_131
  //                                 0.055340232650625384458
  // +                             127.2343
  //   ------------------------------------------------
  //                               127.289640232650625384458
  //                               {{-1956249590, 1654523437, 6900, 1376256}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249590);
  ck_assert_int_eq(res.bits[1], 1654523437);
  ck_assert_int_eq(res.bits[2], 6900);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_132
  //                                 0.055340232650625384458
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483647.9446597673493746155
  //                       {{515396075, 1027992452, 1164153218, -2146238464}};

  es_decimal one = {{10, 100, 3, 1376256}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 515396075);
  ck_assert_int_eq(res.bits[1], 1027992452);
  ck_assert_int_eq(res.bits[2], 1164153218);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_133
  //                           5534023.2650625384464
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                           6087425.58735972434081
  //                           {{161, 1002, 33, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1002);
  ck_assert_int_eq(res.bits[2], 33);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_134
  //                           5534023.2650625384464
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           4980620.94276535255199
  //                           {{159, 998, 27, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 159);
  ck_assert_int_eq(res.bits[1], 998);
  ck_assert_int_eq(res.bits[2], 27);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_135
  //                           5534023.2650625384464
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                           5533967.924830317309155217375
  //                           {{1599999967, 1410065406, 299997002, 1376256}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599999967);
  ck_assert_int_eq(res.bits[1], 1410065406);
  ck_assert_int_eq(res.bits[2], 299997002);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_136
  //                           5534023.2650625384464
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                           5534023.320402771097025384458
  //                           {{1600000010, 1410065508, 300000005, 1376256}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1600000010);
  ck_assert_int_eq(res.bits[1], 1410065508);
  ck_assert_int_eq(res.bits[2], 300000005);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_137
  //                           5534023.2650625384464
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                          11068046.5301250768928
  //                          {{32, 200, 6, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_138
  //                           5534023.2650625384464
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                           5533959.9460601031118578239111
  //                           {{-320878969, -72738004, -1295001599, 1441792}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -320878969);
  ck_assert_int_eq(res.bits[1], -72738004);
  ck_assert_int_eq(res.bits[2], -1295001599);
  ck_assert_int_eq(res.bits[3], 1441792);

#test add_139
  //                           5534023.2650625384464
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                           5718490.70584258363553
  //                           {{161, 1001, 31, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1001);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_140
  //                           5534023.2650625384464
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                           5534023.2650625384464
  //                           {{16, 100, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 16);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_141
  //                           5534023.2650625384464
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                           5534023.26506253844640
  //                           {{160, 1000, 30, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 160);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 30);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_142
  //                           5534023.2650625384464
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407805985914.5650625384
  //               {{948460392, 1012884902, 1000000000, 655360}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 948460392);
  ck_assert_int_eq(res.bits[1], 1012884902);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_143
  //                           5534023.2650625384464
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1850208431.0655144297464
  //                        {{1016, 1100, 1003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 1100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_144
  //                           5534023.2650625384464
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407794917870.3349374616
  //              {{-1718264168, 987115103, 1000000000, -2146828288}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1718264168);
  ck_assert_int_eq(res.bits[1], 987115103);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_145
  //                           5534023.2650625384464
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1850208437.0784686441464
  //                        {{1016, 15100, 1003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 15100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_146
  //                           5534023.2650625384464
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407794917868.0349374616
  //              {{1051539608, 987115098, 1000000000, -2146828288}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1051539608);
  ck_assert_int_eq(res.bits[1], 987115098);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_147
  //                           5534023.2650625384464
  // +                               0.0000000001
  //   ------------------------------------------------
  //                           5534023.2650625385464
  //                           {{1016, 100, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_148
  //                           5534023.2650625384464
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                           5534023.2650625383464
  //                           {{-984, 99, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -984);
  ck_assert_int_eq(res.bits[1], 99);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_149
  //                           5534023.2650625384464
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                           5718490.70579963396257
  //                           {{161, 1000, 31, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_150
  //                           5534023.2650625384464
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                           5552470.009140542965313
  //                           {{1601, 10001, 301, 983040}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1601);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 301);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_151
  //                           5534023.2650625384464
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                           5515576.520945879221823
  //                           {{1599, 9990, 299, 983040}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599);
  ck_assert_int_eq(res.bits[1], 9990);
  ck_assert_int_eq(res.bits[2], 299);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_152
  //                           5534023.2650625384464
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                           5515576.520984533927487
  //                           {{1599, 9999, 299, 983040}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 299);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_153
  //                           5534023.2650625384464
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1839140384.5353893528536
  //                       {{984, 900, 997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_154
  //                           5534023.2650625384464
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222966324920.8349374616
  //              {{1051539608, 1987115098, -1294967296, -2146828288}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1051539608);
  ck_assert_int_eq(res.bits[1], 1987115098);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_155
  //                           5534023.2650625384464
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1839140384.9648860826536
  //                       {{2984, 1900, 997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2984);
  ck_assert_int_eq(res.bits[1], 1900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_156
  //                           5534023.2650625384464
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5539557246.2369214825464
  //                        {{1016, 2100, 3003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 2100);
  ck_assert_int_eq(res.bits[2], 3003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_157
  //                           5534023.2650625384464
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5528489199.7067964056536
  //                       {{984, 1900, 2997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 1900);
  ck_assert_int_eq(res.bits[2], 2997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_158
  //                           5534023.2650625384464
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184461906799.7297995715536
  //                     {{299984, 199900, 99997, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299984);
  ck_assert_int_eq(res.bits[1], 199900);
  ck_assert_int_eq(res.bits[2], 99997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_159
  //                           5534023.2650625384464
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           4980620.94276535255190
  //                           {{150, 998, 27, 917504}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 150);
  ck_assert_int_eq(res.bits[1], 998);
  ck_assert_int_eq(res.bits[2], 27);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_160
  //                           5534023.2650625384464
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184472974846.2599246484464
  //                      {{300016, 200100, 100003, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300016);
  ck_assert_int_eq(res.bits[1], 200100);
  ck_assert_int_eq(res.bits[2], 100003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_161
  //                           5534023.2650625384464
  // +                              10
  //   ------------------------------------------------
  //                           5534033.2650625384464
  //                           {{276447248, 23383, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 276447248);
  ck_assert_int_eq(res.bits[1], 23383);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_162
  //                           5534023.2650625384464
  // +                      -133456435
  //   ------------------------------------------------
  //                        -127922411.7349374615536
  //                        {{34988016, 1489831196, 69, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988016);
  ck_assert_int_eq(res.bits[1], 1489831196);
  ck_assert_int_eq(res.bits[2], 69);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_163
  //                           5534023.2650625384464
  // +                              -0.2343453
  //   ------------------------------------------------
  //                           5534023.0307172384464
  //                           {{1599143632, -446, 2, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599143632);
  ck_assert_int_eq(res.bits[1], -446);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_164
  //                           5534023.2650625384464
  // +                             127.2343
  //   ------------------------------------------------
  //                           5534150.4993625384464
  //                           {{1888232976, 296340, 3, 851968}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1888232976);
  ck_assert_int_eq(res.bits[1], 296340);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_165
  //                           5534023.2650625384464
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2141949624.7349374615536
  //                       {{-16, 658067355, 1161, -2146631680}};

  es_decimal one = {{16, 100, 3, 851968}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -16);
  ck_assert_int_eq(res.bits[1], 658067355);
  ck_assert_int_eq(res.bits[2], 1161);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_166
  //                               -63.31900243533454217608892
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553339.00329475055986782391108
  //                            {{999967556, 1999999900, -1295310549, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], 1999999900);
  ck_assert_int_eq(res.bits[2], -1295310549);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_167
  //                               -63.31900243533454217608892
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553465.64129962122895217608892
  //                           {{1000032444, 2000000100, -1294624043, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000032444);
  ck_assert_int_eq(res.bits[1], 2000000100);
  ck_assert_int_eq(res.bits[2], -1294624043);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_168
  //                               -63.31900243533454217608892
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                              -118.65923465647178695871392
  //                              {{35744, 300, 643253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 35744);
  ck_assert_int_eq(res.bits[1], 300);
  ck_assert_int_eq(res.bits[2], 643253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_169
  //                               -63.31900243533454217608892
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                               -63.26366220268391679163092
  //                               {{31444, -9900, 342952, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 31444);
  ck_assert_int_eq(res.bits[1], -9900);
  ck_assert_int_eq(res.bits[2], 342952);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_170
  //                               -63.31900243533454217608892
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5533959.9460601031118578239111
  //                           {{-320878969, -72738004, -1295001599, 1441792}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -320878969);
  ck_assert_int_eq(res.bits[1], -72738004);
  ck_assert_int_eq(res.bits[2], -1295001599);
  ck_assert_int_eq(res.bits[3], 1441792);

#test add_171
  //                               -63.31900243533454217608892
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                              -126.63800487066908435217784
  //                              {{64888, 200, 686506, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 64888);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 686506);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_172
  //                               -63.31900243533454217608892
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184404.12177760985458782391108
  //                            {{999967556, 999999900, 999656747, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], 999999900);
  ck_assert_int_eq(res.bits[2], 999656747);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_173
  //                               -63.31900243533454217608892
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                               -63.31900243533454217608892
  //                               {{32444, 100, 343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_174
  //                               -63.31900243533454217608892
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                               -63.31900243533454217608892
  //                               {{32444, 100, 343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_175
  //                               -63.31900243533454217608892
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451827.9809975647
  //               {{-829831841, 999999852, 1000000000, 655360}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -829831841);
  ck_assert_int_eq(res.bits[1], 999999852);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_176
  //                               -63.31900243533454217608892
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674344.4814494559654578239
  //                        {{-712832961, -397152862, 999999965, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], -397152862);
  ck_assert_int_eq(res.bits[2], 999999965);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_177
  //                               -63.31900243533454217608892
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451956.9190024353
  //              {{60028065, 1000000153, 1000000000, -2146828288}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 60028065);
  ck_assert_int_eq(res.bits[1], 1000000153);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_178
  //                               -63.31900243533454217608892
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674350.4944036703654578239
  //                        {{-712832961, 717945250, 999999969, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], 717945250);
  ck_assert_int_eq(res.bits[2], 999999969);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_179
  //                               -63.31900243533454217608892
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451954.6190024353
  //              {{-1465135455, 1000000147, 1000000000, -2146828288}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1465135455);
  ck_assert_int_eq(res.bits[1], 1000000147);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_180
  //                               -63.31900243533454217608892
  // +                               0.0000000001
  //   ------------------------------------------------
  //                               -63.31900243523454217608892
  //                               {{-1316102468, -2229, 343252, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1316102468);
  ck_assert_int_eq(res.bits[1], -2229);
  ck_assert_int_eq(res.bits[2], 343252);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_181
  //                               -63.31900243533454217608892
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                               -63.31900243543454217608892
  //                               {{1316167356, 2428, 343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1316167356);
  ck_assert_int_eq(res.bits[1], 2428);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_182
  //                               -63.31900243533454217608892
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184404.12173466018162782391108
  //                            {{999967556, -100, 999656746, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], -100);
  ck_assert_int_eq(res.bits[2], 999656746);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_183
  //                               -63.31900243533454217608892
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18383.42507556918437082391108
  //                             {{99967556, 99999900, 99656747, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99967556);
  ck_assert_int_eq(res.bits[1], 99999900);
  ck_assert_int_eq(res.bits[2], 99656747);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_184
  //                               -63.31900243533454217608892
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18510.06311909455911917608892
  //                            {{100032444, 1000000100, 100343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100032444);
  ck_assert_int_eq(res.bits[1], 1000000100);
  ck_assert_int_eq(res.bits[2], 100343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_185
  //                               -63.31900243533454217608892
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18510.06308043985345517608892
  //                            {{100032444, 100000100, 100343253, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100032444);
  ck_assert_int_eq(res.bits[1], 100000100);
  ck_assert_int_eq(res.bits[2], 100343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_186
  //                               -63.31900243533454217608892
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674471.1194543266345421761
  //                       {{-1582134335, -1897814435, 1000000034, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -1897814435);
  ck_assert_int_eq(res.bits[2], 1000000034);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_187
  //                               -63.31900243533454217608892
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971859007.4190024353
  //              {{-1465135455, 2000000147, -1294967296, -2146828288}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1465135455);
  ck_assert_int_eq(res.bits[1], 2000000147);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_188
  //                               -63.31900243533454217608892
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674471.5489510564345421761
  //                       {{417865665, -897814434, 1000000034, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 417865665);
  ck_assert_int_eq(res.bits[1], -897814434);
  ck_assert_int_eq(res.bits[2], 1000000034);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_189
  //                               -63.31900243533454217608892
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023159.6528565087654578239
  //                        {{-712832961, 602847138, -1294967330, 1245184}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], 602847138);
  ck_assert_int_eq(res.bits[2], -1294967330);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_190
  //                               -63.31900243533454217608892
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023286.2908613794345421761
  //                       {{-1582134335, -897814435, -1294967262, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -897814435);
  ck_assert_int_eq(res.bits[2], -1294967262);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_191
  //                               -63.31900243533454217608892
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440886.31386454533454218
  //                     {{-204097142, -820706887, 1000000000, -2146369536}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -204097142);
  ck_assert_int_eq(res.bits[1], -820706887);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test add_192
  //                               -63.31900243533454217608892
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553465.64129962122904217608892
  //                           {{1410097852, 2000000102, -1294624043, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1410097852);
  ck_assert_int_eq(res.bits[1], 2000000102);
  ck_assert_int_eq(res.bits[2], -1294624043);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_193
  //                               -63.31900243533454217608892
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440759.67585967466545782
  //                      {{1909129846, 525739591, 1000000000, 1114112}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1909129846);
  ck_assert_int_eq(res.bits[1], 525739591);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test add_194
  //                               -63.31900243533454217608892
  // +                              10
  //   ------------------------------------------------
  //                               -53.31900243533454217608892
  //                               {{1593867964, -466537610, 289042, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1593867964);
  ck_assert_int_eq(res.bits[1], -466537610);
  ck_assert_int_eq(res.bits[2], 289042);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_195
  //                               -63.31900243533454217608892
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456498.31900243533454217609
  //                        {{-652373623, 209820124, 723469127, -2146172928}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -652373623);
  ck_assert_int_eq(res.bits[1], 209820124);
  ck_assert_int_eq(res.bits[2], 723469127);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test add_196
  //                               -63.31900243533454217608892
  // +                              -0.2343453
  //   ------------------------------------------------
  //                               -63.55334773533454217608892
  //                               {{-354582852, 1668237805, 344523, -2145976320}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -354582852);
  ck_assert_int_eq(res.bits[1], 1668237805);
  ck_assert_int_eq(res.bits[2], 344523);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_197
  //                               -63.31900243533454217608892
  // +                             127.2343
  //   ------------------------------------------------
  //                                63.91529756466545782391108
  //                                {{1943503172, -2051390890, 346485, 1507328}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1943503172);
  ck_assert_int_eq(res.bits[1], -2051390890);
  ck_assert_int_eq(res.bits[2], 346485);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_198
  //                               -63.31900243533454217608892
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483711.3190024353345421761
  //                       {{1712832961, -1740972963, 1164153252, -2146238464}};

  es_decimal one = {{32444, 100, 343253, -2145976320}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1712832961);
  ck_assert_int_eq(res.bits[1], -1740972963);
  ck_assert_int_eq(res.bits[2], 1164153252);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_199
  //                            184467.44078004518913
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            737869.76307723108354
  //                            {{2, 3, 4, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_200
  //                            184467.44078004518913
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -368934.88151714070528
  //                           {{0, 1, 2, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_201
  //                            184467.44078004518913
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            184412.100547824051885217375
  //                            {{9999967, 9999998, 9997000, 1376256}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_202
  //                            184467.44078004518913
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                            184467.496120277839755384458
  //                            {{10000010, 10000100, 10000003, 1376256}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 10000100);
  ck_assert_int_eq(res.bits[2], 10000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_203
  //                            184467.44078004518913
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5718490.70584258363553
  //                           {{161, 1001, 31, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1001);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_204
  //                            184467.44078004518913
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            184404.12177760985458782391108
  //                            {{999967556, 999999900, 999656747, 1507328}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], 999999900);
  ck_assert_int_eq(res.bits[2], 999656747);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_205
  //                            184467.44078004518913
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            368934.88156009037826
  //                            {{2, 2, 2, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_206
  //                            184467.44078004518913
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                            184467.44078004518913
  //                            {{1, 1, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_207
  //                            184467.44078004518913
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                            184467.44078004518913
  //                            {{1, 1, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_208
  //                            184467.44078004518913
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800636358.7407800452
  //               {{-160929660, 1000429496, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -160929660);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_209
  //                            184467.44078004518913
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844858875.24123193648913
  //                        {{10001, 10001, 10001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_210
  //                            184467.44078004518913
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800267426.1592199548
  //              {{-608874116, 999570508, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -608874116);
  ck_assert_int_eq(res.bits[1], 999570508);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_211
  //                            184467.44078004518913
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844858881.25418615088913
  //                        {{10001, 150001, 10001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_212
  //                            184467.44078004518913
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800267423.8592199548
  //              {{-2134037636, 999570503, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2134037636);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_213
  //                            184467.44078004518913
  // +                               0.0000000001
  //   ------------------------------------------------
  //                            184467.44078004528913
  //                            {{10001, 1, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_214
  //                            184467.44078004518913
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                            184467.44078004508913
  //                            {{-9999, 0, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_215
  //                            184467.44078004518913
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            368934.88151714070530
  //                            {{2, 1, 2, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_216
  //                            184467.44078004518913
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                            202914.184858049708043
  //                            {{11, 11, 11, 983040}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_217
  //                            184467.44078004518913
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            166020.696663385964553
  //                            {{9, 0, 9, 983040}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_218
  //                            184467.44078004518913
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            166020.696702040670217
  //                            {{9, 9, 9, 983040}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_219
  //                            184467.44078004518913
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844489940.35967184611087
  //                       {{9999, 9999, 9999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_220
  //                            184467.44078004518913
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971674476.6592199548
  //              {{-2134037636, 1999570503, -1294967296, -2146828288}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2134037636);
  ck_assert_int_eq(res.bits[1], 1999570503);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_221
  //                            184467.44078004518913
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844489940.78916857591087
  //                       {{29999, 19999, 9999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 19999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_222
  //                            184467.44078004518913
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534207690.41263898928913
  //                        {{10001, 20001, 30001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20001);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_223
  //                            184467.44078004518913
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5533838755.53107889891087
  //                       {{9999, 19999, 29999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19999);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_224
  //                            184467.44078004518913
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467256355.55408206481087
  //                     {{2999999, 1999999, 999999, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999999);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_225
  //                            184467.44078004518913
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -368934.88151714070537
  //                           {{9, 1, 2, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_226
  //                            184467.44078004518913
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467625290.43564215518913
  //                      {{3000001, 2000001, 1000001, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000001);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_227
  //                            184467.44078004518913
  // +                              10
  //   ------------------------------------------------
  //                            184477.44078004518913
  //                            {{-1530494975, 232831, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232831);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_228
  //                            184467.44078004518913
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133271967.55921995481087
  //                        {{349880319, 2013411071, 722, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411071);
  ck_assert_int_eq(res.bits[2], 722);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_229
  //                            184467.44078004518913
  // +                              -0.2343453
  //   ------------------------------------------------
  //                            184467.20643474518913
  //                            {{-1188433023, -5456, 0, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5456);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_230
  //                            184467.44078004518913
  // +                             127.2343
  //   ------------------------------------------------
  //                            184594.67508004518913
  //                            {{1702460417, 2962405, 1, 917504}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962405);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_231
  //                            184467.44078004518913
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147299180.55921995481087
  //                       {{-1, -2009260034, 11640, -2146566144}};

  es_decimal one = {{1, 1, 1, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260034);
  ck_assert_int_eq(res.bits[2], 11640);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_232
  //                                 0.0000000000000
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_233
  //                                 0.0000000000000
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_234
  //                                 0.0000000000000
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -55.340232221137244782625
  //                               {{33, 2, 3000, -2146107392}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_235
  //                                 0.0000000000000
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 0.055340232650625384458
  //                                 {{10, 100, 3, 1376256}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_236
  //                                 0.0000000000000
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534023.2650625384464
  //                           {{16, 100, 3, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 16);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_237
  //                                 0.0000000000000
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -63.31900243533454217608892
  //                               {{32444, 100, 343253, -2145976320}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_238
  //                                 0.0000000000000
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184467.44078004518913
  //                            {{1, 1, 1, 917504}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_239
  //                                 0.0000000000000
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.0000000000000
  //                                 {{0, 0, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_240
  //                                 0.0000000000000
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_241
  //                                 0.0000000000000
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_242
  //                                 0.0000000000000
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8004518913000
  //                        {{1000, 1000, 1000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_243
  //                                 0.0000000000000
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451893.6000000000
  //              {{-1769803776, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_244
  //                                 0.0000000000000
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674413.8134061057000
  //                        {{1000, 15000, 1000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 15000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_245
  //                                 0.0000000000000
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_246
  //                                 0.0000000000000
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000001000
  //                                 {{1000, 0, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_247
  //                                 0.0000000000000
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                -0.0000000001000
  //                                {{1000, 0, 0, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_248
  //                                 0.0000000000000
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184467.44073709551617
  //                            {{1, 0, 1, 917504}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_249
  //                                 0.0000000000000
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_250
  //                                 0.0000000000000
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18446.744116659224577
  //                            {{1, 10, 1, -2146500608}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_251
  //                                 0.0000000000000
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_252
  //                                 0.0000000000000
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.8004518913000
  //                       {{1000, 1000, 1000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_253
  //                                 0.0000000000000
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858944.1000000000
  //              {{1000000000, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_254
  //                                 0.0000000000000
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674408.2299486211000
  //                       {{3000, 2000, 1000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_255
  //                                 0.0000000000000
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.9718589441000
  //                        {{1000, 2000, 3000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_256
  //                                 0.0000000000000
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9718589441000
  //                       {{1000, 2000, 3000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_257
  //                                 0.0000000000000
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.9948621100000
  //                     {{300000, 200000, 100000, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_258
  //                                 0.0000000000000
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553402.32229718589450
  //                           {{10, 2, 3, -2146566144}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_259
  //                                 0.0000000000000
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.9948621100000
  //                      {{300000, 200000, 100000, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_260
  //                                 0.0000000000000
  // +                              10
  //   ------------------------------------------------
  //                                10.0000000000000
  //                                {{276447232, 23283, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 276447232);
  ck_assert_int_eq(res.bits[1], 23283);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_261
  //                                 0.0000000000000
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456435.0000000000000
  //                        {{34988032, 1489831296, 72, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988032);
  ck_assert_int_eq(res.bits[1], 1489831296);
  ck_assert_int_eq(res.bits[2], 72);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_262
  //                                 0.0000000000000
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                -0.2343453000000
  //                                {{-1599143616, 545, 0, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1599143616);
  ck_assert_int_eq(res.bits[1], 545);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_263
  //                                 0.0000000000000
  // +                             127.2343
  //   ------------------------------------------------
  //                               127.2343000000000
  //                               {{1888232960, 296240, 0, 851968}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1888232960);
  ck_assert_int_eq(res.bits[1], 296240);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_264
  //                                 0.0000000000000
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483648.0000000000000
  //                       {{0, 658067456, 1164, -2146631680}};

  es_decimal one = {{0, 0, 0, 851968}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 658067456);
  ck_assert_int_eq(res.bits[2], 1164);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_265
  //                                 0.00000000000000
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718589441
  //                            {{1, 2, 3, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_266
  //                                 0.00000000000000
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718589441
  //                           {{1, 2, 3, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_267
  //                                 0.00000000000000
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -55.340232221137244782625
  //                               {{33, 2, 3000, -2146107392}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 33);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_268
  //                                 0.00000000000000
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 0.055340232650625384458
  //                                 {{10, 100, 3, 1376256}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_269
  //                                 0.00000000000000
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534023.26506253844640
  //                           {{160, 1000, 30, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 160);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 30);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_270
  //                                 0.00000000000000
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -63.31900243533454217608892
  //                               {{32444, 100, 343253, -2145976320}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 32444);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_271
  //                                 0.00000000000000
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184467.44078004518913
  //                            {{1, 1, 1, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_272
  //                                 0.00000000000000
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_273
  //                                 0.00000000000000
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.00000000000000
  //                                 {{0, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_274
  //                                 0.00000000000000
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_275
  //                                 0.00000000000000
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.80045189130000
  //                        {{10000, 10000, 10000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_276
  //                                 0.00000000000000
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451893.6000000000
  //              {{-1769803776, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_277
  //                                 0.00000000000000
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674413.81340610570000
  //                        {{10000, 150000, 10000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_278
  //                                 0.00000000000000
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_279
  //                                 0.00000000000000
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                 0.00000000010000
  //                                 {{10000, 0, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_280
  //                                 0.00000000000000
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                -0.00000000010000
  //                                {{10000, 0, 0, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_281
  //                                 0.00000000000000
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184467.44073709551617
  //                            {{1, 0, 1, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_282
  //                                 0.00000000000000
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_283
  //                                 0.00000000000000
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18446.744116659224577
  //                            {{1, 10, 1, -2146500608}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_284
  //                                 0.00000000000000
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_285
  //                                 0.00000000000000
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.80045189130000
  //                       {{10000, 10000, 10000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_286
  //                                 0.00000000000000
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858944.1000000000
  //              {{1000000000, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_287
  //                                 0.00000000000000
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674408.22994862110000
  //                       {{30000, 20000, 10000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_288
  //                                 0.00000000000000
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.97185894410000
  //                        {{10000, 20000, 30000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_289
  //                                 0.00000000000000
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.97185894410000
  //                       {{10000, 20000, 30000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_290
  //                                 0.00000000000000
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.99486211000000
  //                     {{3000000, 2000000, 1000000, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_291
  //                                 0.00000000000000
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553402.32229718589450
  //                           {{10, 2, 3, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_292
  //                                 0.00000000000000
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.99486211000000
  //                      {{3000000, 2000000, 1000000, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_293
  //                                 0.00000000000000
  // +                              10
  //   ------------------------------------------------
  //                                10.00000000000000
  //                                {{-1530494976, 232830, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494976);
  ck_assert_int_eq(res.bits[1], 232830);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_294
  //                                 0.00000000000000
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456435.00000000000000
  //                        {{349880320, 2013411072, 723, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880320);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 723);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_295
  //                                 0.00000000000000
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                -0.23434530000000
  //                                {{1188433024, 5456, 0, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433024);
  ck_assert_int_eq(res.bits[1], 5456);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_296
  //                                 0.00000000000000
  // +                             127.2343
  //   ------------------------------------------------
  //                               127.23430000000000
  //                               {{1702460416, 2962404, 0, 917504}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460416);
  ck_assert_int_eq(res.bits[1], 2962404);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_297
  //                                 0.00000000000000
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483648.00000000000000
  //                       {{0, -2009260032, 11641, -2146566144}};

  es_decimal one = {{0, 0, 0, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -2009260032);
  ck_assert_int_eq(res.bits[2], 11641);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_298
  //               1844674407800451891.3
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //               1844674407801005293.6222971859
  //               {{1811748819, 1001288490, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_299
  //               1844674407800451891.3
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_300
  //               1844674407800451891.3
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //               1844674407800451835.9597677789
  //               {{1648458973, 999999871, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1648458973);
  ck_assert_int_eq(res.bits[1], 999999871);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_301
  //               1844674407800451891.3
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //               1844674407800451891.3553402327
  //               {{1553402327, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1553402327);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_302
  //               1844674407800451891.3
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //               1844674407805985914.5650625384
  //               {{948460392, 1012884902, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 948460392);
  ck_assert_int_eq(res.bits[1], 1012884902);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_303
  //               1844674407800451891.3
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //               1844674407800451827.9809975647
  //               {{-829831841, 999999852, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -829831841);
  ck_assert_int_eq(res.bits[1], 999999852);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_304
  //               1844674407800451891.3
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //               1844674407800636358.7407800452
  //               {{-160929660, 1000429496, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -160929660);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_305
  //               1844674407800451891.3
  // +                               0.0000000000000
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_306
  //               1844674407800451891.3
  // +                               0.00000000000000
  //   ------------------------------------------------
  //               1844674407800451891.3000000000
  //               {{1000000000, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_307
  //               1844674407800451891.3
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               3689348815600903782.6
  //               {{2, 2, 2, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_308
  //               1844674407800451891.3
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //               1844674409645126299.1004518913
  //               {{1000000001, 1000000001, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_309
  //               1844674407800451891.3
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //                                -2.3
  //                                {{23, 0, 0, -2147418112}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_310
  //               1844674407800451891.3
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //               1844674409645126305.1134061057
  //               {{1000000001, 1000000015, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000015);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_311
  //               1844674407800451891.3
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //                                 0.0
  //                                 {{0, 0, 0, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_312
  //               1844674407800451891.3
  // +                               0.0000000001
  //   ------------------------------------------------
  //               1844674407800451891.3000000001
  //               {{1000000001, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_313
  //               1844674407800451891.3
  // +                              -0.0000000001
  //   ------------------------------------------------
  //               1844674407800451891.2999999999
  //               {{999999999, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_314
  //               1844674407800451891.3
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //               1844674407800636358.7407370955
  //               {{-161359157, 1000429496, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161359157);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_315
  //               1844674407800451891.3
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //               1844674407800470338.0440780045
  //               {{-404583155, 1000042949, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_316
  //               1844674407800451891.3
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //               1844674407800433444.5558833408
  //               {{-1890770688, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890770688);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_317
  //               1844674407800451891.3
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //               1844674407800433444.5559219955
  //               {{-1890384141, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_318
  //               1844674407800451891.3
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //               1844674405955777483.4995481087
  //               {{999999999, 999999999, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_319
  //               1844674407800451891.3
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -3689348815171407052.8
  //              {{0, 1, 2, -2147418112}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_320
  //               1844674407800451891.3
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //               1844674405955777483.0700513789
  //               {{999999997, 999999998, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999997);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_321
  //               1844674407800451891.3
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //               1844674413334475114.2718589441
  //               {{1000000001, 1000000002, 1000000003, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_322
  //               1844674407800451891.3
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //               1844674402266428668.3281410559
  //               {{999999999, 999999998, 999999997, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_323
  //               1844674407800451891.3
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //               1844674223333011068.30513789
  //               {{9999997, 9999998, 9999999, 524288}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_324
  //               1844674407800451891.3
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_325
  //               1844674407800451891.3
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //               1844674592267892714.29486211
  //               {{10000003, 10000002, 10000001, 524288}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_326
  //               1844674407800451891.3
  // +                              10
  //   ------------------------------------------------
  //               1844674407800451901.3
  //               {{101, 1, 1, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_327
  //               1844674407800451891.3
  // +                      -133456435
  //   ------------------------------------------------
  //               1844674407666995456.3
  //               {{-1334564349, 0, 1, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564349);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_328
  //               1844674407800451891.3
  // +                              -0.2343453
  //   ------------------------------------------------
  //               1844674407800451891.0656547
  //               {{-1343453, 999999, 1000000, 458752}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1343453);
  ck_assert_int_eq(res.bits[1], 999999);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 458752);

#test add_329
  //               1844674407800451891.3
  // +                             127.2343
  //   ------------------------------------------------
  //               1844674407800452018.5343
  //               {{1273343, 1000, 1000, 262144}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1273343);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 262144);

#test add_330
  //               1844674407800451891.3
  // +                     -2147483648
  //   ------------------------------------------------
  //               1844674405652968243.3
  //               {{1, -4, 0, 65536}};

  es_decimal one = {{1, 1, 1, 65536}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -4);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_331
  //                        1844674407.8004518913
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                        1845227810.12274907719441
  //                        {{10001, 10002, 10003, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_332
  //                        1844674407.8004518913
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                        1844121005.47815470540559
  //                        {{9999, 9998, 9997, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_333
  //                        1844674407.8004518913
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        1844674352.4602196701627552174
  //                        {{914100654, 1000000000, 999999970, 1245184}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 999999970);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_334
  //                        1844674407.8004518913
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                        1844674407.8557921239506253845
  //                        {{484603925, 1128849020, 1000000000, 1245184}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 1128849020);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_335
  //                        1844674407.8004518913
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                        1850208431.0655144297464
  //                        {{1016, 1100, 1003, 851968}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 1100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_336
  //                        1844674407.8004518913
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        1844674344.4814494559654578239
  //                        {{-712832961, -397152862, 999999965, 1245184}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], -397152862);
  ck_assert_int_eq(res.bits[2], 999999965);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_337
  //                        1844674407.8004518913
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                        1844858875.24123193648913
  //                        {{10001, 10001, 10001, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_338
  //                        1844674407.8004518913
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                        1844674407.8004518913000
  //                        {{1000, 1000, 1000, 851968}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_339
  //                        1844674407.8004518913
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                        1844674407.80045189130000
  //                        {{10000, 10000, 10000, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_340
  //                        1844674407.8004518913
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674409645126299.1004518913
  //               {{1000000001, 1000000001, 1000000001, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_341
  //                        1844674407.8004518913
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        3689348815.6009037826
  //                        {{2, 2, 2, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_342
  //                        1844674407.8004518913
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674405955777485.7995481087
  //              {{-1769803777, 1000000004, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000004);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_343
  //                        1844674407.8004518913
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        3689348821.6138579970
  //                        {{2, 16, 2, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 16);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_344
  //                        1844674407.8004518913
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674405955777483.4995481087
  //              {{999999999, 999999999, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_345
  //                        1844674407.8004518913
  // +                               0.0000000001
  //   ------------------------------------------------
  //                        1844674407.8004518914
  //                        {{2, 1, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_346
  //                        1844674407.8004518913
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                        1844674407.8004518912
  //                        {{0, 1, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_347
  //                        1844674407.8004518913
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                        1844858875.24118898681617
  //                        {{10001, 10000, 10001, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_348
  //                        1844674407.8004518913
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                        1844692854.544529895818913
  //                        {{100001, 100001, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_349
  //                        1844674407.8004518913
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                        1844655961.056335232075423
  //                        {{99999, 99990, 99999, 983040}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_350
  //                        1844674407.8004518913
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                        1844655961.056373886781087
  //                        {{99999, 99999, 99999, 983040}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_351
  //                        1844674407.8004518913
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_352
  //                        1844674407.8004518913
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023221127184536.2995481087
  //              {{999999999, 1999999999, -1294967297, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999999);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_353
  //                        1844674407.8004518913
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                                -0.4294967298
  //                                {{2, 1, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_354
  //                        1844674407.8004518913
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        7378697630.7723108354
  //                        {{2, 3, 4, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_355
  //                        1844674407.8004518913
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -3689348815.1714070528
  //                       {{0, 1, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_356
  //                        1844674407.8004518913
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -182622766415.1944102187
  //                     {{299, 199, 99, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_357
  //                        1844674407.8004518913
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                        1844121005.47815470540550
  //                        {{9990, 9998, 9997, 917504}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_358
  //                        1844674407.8004518913
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      186312115230.7953140013
  //                      {{301, 201, 101, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_359
  //                        1844674407.8004518913
  // +                              10
  //   ------------------------------------------------
  //                        1844674417.8004518913
  //                        {{1215752193, 24, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 24);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_360
  //                        1844674407.8004518913
  // +                      -133456435
  //   ------------------------------------------------
  //                        1711217972.8004518913
  //                        {{1683592193, -310727476, 0, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_361
  //                        1844674407.8004518913
  // +                              -0.2343453
  //   ------------------------------------------------
  //                        1844674407.5661065913
  //                        {{1951514297, 0, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_362
  //                        1844674407.8004518913
  // +                             127.2343
  //   ------------------------------------------------
  //                        1844674535.0347518913
  //                        {{1032680385, 297, 1, 655360}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 297);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_363
  //                        1844674407.8004518913
  // +                     -2147483648
  //   ------------------------------------------------
  //                        -302809240.1995481087
  //                        {{-1, 705032702, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032702);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_364
  //              -1844674407800451893.6
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407799898491.2777028141
  //              {{1713414701, 998711515, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1713414701);
  ck_assert_int_eq(res.bits[1], 998711515);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_365
  //              -1844674407800451893.6
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407801005295.9222971859
  //              {{-958054957, 1001288495, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -958054957);
  ck_assert_int_eq(res.bits[1], 1001288495);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_366
  //              -1844674407800451893.6
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //              -1844674407800451948.9402322211
  //              {{1876704547, 1000000134, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1876704547);
  ck_assert_int_eq(res.bits[1], 1000000134);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_367
  //              -1844674407800451893.6
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //              -1844674407800451893.5446597673
  //              {{1971761193, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1971761193);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_368
  //              -1844674407800451893.6
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //              -1844674407794917870.3349374616
  //              {{-1718264168, 987115103, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1718264168);
  ck_assert_int_eq(res.bits[1], 987115103);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_369
  //              -1844674407800451893.6
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //              -1844674407800451956.9190024353
  //              {{60028065, 1000000153, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 60028065);
  ck_assert_int_eq(res.bits[1], 1000000153);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_370
  //              -1844674407800451893.6
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //              -1844674407800267426.1592199548
  //              {{-608874116, 999570508, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -608874116);
  ck_assert_int_eq(res.bits[1], 999570508);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_371
  //              -1844674407800451893.6
  // +                               0.0000000000000
  //   ------------------------------------------------
  //              -1844674407800451893.6000000000
  //              {{-1769803776, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_372
  //              -1844674407800451893.6
  // +                               0.00000000000000
  //   ------------------------------------------------
  //              -1844674407800451893.6000000000
  //              {{-1769803776, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803776);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_373
  //              -1844674407800451893.6
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //                                -2.3
  //                                {{23, 0, 0, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_374
  //              -1844674407800451893.6
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674405955777485.7995481087
  //              {{-1769803777, 1000000004, 999999999, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000004);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_375
  //              -1844674407800451893.6
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -3689348815600903787.2
  //              {{48, 2, 2, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 48);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_376
  //              -1844674407800451893.6
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //              -1844674405955777479.7865938943
  //              {{-1769803777, 999999990, 999999999, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 999999990);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_377
  //              -1844674407800451893.6
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -3689348815600903784.9
  //              {{25, 2, 2, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 25);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_378
  //              -1844674407800451893.6
  // +                               0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451893.5999999999
  //              {{-1769803777, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_379
  //              -1844674407800451893.6
  // +                              -0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451893.6000000001
  //              {{-1769803775, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_380
  //              -1844674407800451893.6
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //              -1844674407800267426.1592629045
  //              {{-608444619, 999570508, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -608444619);
  ck_assert_int_eq(res.bits[1], 999570508);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_381
  //              -1844674407800451893.6
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800433446.8559219955
  //              {{-365220621, 999957055, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -365220621);
  ck_assert_int_eq(res.bits[1], 999957055);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_382
  //              -1844674407800451893.6
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //              -1844674407800470340.3441166592
  //              {{1120966912, 1000042955, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1120966912);
  ck_assert_int_eq(res.bits[1], 1000042955);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_383
  //              -1844674407800451893.6
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800470340.3440780045
  //              {{1120580365, 1000042955, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1120580365);
  ck_assert_int_eq(res.bits[1], 1000042955);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_384
  //              -1844674407800451893.6
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674409645126301.4004518913
  //              {{-1769803775, 1000000006, 1000000001, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000006);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_385
  //              -1844674407800451893.6
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -7378697630772310837.7
  //              {{25, 3, 4, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 25);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_386
  //              -1844674407800451893.6
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //              -1844674409645126301.8299486211
  //              {{-1769803773, 1000000007, 1000000001, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803773);
  ck_assert_int_eq(res.bits[1], 1000000007);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_387
  //              -1844674407800451893.6
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674402266428670.6281410559
  //              {{-1769803777, 1000000003, 999999997, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000003);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_388
  //              -1844674407800451893.6
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674413334475116.5718589441
  //              {{-1769803775, 1000000007, 1000000003, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000007);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_389
  //              -1844674407800451893.6
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //              -1844674592267892716.59486211
  //              {{240000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 240000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_390
  //              -1844674407800451893.6
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //              -1844674407801005295.9222971859
  //              {{-958054957, 1001288495, 1000000000, -2146828288}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -958054957);
  ck_assert_int_eq(res.bits[1], 1001288495);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_391
  //              -1844674407800451893.6
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //              -1844674223333011070.60513789
  //              {{239999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 239999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_392
  //              -1844674407800451893.6
  // +                              10
  //   ------------------------------------------------
  //              -1844674407800451883.6
  //              {{-76, 0, 1, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -76);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_393
  //              -1844674407800451893.6
  // +                      -133456435
  //   ------------------------------------------------
  //              -1844674407933908328.6
  //              {{1334564374, 1, 1, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564374);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_394
  //              -1844674407800451893.6
  // +                              -0.2343453
  //   ------------------------------------------------
  //              -1844674407800451893.8343453
  //              {{26343453, 1000000, 1000000, -2147024896}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 26343453);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_395
  //              -1844674407800451893.6
  // +                             127.2343
  //   ------------------------------------------------
  //              -1844674407800451766.3657
  //              {{-1248343, 999, 1000, -2147221504}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1248343);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_396
  //              -1844674407800451893.6
  // +                     -2147483648
  //   ------------------------------------------------
  //              -1844674409947935541.6
  //              {{24, 6, 1, -2147418112}};

  es_decimal one = {{24, 1, 1, -2147418112}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 24);
  ck_assert_int_eq(res.bits[1], 6);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_397
  //                        1844674413.8134061057
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                        1845227816.13570329159441
  //                        {{10001, 150002, 10003, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_398
  //                        1844674413.8134061057
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                        1844121011.49110891980559
  //                        {{9999, 149998, 9997, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 149998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_399
  //                        1844674413.8134061057
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        1844674358.4731738845627552174
  //                        {{914100654, 2115098112, 999999973, 1245184}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 2115098112);
  ck_assert_int_eq(res.bits[2], 999999973);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_400
  //                        1844674413.8134061057
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                        1844674413.8687463383506253845
  //                        {{484603925, -2051020164, 1000000003, 1245184}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], -2051020164);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_401
  //                        1844674413.8134061057
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                        1850208437.0784686441464
  //                        {{1016, 15100, 1003, 851968}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 15100);
  ck_assert_int_eq(res.bits[2], 1003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_402
  //                        1844674413.8134061057
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        1844674350.4944036703654578239
  //                        {{-712832961, 717945250, 999999969, 1245184}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], 717945250);
  ck_assert_int_eq(res.bits[2], 999999969);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_403
  //                        1844674413.8134061057
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                        1844858881.25418615088913
  //                        {{10001, 150001, 10001, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150001);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_404
  //                        1844674413.8134061057
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                        1844674413.8134061057000
  //                        {{1000, 15000, 1000, 851968}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 15000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_405
  //                        1844674413.8134061057
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                        1844674413.81340610570000
  //                        {{10000, 150000, 10000, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_406
  //                        1844674413.8134061057
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674409645126305.1134061057
  //               {{1000000001, 1000000015, 1000000001, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000015);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_407
  //                        1844674413.8134061057
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        3689348821.6138579970
  //                        {{2, 16, 2, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 16);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_408
  //                        1844674413.8134061057
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674405955777479.7865938943
  //              {{-1769803777, 999999990, 999999999, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 999999990);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_409
  //                        1844674413.8134061057
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        3689348827.6268122114
  //                        {{2, 30, 2, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_410
  //                        1844674413.8134061057
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674405955777477.4865938943
  //              {{999999999, 999999985, 999999999, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999985);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_411
  //                        1844674413.8134061057
  // +                               0.0000000001
  //   ------------------------------------------------
  //                        1844674413.8134061058
  //                        {{2, 15, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_412
  //                        1844674413.8134061057
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                        1844674413.8134061056
  //                        {{0, 15, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_413
  //                        1844674413.8134061057
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                        1844858881.25414320121617
  //                        {{10001, 150000, 10001, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_414
  //                        1844674413.8134061057
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                        1844692860.557484110218913
  //                        {{100001, 1500001, 100001, 983040}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1500001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_415
  //                        1844674413.8134061057
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                        1844655967.069289446475423
  //                        {{99999, 1499990, 99999, 983040}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 1499990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_416
  //                        1844674413.8134061057
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                        1844655967.069328101181087
  //                        {{99999, 1499999, 99999, 983040}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 1499999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_417
  //                        1844674413.8134061057
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                                 6.0129542144
  //                                 {{0, 14, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 14);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_418
  //                        1844674413.8134061057
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023221127184530.2865938943
  //              {{999999999, 1999999985, -1294967297, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999985);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_419
  //                        1844674413.8134061057
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                                 5.5834574846
  //                                 {{-2, 12, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2);
  ck_assert_int_eq(res.bits[1], 12);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_420
  //                        1844674413.8134061057
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        7378697636.7852650498
  //                        {{2, 17, 4, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 17);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_421
  //                        1844674413.8134061057
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -3689348809.1584528384
  //                       {{0, -13, 1, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -13);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_422
  //                        1844674413.8134061057
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -182622766409.1814560043
  //                     {{299, 185, 99, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 185);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_423
  //                        1844674413.8134061057
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                        1844121011.49110891980550
  //                        {{9990, 149998, 9997, 917504}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 149998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_424
  //                        1844674413.8134061057
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      186312115236.8082682157
  //                      {{301, 215, 101, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 215);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_425
  //                        1844674413.8134061057
  // +                              10
  //   ------------------------------------------------
  //                        1844674423.8134061057
  //                        {{1215752193, 38, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 38);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_426
  //                        1844674413.8134061057
  // +                      -133456435
  //   ------------------------------------------------
  //                        1711217978.8134061057
  //                        {{1683592193, -310727462, 0, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727462);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_427
  //                        1844674413.8134061057
  // +                              -0.2343453
  //   ------------------------------------------------
  //                        1844674413.5790608057
  //                        {{1951514297, 14, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 14);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_428
  //                        1844674413.8134061057
  // +                             127.2343
  //   ------------------------------------------------
  //                        1844674541.0477061057
  //                        {{1032680385, 311, 1, 655360}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 311);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_429
  //                        1844674413.8134061057
  // +                     -2147483648
  //   ------------------------------------------------
  //                        -302809234.1865938943
  //                        {{-1, 705032688, 0, -2146828288}};

  es_decimal one = {{1, 15, 1, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032688);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_430
  //              -1844674407800451891.3
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407799898488.9777028141
  //              {{188251181, 998711510, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_431
  //              -1844674407800451891.3
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_432
  //              -1844674407800451891.3
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //              -1844674407800451946.6402322211
  //              {{351541027, 1000000129, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 351541027);
  ck_assert_int_eq(res.bits[1], 1000000129);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_433
  //              -1844674407800451891.3
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //              -1844674407800451891.2446597673
  //              {{446597673, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 446597673);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_434
  //              -1844674407800451891.3
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //              -1844674407794917868.0349374616
  //              {{1051539608, 987115098, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1051539608);
  ck_assert_int_eq(res.bits[1], 987115098);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_435
  //              -1844674407800451891.3
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //              -1844674407800451954.6190024353
  //              {{-1465135455, 1000000147, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1465135455);
  ck_assert_int_eq(res.bits[1], 1000000147);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_436
  //              -1844674407800451891.3
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //              -1844674407800267423.8592199548
  //              {{-2134037636, 999570503, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2134037636);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_437
  //              -1844674407800451891.3
  // +                               0.0000000000000
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_438
  //              -1844674407800451891.3
  // +                               0.00000000000000
  //   ------------------------------------------------
  //              -1844674407800451891.3000000000
  //              {{1000000000, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_439
  //              -1844674407800451891.3
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //                                 0.0
  //                                 {{0, 0, 0, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_440
  //              -1844674407800451891.3
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674405955777483.4995481087
  //              {{999999999, 999999999, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_441
  //              -1844674407800451891.3
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -3689348815600903784.9
  //              {{25, 2, 2, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 25);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_442
  //              -1844674407800451891.3
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //              -1844674405955777477.4865938943
  //              {{999999999, 999999985, 999999999, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999985);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_443
  //              -1844674407800451891.3
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -3689348815600903782.6
  //              {{2, 2, 2, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_444
  //              -1844674407800451891.3
  // +                               0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451891.2999999999
  //              {{999999999, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_445
  //              -1844674407800451891.3
  // +                              -0.0000000001
  //   ------------------------------------------------
  //              -1844674407800451891.3000000001
  //              {{1000000001, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_446
  //              -1844674407800451891.3
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //              -1844674407800267423.8592629045
  //              {{-2133608139, 999570503, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2133608139);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_447
  //              -1844674407800451891.3
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800433444.5559219955
  //              {{-1890384141, 999957050, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_448
  //              -1844674407800451891.3
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //              -1844674407800470338.0441166592
  //              {{-404196608, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404196608);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_449
  //              -1844674407800451891.3
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //              -1844674407800470338.0440780045
  //              {{-404583155, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_450
  //              -1844674407800451891.3
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //              -1844674409645126299.1004518913
  //              {{1000000001, 1000000001, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_451
  //              -1844674407800451891.3
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -7378697630772310835.4
  //              {{2, 3, 4, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_452
  //              -1844674407800451891.3
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //              -1844674409645126299.5299486211
  //              {{1000000003, 1000000002, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_453
  //              -1844674407800451891.3
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674402266428668.3281410559
  //              {{999999999, 999999998, 999999997, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_454
  //              -1844674407800451891.3
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //              -1844674413334475114.2718589441
  //              {{1000000001, 1000000002, 1000000003, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_455
  //              -1844674407800451891.3
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //              -1844674592267892714.29486211
  //              {{10000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_456
  //              -1844674407800451891.3
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_457
  //              -1844674407800451891.3
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //              -1844674223333011068.30513789
  //              {{9999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_458
  //              -1844674407800451891.3
  // +                              10
  //   ------------------------------------------------
  //              -1844674407800451881.3
  //              {{-99, 0, 1, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_459
  //              -1844674407800451891.3
  // +                      -133456435
  //   ------------------------------------------------
  //              -1844674407933908326.3
  //              {{1334564351, 1, 1, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564351);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_460
  //              -1844674407800451891.3
  // +                              -0.2343453
  //   ------------------------------------------------
  //              -1844674407800451891.5343453
  //              {{3343453, 1000000, 1000000, -2147024896}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3343453);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_461
  //              -1844674407800451891.3
  // +                             127.2343
  //   ------------------------------------------------
  //              -1844674407800451764.0657
  //              {{-1271343, 999, 1000, -2147221504}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1271343);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_462
  //              -1844674407800451891.3
  // +                     -2147483648
  //   ------------------------------------------------
  //              -1844674409947935539.3
  //              {{1, 6, 1, -2147418112}};

  es_decimal one = {{1, 1, 1, -2147418112}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 6);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_463
  //                                 0.0000000001
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718599441
  //                            {{10001, 2, 3, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_464
  //                                 0.0000000001
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718579441
  //                           {{-9999, 1, 3, -2146566144}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_465
  //                                 0.0000000001
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -55.340232221037244782625
  //                               {{-1215752159, -22, 2999, -2146107392}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752159);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2999);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_466
  //                                 0.0000000001
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 0.055340232750625384458
  //                                 {{1215752202, 123, 3, 1376256}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752202);
  ck_assert_int_eq(res.bits[1], 123);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_467
  //                                 0.0000000001
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534023.2650625385464
  //                           {{1016, 100, 3, 851968}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_468
  //                                 0.0000000001
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -63.31900243523454217608892
  //                               {{-1316102468, -2229, 343252, -2145976320}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1316102468);
  ck_assert_int_eq(res.bits[1], -2229);
  ck_assert_int_eq(res.bits[2], 343252);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_469
  //                                 0.0000000001
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184467.44078004528913
  //                            {{10001, 1, 1, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_470
  //                                 0.0000000001
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                 0.0000000001000
  //                                 {{1000, 0, 0, 851968}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_471
  //                                 0.0000000001
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                 0.00000000010000
  //                                 {{10000, 0, 0, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_472
  //                                 0.0000000001
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.3000000001
  //               {{1000000001, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_473
  //                                 0.0000000001
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8004518914
  //                        {{2, 1, 1, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_474
  //                                 0.0000000001
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451893.5999999999
  //              {{-1769803777, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_475
  //                                 0.0000000001
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674413.8134061058
  //                        {{2, 15, 1, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_476
  //                                 0.0000000001
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.2999999999
  //              {{999999999, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_477
  //                                 0.0000000001
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000002
  //                                 {{2, 0, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_478
  //                                 0.0000000001
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_479
  //                                 0.0000000001
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184467.44073709561617
  //                            {{10001, 0, 1, 917504}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_480
  //                                 0.0000000001
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004618913
  //                             {{100001, 1, 1, 983040}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_481
  //                                 0.0000000001
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18446.744116659124577
  //                            {{-99999, 9, 1, -2146500608}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_482
  //                                 0.0000000001
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004418913
  //                            {{-99999, 0, 1, -2146500608}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_483
  //                                 0.0000000001
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.8004518912
  //                       {{0, 1, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_484
  //                                 0.0000000001
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858944.0999999999
  //              {{999999999, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_485
  //                                 0.0000000001
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674408.2299486210
  //                       {{2, 2, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_486
  //                                 0.0000000001
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.9718589442
  //                        {{2, 2, 3, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_487
  //                                 0.0000000001
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9718589440
  //                       {{0, 2, 3, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_488
  //                                 0.0000000001
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.9948621099
  //                     {{299, 200, 100, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_489
  //                                 0.0000000001
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553402.32229718579450
  //                           {{-9990, 1, 3, -2146566144}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9990);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_490
  //                                 0.0000000001
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.9948621101
  //                      {{301, 200, 100, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_491
  //                                 0.0000000001
  // +                              10
  //   ------------------------------------------------
  //                                10.0000000001
  //                                {{1215752193, 23, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_492
  //                                 0.0000000001
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456434.9999999999
  //                        {{-1683592193, 310727476, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592193);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_493
  //                                 0.0000000001
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                -0.2343452999
  //                                {{-1951514297, 0, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_494
  //                                 0.0000000001
  // +                             127.2343
  //   ------------------------------------------------
  //                               127.2343000001
  //                               {{1032680385, 296, 0, 655360}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_495
  //                                 0.0000000001
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483647.9999999999
  //                       {{-1, 705032703, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032703);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_496
  //                                -0.0000000001
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553402.32229718579441
  //                            {{-9999, 1, 3, 917504}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_497
  //                                -0.0000000001
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.32229718599441
  //                           {{10001, 2, 3, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_498
  //                                -0.0000000001
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -55.340232221237244782625
  //                               {{1215752225, 25, 3000, -2146107392}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752225);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_499
  //                                -0.0000000001
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                 0.055340232550625384458
  //                                 {{-1215752182, 76, 3, 1376256}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752182);
  ck_assert_int_eq(res.bits[1], 76);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_500
  //                                -0.0000000001
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534023.2650625383464
  //                           {{-984, 99, 3, 851968}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -984);
  ck_assert_int_eq(res.bits[1], 99);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_501
  //                                -0.0000000001
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -63.31900243543454217608892
  //                               {{1316167356, 2428, 343253, -2145976320}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1316167356);
  ck_assert_int_eq(res.bits[1], 2428);
  ck_assert_int_eq(res.bits[2], 343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_502
  //                                -0.0000000001
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184467.44078004508913
  //                            {{-9999, 0, 1, 917504}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_503
  //                                -0.0000000001
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                -0.0000000001000
  //                                {{1000, 0, 0, -2146631680}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_504
  //                                -0.0000000001
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                -0.00000000010000
  //                                {{10000, 0, 0, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_505
  //                                -0.0000000001
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.2999999999
  //               {{999999999, 1000000000, 1000000000, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_506
  //                                -0.0000000001
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.8004518912
  //                        {{0, 1, 1, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_507
  //                                -0.0000000001
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451893.6000000001
  //              {{-1769803775, 1000000005, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000005);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_508
  //                                -0.0000000001
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674413.8134061056
  //                        {{0, 15, 1, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 15);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_509
  //                                -0.0000000001
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.3000000001
  //              {{1000000001, 1000000000, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_510
  //                                -0.0000000001
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_511
  //                                -0.0000000001
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                -0.0000000002
  //                                {{2, 0, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_512
  //                                -0.0000000001
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184467.44073709541617
  //                            {{-9999, -1, 0, 917504}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_513
  //                                -0.0000000001
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18446.744078004418913
  //                             {{-99999, 0, 1, 983040}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_514
  //                                -0.0000000001
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18446.744116659324577
  //                            {{100001, 10, 1, -2146500608}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_515
  //                                -0.0000000001
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.744078004618913
  //                            {{100001, 1, 1, -2146500608}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_516
  //                                -0.0000000001
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674407.8004518914
  //                       {{2, 1, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_517
  //                                -0.0000000001
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858944.1000000001
  //              {{1000000001, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_518
  //                                -0.0000000001
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674408.2299486212
  //                       {{4, 2, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_519
  //                                -0.0000000001
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.9718589440
  //                        {{0, 2, 3, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_520
  //                                -0.0000000001
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023222.9718589442
  //                       {{2, 2, 3, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_521
  //                                -0.0000000001
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440822.9948621101
  //                     {{301, 200, 100, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_522
  //                                -0.0000000001
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553402.32229718599450
  //                           {{10010, 2, 3, -2146566144}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_523
  //                                -0.0000000001
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.9948621099
  //                      {{299, 200, 100, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_524
  //                                -0.0000000001
  // +                              10
  //   ------------------------------------------------
  //                                 9.9999999999
  //                                 {{1215752191, 23, 0, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752191);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_525
  //                                -0.0000000001
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456435.0000000001
  //                        {{-1683592191, 310727476, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_526
  //                                -0.0000000001
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                -0.2343453001
  //                                {{-1951514295, 0, 0, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_527
  //                                -0.0000000001
  // +                             127.2343
  //   ------------------------------------------------
  //                               127.2342999999
  //                               {{1032680383, 296, 0, 655360}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680383);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_528
  //                                -0.0000000001
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483648.0000000001
  //                       {{1, 705032704, 1, -2146828288}};

  es_decimal one = {{1, 0, 0, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032704);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_529
  //                            184467.44073709551617
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            737869.76303428141058
  //                            {{2, 2, 4, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_530
  //                            184467.44073709551617
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -368934.88156009037824
  //                           {{0, 2, 2, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_531
  //                            184467.44073709551617
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            184412.100504874378925217375
  //                            {{9999967, -2, 9996999, 1376256}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999967);
  ck_assert_int_eq(res.bits[1], -2);
  ck_assert_int_eq(res.bits[2], 9996999);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_532
  //                            184467.44073709551617
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                            184467.496077328166795384458
  //                            {{10000010, 100, 10000003, 1376256}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000010);
  ck_assert_int_eq(res.bits[1], 100);
  ck_assert_int_eq(res.bits[2], 10000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_533
  //                            184467.44073709551617
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5718490.70579963396257
  //                           {{161, 1000, 31, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_534
  //                            184467.44073709551617
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            184404.12173466018162782391108
  //                            {{999967556, -100, 999656746, 1507328}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967556);
  ck_assert_int_eq(res.bits[1], -100);
  ck_assert_int_eq(res.bits[2], 999656746);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_535
  //                            184467.44073709551617
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            368934.88151714070530
  //                            {{2, 1, 2, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_536
  //                            184467.44073709551617
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                            184467.44073709551617
  //                            {{1, 0, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_537
  //                            184467.44073709551617
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                            184467.44073709551617
  //                            {{1, 0, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_538
  //                            184467.44073709551617
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800636358.7407370955
  //               {{-161359157, 1000429496, 1000000000, 655360}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161359157);
  ck_assert_int_eq(res.bits[1], 1000429496);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_539
  //                            184467.44073709551617
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844858875.24118898681617
  //                        {{10001, 10000, 10001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_540
  //                            184467.44073709551617
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800267426.1592629045
  //              {{-608444619, 999570508, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -608444619);
  ck_assert_int_eq(res.bits[1], 999570508);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_541
  //                            184467.44073709551617
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844858881.25414320121617
  //                        {{10001, 150000, 10001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 150000);
  ck_assert_int_eq(res.bits[2], 10001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_542
  //                            184467.44073709551617
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800267423.8592629045
  //              {{-2133608139, 999570503, 1000000000, -2146828288}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2133608139);
  ck_assert_int_eq(res.bits[1], 999570503);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_543
  //                            184467.44073709551617
  // +                               0.0000000001
  //   ------------------------------------------------
  //                            184467.44073709561617
  //                            {{10001, 0, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_544
  //                            184467.44073709551617
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                            184467.44073709541617
  //                            {{-9999, -1, 0, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9999);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_545
  //                            184467.44073709551617
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            368934.88147419103234
  //                            {{2, 0, 2, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_546
  //                            184467.44073709551617
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                            202914.184815100035083
  //                            {{11, 1, 11, 983040}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_547
  //                            184467.44073709551617
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            166020.696620436291593
  //                            {{9, -10, 8, 983040}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], -10);
  ck_assert_int_eq(res.bits[2], 8);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_548
  //                            184467.44073709551617
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            166020.696659090997257
  //                            {{9, -1, 8, 983040}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 8);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_549
  //                            184467.44073709551617
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844489940.35971479578383
  //                       {{9999, 10000, 9999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_550
  //                            184467.44073709551617
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971674476.6592629045
  //              {{-2133608139, 1999570503, -1294967296, -2146828288}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2133608139);
  ck_assert_int_eq(res.bits[1], 1999570503);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_551
  //                            184467.44073709551617
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844489940.78921152558383
  //                       {{29999, 20000, 9999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_552
  //                            184467.44073709551617
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534207690.41259603961617
  //                        {{10001, 20000, 30001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_553
  //                            184467.44073709551617
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5533838755.53112184858383
  //                       {{9999, 20000, 29999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_554
  //                            184467.44073709551617
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467256355.55412501448383
  //                     {{2999999, 2000000, 999999, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_555
  //                            184467.44073709551617
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -368934.88156009037833
  //                           {{9, 2, 2, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_556
  //                            184467.44073709551617
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467625290.43559920551617
  //                      {{3000001, 2000000, 1000001, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_557
  //                            184467.44073709551617
  // +                              10
  //   ------------------------------------------------
  //                            184477.44073709551617
  //                            {{-1530494975, 232830, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232830);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_558
  //                            184467.44073709551617
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133271967.55926290448383
  //                        {{349880319, 2013411072, 722, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 722);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_559
  //                            184467.44073709551617
  // +                              -0.2343453
  //   ------------------------------------------------
  //                            184467.20639179551617
  //                            {{-1188433023, -5457, 0, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5457);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_560
  //                            184467.44073709551617
  // +                             127.2343
  //   ------------------------------------------------
  //                            184594.67503709551617
  //                            {{1702460417, 2962404, 1, 917504}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962404);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_561
  //                            184467.44073709551617
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147299180.55926290448383
  //                       {{-1, -2009260033, 11640, -2146566144}};

  es_decimal one = {{1, 0, 1, 917504}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260033);
  ck_assert_int_eq(res.bits[2], 11640);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_562
  //                             18446.744078004518913
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            571849.066375190413323
  //                            {{11, 21, 31, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_563
  //                             18446.744078004518913
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -534955.578219181375497
  //                           {{9, 19, 29, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_564
  //                             18446.744078004518913
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                             18391.403845783381668217375
  //                             {{999967, 999998, 997000, 1376256}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999967);
  ck_assert_int_eq(res.bits[1], 999998);
  ck_assert_int_eq(res.bits[2], 997000);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_565
  //                             18446.744078004518913
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                             18446.799418237169538384458
  //                             {{1000010, 1000100, 1000003, 1376256}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000010);
  ck_assert_int_eq(res.bits[1], 1000100);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_566
  //                             18446.744078004518913
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5552470.009140542965313
  //                           {{1601, 10001, 301, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1601);
  ck_assert_int_eq(res.bits[1], 10001);
  ck_assert_int_eq(res.bits[2], 301);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_567
  //                             18446.744078004518913
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                             18383.42507556918437082391108
  //                             {{99967556, 99999900, 99656747, 1507328}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99967556);
  ck_assert_int_eq(res.bits[1], 99999900);
  ck_assert_int_eq(res.bits[2], 99656747);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_568
  //                             18446.744078004518913
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            202914.184858049708043
  //                            {{11, 11, 11, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_569
  //                             18446.744078004518913
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_570
  //                             18446.744078004518913
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                             18446.744078004518913
  //                             {{1, 1, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_571
  //                             18446.744078004518913
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800470338.0440780045
  //               {{-404583155, 1000042949, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_572
  //                             18446.744078004518913
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844692854.544529895818913
  //                        {{100001, 100001, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_573
  //                             18446.744078004518913
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800433446.8559219955
  //              {{-365220621, 999957055, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -365220621);
  ck_assert_int_eq(res.bits[1], 999957055);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_574
  //                             18446.744078004518913
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844692860.557484110218913
  //                        {{100001, 1500001, 100001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1500001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_575
  //                             18446.744078004518913
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800433444.5559219955
  //              {{-1890384141, 999957050, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_576
  //                             18446.744078004518913
  // +                               0.0000000001
  //   ------------------------------------------------
  //                             18446.744078004618913
  //                             {{100001, 1, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_577
  //                             18446.744078004518913
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                             18446.744078004418913
  //                             {{-99999, 0, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_578
  //                             18446.744078004518913
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            202914.184815100035083
  //                            {{11, 1, 11, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 11);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_579
  //                             18446.744078004518913
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             36893.488156009037826
  //                             {{2, 2, 2, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_580
  //                             18446.744078004518913
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                                -0.000038654705664
  //                                {{0, 9, 0, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_581
  //                             18446.744078004518913
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                                 0.000000000000000
  //                                 {{0, 0, 0, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_582
  //                             18446.744078004518913
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844655961.056373886781087
  //                       {{99999, 99999, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_583
  //                             18446.744078004518913
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971840497.3559219955
  //              {{-1890384141, 1999957050, -1294967296, -2146828288}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 1999957050);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_584
  //                             18446.744078004518913
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844655961.485870616581087
  //                       {{299999, 199999, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_585
  //                             18446.744078004518913
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534041669.715936948618913
  //                        {{100001, 200001, 300001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_586
  //                             18446.744078004518913
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534004776.227780939581087
  //                       {{99999, 199999, 299999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_587
  //                             18446.744078004518913
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467422376.250784105481087
  //                     {{29999999, 19999999, 9999999, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_588
  //                             18446.744078004518913
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -534955.578219181375587
  //                           {{99, 19, 29, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_589
  //                             18446.744078004518913
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467459269.738940114518913
  //                      {{30000001, 20000001, 10000001, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_590
  //                             18446.744078004518913
  // +                              10
  //   ------------------------------------------------
  //                             18456.744078004518913
  //                             {{1874919425, 2328307, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1874919425);
  ck_assert_int_eq(res.bits[1], 2328307);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_591
  //                             18446.744078004518913
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133437988.255921995481087
  //                        {{-796164097, -1340725761, 7233, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164097);
  ck_assert_int_eq(res.bits[1], -1340725761);
  ck_assert_int_eq(res.bits[2], 7233);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_592
  //                             18446.744078004518913
  // +                              -0.2343453
  //   ------------------------------------------------
  //                             18446.509732704518913
  //                             {{1000571649, -54562, 0, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000571649);
  ck_assert_int_eq(res.bits[1], -54562);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_593
  //                             18446.744078004518913
  // +                             127.2343
  //   ------------------------------------------------
  //                             18573.978378004518913
  //                             {{-155265023, 29624044, 1, 983040}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -155265023);
  ck_assert_int_eq(res.bits[1], 29624044);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_594
  //                             18446.744078004518913
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147465201.255921995481087
  //                       {{-1, 1382236158, 116414, -2146500608}};

  es_decimal one = {{1, 1, 1, 983040}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 1382236158);
  ck_assert_int_eq(res.bits[2], 116414);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_595
  //                            -18446.744116659224577
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            534955.578180526669833
  //                            {{9, 10, 29, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_596
  //                            -18446.744116659224577
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -571849.066413845118987
  //                           {{11, 30, 31, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_597
  //                            -18446.744116659224577
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            -18502.084348880361821782625
  //                            {{1000033, 10000002, 1003000, -2146107392}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000033);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 1003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_598
  //                            -18446.744116659224577
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                            -18446.688776426573951615542
  //                            {{999990, 9999900, 999997, -2146107392}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999990);
  ck_assert_int_eq(res.bits[1], 9999900);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_599
  //                            -18446.744116659224577
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5515576.520945879221823
  //                           {{1599, 9990, 299, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599);
  ck_assert_int_eq(res.bits[1], 9990);
  ck_assert_int_eq(res.bits[2], 299);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_600
  //                            -18446.744116659224577
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            -18510.06311909455911917608892
  //                            {{100032444, 1000000100, 100343253, -2145976320}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100032444);
  ck_assert_int_eq(res.bits[1], 1000000100);
  ck_assert_int_eq(res.bits[2], 100343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_601
  //                            -18446.744116659224577
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            166020.696663385964553
  //                            {{9, 0, 9, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_602
  //                            -18446.744116659224577
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                            -18446.744116659224577
  //                            {{1, 10, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_603
  //                            -18446.744116659224577
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                            -18446.744116659224577
  //                            {{1, 10, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_604
  //                            -18446.744116659224577
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800433444.5558833408
  //               {{-1890770688, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890770688);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_605
  //                            -18446.744116659224577
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844655961.056335232075423
  //                        {{99999, 99990, 99999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_606
  //                            -18446.744116659224577
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800470340.3441166592
  //              {{1120966912, 1000042955, 1000000000, -2146828288}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1120966912);
  ck_assert_int_eq(res.bits[1], 1000042955);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_607
  //                            -18446.744116659224577
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844655967.069289446475423
  //                        {{99999, 1499990, 99999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 1499990);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_608
  //                            -18446.744116659224577
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800470338.0441166592
  //              {{-404196608, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404196608);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_609
  //                            -18446.744116659224577
  // +                               0.0000000001
  //   ------------------------------------------------
  //                            -18446.744116659124577
  //                            {{-99999, 9, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_610
  //                            -18446.744116659224577
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                            -18446.744116659324577
  //                            {{100001, 10, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 10);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_611
  //                            -18446.744116659224577
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            166020.696620436291593
  //                            {{9, -10, 8, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], -10);
  ck_assert_int_eq(res.bits[2], 8);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_612
  //                            -18446.744116659224577
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                                -0.000038654705664
  //                                {{0, 9, 0, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_613
  //                            -18446.744116659224577
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -36893.488233318449154
  //                            {{2, 20, 2, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 20);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_614
  //                            -18446.744116659224577
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -36893.488194663743490
  //                            {{2, 11, 2, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_615
  //                            -18446.744116659224577
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844692854.544568550524577
  //                       {{100001, 100010, 100001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_616
  //                            -18446.744116659224577
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971877390.8441166592
  //              {{-404196608, 2000042949, -1294967296, -2146828288}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404196608);
  ck_assert_int_eq(res.bits[1], 2000042949);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_617
  //                            -18446.744116659224577
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844692854.974065280324577
  //                       {{300001, 200010, 100001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300001);
  ck_assert_int_eq(res.bits[1], 200010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_618
  //                            -18446.744116659224577
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534004776.227742284875423
  //                        {{99999, 199990, 299999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199990);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_619
  //                            -18446.744116659224577
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534041669.715975603324577
  //                       {{100001, 200010, 300001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200010);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_620
  //                            -18446.744116659224577
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467459269.738978769224577
  //                     {{30000001, 20000010, 10000001, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000010);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_621
  //                            -18446.744116659224577
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -571849.066413845119077
  //                           {{101, 30, 31, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_622
  //                            -18446.744116659224577
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467422376.250745450775423
  //                      {{29999999, 19999990, 9999999, 983040}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999990);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_623
  //                            -18446.744116659224577
  // +                              10
  //   ------------------------------------------------
  //                            -18436.744116659224577
  //                            {{-1874919423, -2328297, 0, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1874919423);
  ck_assert_int_eq(res.bits[1], -2328297);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_624
  //                            -18446.744116659224577
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133474881.744116659224577
  //                        {{-796164095, -1340725750, 7235, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164095);
  ck_assert_int_eq(res.bits[1], -1340725750);
  ck_assert_int_eq(res.bits[2], 7235);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_625
  //                            -18446.744116659224577
  // +                              -0.2343453
  //   ------------------------------------------------
  //                            -18446.978461959224577
  //                            {{-1000571647, 54572, 1, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1000571647);
  ck_assert_int_eq(res.bits[1], 54572);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_626
  //                            -18446.744116659224577
  // +                             127.2343
  //   ------------------------------------------------
  //                            -18319.509816659224577
  //                            {{155265025, -29624034, 0, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 155265025);
  ck_assert_int_eq(res.bits[1], -29624034);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_627
  //                            -18446.744116659224577
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147502094.744116659224577
  //                       {{1, 1382236170, 116416, -2146500608}};

  es_decimal one = {{1, 10, 1, -2146500608}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1382236170);
  ck_assert_int_eq(res.bits[2], 116416);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_628
  //                            -18446.744078004518913
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            534955.578219181375497
  //                            {{9, 19, 29, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_629
  //                            -18446.744078004518913
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -571849.066375190413323
  //                           {{11, 21, 31, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_630
  //                            -18446.744078004518913
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                            -18502.084310225656157782625
  //                            {{1000033, 1000002, 1003000, -2146107392}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000033);
  ck_assert_int_eq(res.bits[1], 1000002);
  ck_assert_int_eq(res.bits[2], 1003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_631
  //                            -18446.744078004518913
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                            -18446.688737771868287615542
  //                            {{999990, 999900, 999997, -2146107392}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999990);
  ck_assert_int_eq(res.bits[1], 999900);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_632
  //                            -18446.744078004518913
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5515576.520984533927487
  //                           {{1599, 9999, 299, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 299);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_633
  //                            -18446.744078004518913
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                            -18510.06308043985345517608892
  //                            {{100032444, 100000100, 100343253, -2145976320}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100032444);
  ck_assert_int_eq(res.bits[1], 100000100);
  ck_assert_int_eq(res.bits[2], 100343253);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_634
  //                            -18446.744078004518913
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            166020.696702040670217
  //                            {{9, 9, 9, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 9);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_635
  //                            -18446.744078004518913
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_636
  //                            -18446.744078004518913
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                            -18446.744078004518913
  //                            {{1, 1, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_637
  //                            -18446.744078004518913
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800433444.5559219955
  //               {{-1890384141, 999957050, 1000000000, 655360}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 999957050);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_638
  //                            -18446.744078004518913
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844655961.056373886781087
  //                        {{99999, 99999, 99999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_639
  //                            -18446.744078004518913
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800470340.3440780045
  //              {{1120580365, 1000042955, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1120580365);
  ck_assert_int_eq(res.bits[1], 1000042955);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_640
  //                            -18446.744078004518913
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844655967.069328101181087
  //                        {{99999, 1499999, 99999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 1499999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_641
  //                            -18446.744078004518913
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800470338.0440780045
  //              {{-404583155, 1000042949, 1000000000, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 1000042949);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_642
  //                            -18446.744078004518913
  // +                               0.0000000001
  //   ------------------------------------------------
  //                            -18446.744078004418913
  //                            {{-99999, 0, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99999);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_643
  //                            -18446.744078004518913
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                            -18446.744078004618913
  //                            {{100001, 1, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_644
  //                            -18446.744078004518913
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            166020.696659090997257
  //                            {{9, -1, 8, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 8);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_645
  //                            -18446.744078004518913
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                                 0.000000000000000
  //                                 {{0, 0, 0, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_646
  //                            -18446.744078004518913
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -36893.488194663743490
  //                            {{2, 11, 2, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 11);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_647
  //                            -18446.744078004518913
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -36893.488156009037826
  //                            {{2, 2, 2, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_648
  //                            -18446.744078004518913
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844692854.544529895818913
  //                       {{100001, 100001, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_649
  //                            -18446.744078004518913
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971877390.8440780045
  //              {{-404583155, 2000042949, -1294967296, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 2000042949);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_650
  //                            -18446.744078004518913
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844692854.974026625618913
  //                       {{300001, 200001, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_651
  //                            -18446.744078004518913
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534004776.227780939581087
  //                        {{99999, 199999, 299999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_652
  //                            -18446.744078004518913
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534041669.715936948618913
  //                       {{100001, 200001, 300001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_653
  //                            -18446.744078004518913
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467459269.738940114518913
  //                     {{30000001, 20000001, 10000001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_654
  //                            -18446.744078004518913
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -571849.066375190413413
  //                           {{101, 21, 31, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_655
  //                            -18446.744078004518913
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467422376.250784105481087
  //                      {{29999999, 19999999, 9999999, 983040}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_656
  //                            -18446.744078004518913
  // +                              10
  //   ------------------------------------------------
  //                            -18436.744078004518913
  //                            {{-1874919423, -2328306, 0, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1874919423);
  ck_assert_int_eq(res.bits[1], -2328306);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_657
  //                            -18446.744078004518913
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133474881.744078004518913
  //                        {{-796164095, -1340725759, 7235, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164095);
  ck_assert_int_eq(res.bits[1], -1340725759);
  ck_assert_int_eq(res.bits[2], 7235);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_658
  //                            -18446.744078004518913
  // +                              -0.2343453
  //   ------------------------------------------------
  //                            -18446.978423304518913
  //                            {{-1000571647, 54563, 1, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1000571647);
  ck_assert_int_eq(res.bits[1], 54563);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_659
  //                            -18446.744078004518913
  // +                             127.2343
  //   ------------------------------------------------
  //                            -18319.509778004518913
  //                            {{155265025, -29624043, 0, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 155265025);
  ck_assert_int_eq(res.bits[1], -29624043);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_660
  //                            -18446.744078004518913
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147502094.744078004518913
  //                       {{1, 1382236161, 116416, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146500608}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1382236161);
  ck_assert_int_eq(res.bits[2], 116416);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_661
  //                       -1844674407.8004518913
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                       -1844121005.47815470540559
  //                       {{9999, 9998, 9997, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_662
  //                       -1844674407.8004518913
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -1845227810.12274907719441
  //                       {{10001, 10002, 10003, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_663
  //                       -1844674407.8004518913
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -1844674463.1406841124372447826
  //                       {{1085899346, 1000000000, 1000000030, -2146238464}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 1000000000);
  ck_assert_int_eq(res.bits[2], 1000000030);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_664
  //                       -1844674407.8004518913
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -1844674407.7451116586493746155
  //                       {{1515396075, 871150980, 1000000000, -2146238464}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 871150980);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_665
  //                       -1844674407.8004518913
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -1839140384.5353893528536
  //                       {{984, 900, 997, -2146631680}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_666
  //                       -1844674407.8004518913
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -1844674471.1194543266345421761
  //                       {{-1582134335, -1897814435, 1000000034, -2146238464}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -1897814435);
  ck_assert_int_eq(res.bits[2], 1000000034);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_667
  //                       -1844674407.8004518913
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                       -1844489940.35967184611087
  //                       {{9999, 9999, 9999, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 9999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_668
  //                       -1844674407.8004518913
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                       -1844674407.8004518913000
  //                       {{1000, 1000, 1000, -2146631680}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_669
  //                       -1844674407.8004518913
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                       -1844674407.80045189130000
  //                       {{10000, 10000, 10000, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_670
  //                       -1844674407.8004518913
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674405955777483.4995481087
  //               {{999999999, 999999999, 999999999, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999999);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_671
  //                       -1844674407.8004518913
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_672
  //                       -1844674407.8004518913
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674409645126301.4004518913
  //              {{-1769803775, 1000000006, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000006);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_673
  //                       -1844674407.8004518913
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                                 6.0129542144
  //                                 {{0, 14, 0, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 14);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_674
  //                       -1844674407.8004518913
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674409645126299.1004518913
  //              {{1000000001, 1000000001, 1000000001, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000001);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_675
  //                       -1844674407.8004518913
  // +                               0.0000000001
  //   ------------------------------------------------
  //                       -1844674407.8004518912
  //                       {{0, 1, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_676
  //                       -1844674407.8004518913
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                       -1844674407.8004518914
  //                       {{2, 1, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_677
  //                       -1844674407.8004518913
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                       -1844489940.35971479578383
  //                       {{9999, 10000, 9999, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 10000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_678
  //                       -1844674407.8004518913
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                       -1844655961.056373886781087
  //                       {{99999, 99999, 99999, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 99999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_679
  //                       -1844674407.8004518913
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -1844692854.544568550524577
  //                       {{100001, 100010, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_680
  //                       -1844674407.8004518913
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -1844692854.544529895818913
  //                       {{100001, 100001, 100001, -2146500608}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 100001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_681
  //                       -1844674407.8004518913
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -3689348815.6009037826
  //                       {{2, 2, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_682
  //                       -1844674407.8004518913
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023224816533351.9004518913
  //              {{1000000001, 2000000001, -1294967295, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000001);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_683
  //                       -1844674407.8004518913
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -3689348816.0304005124
  //                       {{4, 3, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_684
  //                       -1844674407.8004518913
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        3689348815.1714070528
  //                        {{0, 1, 2, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_685
  //                       -1844674407.8004518913
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -7378697630.7723108354
  //                       {{2, 3, 4, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_686
  //                       -1844674407.8004518913
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -186312115230.7953140013
  //                     {{301, 201, 101, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_687
  //                       -1844674407.8004518913
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -1845227810.12274907719450
  //                       {{10010, 10002, 10003, -2146566144}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_688
  //                       -1844674407.8004518913
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      182622766415.1944102187
  //                      {{299, 199, 99, 655360}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_689
  //                       -1844674407.8004518913
  // +                              10
  //   ------------------------------------------------
  //                       -1844674397.8004518913
  //                       {{-1215752191, -23, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_690
  //                       -1844674407.8004518913
  // +                      -133456435
  //   ------------------------------------------------
  //                       -1978130842.8004518913
  //                       {{-1683592191, 310727477, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727477);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_691
  //                       -1844674407.8004518913
  // +                              -0.2343453
  //   ------------------------------------------------
  //                       -1844674408.0347971913
  //                       {{-1951514295, 1, 1, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_692
  //                       -1844674407.8004518913
  // +                             127.2343
  //   ------------------------------------------------
  //                       -1844674280.5661518913
  //                       {{-1032680383, -296, 0, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_693
  //                       -1844674407.8004518913
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -3992158055.8004518913
  //                       {{1, 705032705, 2, -2146828288}};

  es_decimal one = {{1, 1, 1, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032705);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_694
  //              -5534023222971858944.1
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //              -5534023222971305541.7777028141
  //              {{188251181, 1998711510, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_695
  //              -5534023222971858944.1
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //              -5534023222972412346.4222971859
  //              {{1811748819, 2001288490, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_696
  //              -5534023222971858944.1
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //              -5534023222971858999.4402322211
  //              {{351541027, 2000000129, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 351541027);
  ck_assert_int_eq(res.bits[1], 2000000129);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_697
  //              -5534023222971858944.1
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //              -5534023222971858944.0446597673
  //              {{446597673, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 446597673);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_698
  //              -5534023222971858944.1
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //              -5534023222966324920.8349374616
  //              {{1051539608, 1987115098, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1051539608);
  ck_assert_int_eq(res.bits[1], 1987115098);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_699
  //              -5534023222971858944.1
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //              -5534023222971859007.4190024353
  //              {{-1465135455, 2000000147, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1465135455);
  ck_assert_int_eq(res.bits[1], 2000000147);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_700
  //              -5534023222971858944.1
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //              -5534023222971674476.6592199548
  //              {{-2134037636, 1999570503, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2134037636);
  ck_assert_int_eq(res.bits[1], 1999570503);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_701
  //              -5534023222971858944.1
  // +                               0.0000000000000
  //   ------------------------------------------------
  //              -5534023222971858944.1000000000
  //              {{1000000000, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_702
  //              -5534023222971858944.1
  // +                               0.00000000000000
  //   ------------------------------------------------
  //              -5534023222971858944.1000000000
  //              {{1000000000, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000000);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_703
  //              -5534023222971858944.1
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //              -3689348815171407052.8
  //              {{0, 1, 2, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_704
  //              -5534023222971858944.1
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //              -5534023221127184536.2995481087
  //              {{999999999, 1999999999, -1294967297, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999999);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_705
  //              -5534023222971858944.1
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -7378697630772310837.7
  //              {{25, 3, 4, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 25);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_706
  //              -5534023222971858944.1
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //              -5534023221127184530.2865938943
  //              {{999999999, 1999999985, -1294967297, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999985);
  ck_assert_int_eq(res.bits[2], -1294967297);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_707
  //              -5534023222971858944.1
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -7378697630772310835.4
  //              {{2, 3, 4, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_708
  //              -5534023222971858944.1
  // +                               0.0000000001
  //   ------------------------------------------------
  //              -5534023222971858944.0999999999
  //              {{999999999, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_709
  //              -5534023222971858944.1
  // +                              -0.0000000001
  //   ------------------------------------------------
  //              -5534023222971858944.1000000001
  //              {{1000000001, 2000000000, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_710
  //              -5534023222971858944.1
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //              -5534023222971674476.6592629045
  //              {{-2133608139, 1999570503, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2133608139);
  ck_assert_int_eq(res.bits[1], 1999570503);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_711
  //              -5534023222971858944.1
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //              -5534023222971840497.3559219955
  //              {{-1890384141, 1999957050, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1890384141);
  ck_assert_int_eq(res.bits[1], 1999957050);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_712
  //              -5534023222971858944.1
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //              -5534023222971877390.8441166592
  //              {{-404196608, 2000042949, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404196608);
  ck_assert_int_eq(res.bits[1], 2000042949);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_713
  //              -5534023222971858944.1
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //              -5534023222971877390.8440780045
  //              {{-404583155, 2000042949, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -404583155);
  ck_assert_int_eq(res.bits[1], 2000042949);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_714
  //              -5534023222971858944.1
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //              -5534023224816533351.9004518913
  //              {{1000000001, 2000000001, -1294967295, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000001);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_715
  //              -5534023222971858944.1
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //             -11068046445943717888.2
  //             {{2, 4, 6, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_716
  //              -5534023222971858944.1
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //              -5534023224816533352.3299486211
  //              {{1000000003, 2000000002, -1294967295, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 2000000002);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_717
  //              -5534023222971858944.1
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //              -5534023217437835721.1281410559
  //              {{999999999, 1999999998, -1294967299, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999998);
  ck_assert_int_eq(res.bits[2], -1294967299);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_718
  //              -5534023222971858944.1
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //              -5534023228505882167.0718589441
  //              {{1000000001, 2000000002, -1294967293, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000002);
  ck_assert_int_eq(res.bits[2], -1294967293);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_719
  //              -5534023222971858944.1
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //              -5534023407439299767.09486211
  //              {{10000003, 20000002, 30000001, -2146959360}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_720
  //              -5534023222971858944.1
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //              -5534023222972412346.4222971859
  //              {{1811748819, 2001288490, -1294967296, -2146828288}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_721
  //              -5534023222971858944.1
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //              -5534023038504418121.10513789
  //              {{9999997, 19999998, 29999999, -2146959360}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_722
  //              -5534023222971858944.1
  // +                              10
  //   ------------------------------------------------
  //              -5534023222971858934.1
  //              {{-99, 1, 3, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_723
  //              -5534023222971858944.1
  // +                      -133456435
  //   ------------------------------------------------
  //              -5534023223105315379.1
  //              {{1334564351, 2, 3, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564351);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_724
  //              -5534023222971858944.1
  // +                              -0.2343453
  //   ------------------------------------------------
  //              -5534023222971858944.3343453
  //              {{3343453, 2000000, 3000000, -2147024896}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3343453);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 3000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_725
  //              -5534023222971858944.1
  // +                             127.2343
  //   ------------------------------------------------
  //              -5534023222971858816.8657
  //              {{-1271343, 1999, 3000, -2147221504}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1271343);
  ck_assert_int_eq(res.bits[1], 1999);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_726
  //              -5534023222971858944.1
  // +                     -2147483648
  //   ------------------------------------------------
  //              -5534023225119342592.1
  //              {{1, 7, 3, -2147418112}};

  es_decimal one = {{1, 2, 3, -2147418112}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 7);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_727
  //                       -1844674408.2299486211
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                       -1844121005.90765143520559
  //                       {{29999, 19998, 9997, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_728
  //                       -1844674408.2299486211
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -1845227810.55224580699441
  //                       {{30001, 20002, 10003, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_729
  //                       -1844674408.2299486211
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -1844674463.5701808422372447826
  //                       {{-1209067950, 2000000000, 1000000030, -2146238464}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1209067950);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], 1000000030);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_730
  //                       -1844674408.2299486211
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -1844674408.1746083884493746155
  //                       {{-779571221, 1871150980, 1000000000, -2146238464}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -779571221);
  ck_assert_int_eq(res.bits[1], 1871150980);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_731
  //                       -1844674408.2299486211
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -1839140384.9648860826536
  //                       {{2984, 1900, 997, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2984);
  ck_assert_int_eq(res.bits[1], 1900);
  ck_assert_int_eq(res.bits[2], 997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_732
  //                       -1844674408.2299486211
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -1844674471.5489510564345421761
  //                       {{417865665, -897814434, 1000000034, -2146238464}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 417865665);
  ck_assert_int_eq(res.bits[1], -897814434);
  ck_assert_int_eq(res.bits[2], 1000000034);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_733
  //                       -1844674408.2299486211
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                       -1844489940.78916857591087
  //                       {{29999, 19999, 9999, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 19999);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_734
  //                       -1844674408.2299486211
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                       -1844674408.2299486211000
  //                       {{3000, 2000, 1000, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_735
  //                       -1844674408.2299486211
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                       -1844674408.22994862110000
  //                       {{30000, 20000, 10000, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 10000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_736
  //                       -1844674408.2299486211
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674405955777483.0700513789
  //               {{999999997, 999999998, 999999999, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999997);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999999);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_737
  //                       -1844674408.2299486211
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                                -0.4294967298
  //                                {{2, 1, 0, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_738
  //                       -1844674408.2299486211
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674409645126301.8299486211
  //              {{-1769803773, 1000000007, 1000000001, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803773);
  ck_assert_int_eq(res.bits[1], 1000000007);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_739
  //                       -1844674408.2299486211
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                                 5.5834574846
  //                                 {{-2, 12, 0, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2);
  ck_assert_int_eq(res.bits[1], 12);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_740
  //                       -1844674408.2299486211
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674409645126299.5299486211
  //              {{1000000003, 1000000002, 1000000001, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000001);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_741
  //                       -1844674408.2299486211
  // +                               0.0000000001
  //   ------------------------------------------------
  //                       -1844674408.2299486210
  //                       {{2, 2, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_742
  //                       -1844674408.2299486211
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                       -1844674408.2299486212
  //                       {{4, 2, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_743
  //                       -1844674408.2299486211
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                       -1844489940.78921152558383
  //                       {{29999, 20000, 9999, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 9999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_744
  //                       -1844674408.2299486211
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                       -1844655961.485870616581087
  //                       {{299999, 199999, 99999, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 99999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_745
  //                       -1844674408.2299486211
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -1844692854.974065280324577
  //                       {{300001, 200010, 100001, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300001);
  ck_assert_int_eq(res.bits[1], 200010);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_746
  //                       -1844674408.2299486211
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -1844692854.974026625618913
  //                       {{300001, 200001, 100001, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 100001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_747
  //                       -1844674408.2299486211
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -3689348816.0304005124
  //                       {{4, 3, 2, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_748
  //                       -1844674408.2299486211
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023224816533352.3299486211
  //              {{1000000003, 2000000002, -1294967295, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 2000000002);
  ck_assert_int_eq(res.bits[2], -1294967295);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_749
  //                       -1844674408.2299486211
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -3689348816.4598972422
  //                       {{6, 4, 2, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 6);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_750
  //                       -1844674408.2299486211
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        3689348814.7419103230
  //                        {{-2, -1, 1, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_751
  //                       -1844674408.2299486211
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -7378697631.2018075652
  //                       {{4, 4, 4, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_752
  //                       -1844674408.2299486211
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -186312115231.2248107311
  //                     {{303, 202, 101, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 303);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_753
  //                       -1844674408.2299486211
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -1845227810.55224580699450
  //                       {{30010, 20002, 10003, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30010);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_754
  //                       -1844674408.2299486211
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      182622766414.7649134889
  //                      {{297, 198, 99, 655360}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 297);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_755
  //                       -1844674408.2299486211
  // +                              10
  //   ------------------------------------------------
  //                       -1844674398.2299486211
  //                       {{-1215752189, -22, 0, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752189);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_756
  //                       -1844674408.2299486211
  // +                      -133456435
  //   ------------------------------------------------
  //                       -1978130843.2299486211
  //                       {{-1683592189, 310727478, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592189);
  ck_assert_int_eq(res.bits[1], 310727478);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_757
  //                       -1844674408.2299486211
  // +                              -0.2343453
  //   ------------------------------------------------
  //                       -1844674408.4642939211
  //                       {{-1951514293, 2, 1, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514293);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_758
  //                       -1844674408.2299486211
  // +                             127.2343
  //   ------------------------------------------------
  //                       -1844674280.9956486211
  //                       {{-1032680381, -295, 0, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680381);
  ck_assert_int_eq(res.bits[1], -295);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_759
  //                       -1844674408.2299486211
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -3992158056.2299486211
  //                       {{3, 705032706, 2, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], 705032706);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_760
  //                        5534023222.9718589441
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                        5534576625.29415612999441
  //                        {{10001, 20002, 30003, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_761
  //                        5534023222.9718589441
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                        5533469820.64956175820559
  //                        {{9999, 19998, 29997, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_762
  //                        5534023222.9718589441
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        5534023167.6316267229627552174
  //                        {{914100654, 2000000000, -1294967326, 1245184}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 914100654);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967326);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_763
  //                        5534023222.9718589441
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                        5534023223.0271991767506253845
  //                        {{484603925, 2128849020, -1294967296, 1245184}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 484603925);
  ck_assert_int_eq(res.bits[1], 2128849020);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_764
  //                        5534023222.9718589441
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                        5539557246.2369214825464
  //                        {{1016, 2100, 3003, 851968}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1016);
  ck_assert_int_eq(res.bits[1], 2100);
  ck_assert_int_eq(res.bits[2], 3003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_765
  //                        5534023222.9718589441
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        5534023159.6528565087654578239
  //                        {{-712832961, 602847138, -1294967330, 1245184}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -712832961);
  ck_assert_int_eq(res.bits[1], 602847138);
  ck_assert_int_eq(res.bits[2], -1294967330);
  ck_assert_int_eq(res.bits[3], 1245184);

#test add_766
  //                        5534023222.9718589441
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                        5534207690.41263898928913
  //                        {{10001, 20001, 30001, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20001);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_767
  //                        5534023222.9718589441
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                        5534023222.9718589441000
  //                        {{1000, 2000, 3000, 851968}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_768
  //                        5534023222.9718589441
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                        5534023222.97185894410000
  //                        {{10000, 20000, 30000, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_769
  //                        5534023222.9718589441
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674413334475114.2718589441
  //               {{1000000001, 1000000002, 1000000003, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_770
  //                        5534023222.9718589441
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        7378697630.7723108354
  //                        {{2, 3, 4, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_771
  //                        5534023222.9718589441
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674402266428670.6281410559
  //              {{-1769803777, 1000000003, 999999997, -2146828288}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803777);
  ck_assert_int_eq(res.bits[1], 1000000003);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_772
  //                        5534023222.9718589441
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        7378697636.7852650498
  //                        {{2, 17, 4, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 17);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_773
  //                        5534023222.9718589441
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674402266428668.3281410559
  //              {{999999999, 999999998, 999999997, -2146828288}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_774
  //                        5534023222.9718589441
  // +                               0.0000000001
  //   ------------------------------------------------
  //                        5534023222.9718589442
  //                        {{2, 2, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_775
  //                        5534023222.9718589441
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                        5534023222.9718589440
  //                        {{0, 2, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_776
  //                        5534023222.9718589441
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                        5534207690.41259603961617
  //                        {{10001, 20000, 30001, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_777
  //                        5534023222.9718589441
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                        5534041669.715936948618913
  //                        {{100001, 200001, 300001, 983040}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_778
  //                        5534023222.9718589441
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                        5534004776.227742284875423
  //                        {{99999, 199990, 299999, 983040}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199990);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_779
  //                        5534023222.9718589441
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                        5534004776.227780939581087
  //                        {{99999, 199999, 299999, 983040}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_780
  //                        5534023222.9718589441
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                        3689348815.1714070528
  //                        {{0, 1, 2, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_781
  //                        5534023222.9718589441
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023217437835721.1281410559
  //              {{999999999, 1999999998, -1294967299, -2146828288}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 1999999998);
  ck_assert_int_eq(res.bits[2], -1294967299);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_782
  //                        5534023222.9718589441
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                        3689348814.7419103230
  //                        {{-2, -1, 1, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_783
  //                        5534023222.9718589441
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                       11068046445.9437178882
  //                       {{2, 4, 6, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_784
  //                        5534023222.9718589441
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_785
  //                        5534023222.9718589441
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -178933417600.0230031659
  //                     {{299, 198, 97, -2146828288}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_786
  //                        5534023222.9718589441
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                        5533469820.64956175820550
  //                        {{9990, 19998, 29997, 917504}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_787
  //                        5534023222.9718589441
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      190001464045.9667210541
  //                      {{301, 202, 103, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_788
  //                        5534023222.9718589441
  // +                              10
  //   ------------------------------------------------
  //                        5534023232.9718589441
  //                        {{1215752193, 25, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_789
  //                        5534023222.9718589441
  // +                      -133456435
  //   ------------------------------------------------
  //                        5400566787.9718589441
  //                        {{1683592193, -310727475, 2, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727475);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_790
  //                        5534023222.9718589441
  // +                              -0.2343453
  //   ------------------------------------------------
  //                        5534023222.7375136441
  //                        {{1951514297, 1, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_791
  //                        5534023222.9718589441
  // +                             127.2343
  //   ------------------------------------------------
  //                        5534023350.2061589441
  //                        {{1032680385, 298, 3, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 298);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_792
  //                        5534023222.9718589441
  // +                     -2147483648
  //   ------------------------------------------------
  //                        3386539574.9718589441
  //                        {{1, -705032702, 1, 655360}};

  es_decimal one = {{1, 2, 3, 655360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -705032702);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_793
  //                       -5534023222.9718589441
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                       -5533469820.64956175820559
  //                       {{9999, 19998, 29997, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_794
  //                       -5534023222.9718589441
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -5534576625.29415612999441
  //                       {{10001, 20002, 30003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10001);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_795
  //                       -5534023222.9718589441
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -5534023278.3120911652372447826
  //                       {{1085899346, 2000000000, -1294967266, -2146238464}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1085899346);
  ck_assert_int_eq(res.bits[1], 2000000000);
  ck_assert_int_eq(res.bits[2], -1294967266);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_796
  //                       -5534023222.9718589441
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -5534023222.9165187114493746155
  //                       {{1515396075, 1871150980, -1294967296, -2146238464}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1515396075);
  ck_assert_int_eq(res.bits[1], 1871150980);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_797
  //                       -5534023222.9718589441
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -5528489199.7067964056536
  //                       {{984, 1900, 2997, -2146631680}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 984);
  ck_assert_int_eq(res.bits[1], 1900);
  ck_assert_int_eq(res.bits[2], 2997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_798
  //                       -5534023222.9718589441
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -5534023286.2908613794345421761
  //                       {{-1582134335, -897814435, -1294967262, -2146238464}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1582134335);
  ck_assert_int_eq(res.bits[1], -897814435);
  ck_assert_int_eq(res.bits[2], -1294967262);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_799
  //                       -5534023222.9718589441
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                       -5533838755.53107889891087
  //                       {{9999, 19999, 29999, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 19999);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_800
  //                       -5534023222.9718589441
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                       -5534023222.9718589441000
  //                       {{1000, 2000, 3000, -2146631680}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000);
  ck_assert_int_eq(res.bits[1], 2000);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_801
  //                       -5534023222.9718589441
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                       -5534023222.97185894410000
  //                       {{10000, 20000, 30000, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 30000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_802
  //                       -5534023222.9718589441
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674402266428668.3281410559
  //               {{999999999, 999999998, 999999997, 655360}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 999999999);
  ck_assert_int_eq(res.bits[1], 999999998);
  ck_assert_int_eq(res.bits[2], 999999997);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_803
  //                       -5534023222.9718589441
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                       -3689348815.1714070528
  //                       {{0, 1, 2, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_804
  //                       -5534023222.9718589441
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674413334475116.5718589441
  //              {{-1769803775, 1000000007, 1000000003, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1769803775);
  ck_assert_int_eq(res.bits[1], 1000000007);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_805
  //                       -5534023222.9718589441
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                       -3689348809.1584528384
  //                       {{0, -13, 1, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -13);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_806
  //                       -5534023222.9718589441
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674413334475114.2718589441
  //              {{1000000001, 1000000002, 1000000003, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 1000000002);
  ck_assert_int_eq(res.bits[2], 1000000003);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_807
  //                       -5534023222.9718589441
  // +                               0.0000000001
  //   ------------------------------------------------
  //                       -5534023222.9718589440
  //                       {{0, 2, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_808
  //                       -5534023222.9718589441
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                       -5534023222.9718589442
  //                       {{2, 2, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_809
  //                       -5534023222.9718589441
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                       -5533838755.53112184858383
  //                       {{9999, 20000, 29999, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999);
  ck_assert_int_eq(res.bits[1], 20000);
  ck_assert_int_eq(res.bits[2], 29999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_810
  //                       -5534023222.9718589441
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                       -5534004776.227780939581087
  //                       {{99999, 199999, 299999, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999);
  ck_assert_int_eq(res.bits[1], 199999);
  ck_assert_int_eq(res.bits[2], 299999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_811
  //                       -5534023222.9718589441
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -5534041669.715975603324577
  //                       {{100001, 200010, 300001, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200010);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_812
  //                       -5534023222.9718589441
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -5534041669.715936948618913
  //                       {{100001, 200001, 300001, -2146500608}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100001);
  ck_assert_int_eq(res.bits[1], 200001);
  ck_assert_int_eq(res.bits[2], 300001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_813
  //                       -5534023222.9718589441
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -7378697630.7723108354
  //                       {{2, 3, 4, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 3);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_814
  //                       -5534023222.9718589441
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023228505882167.0718589441
  //              {{1000000001, 2000000002, -1294967293, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000001);
  ck_assert_int_eq(res.bits[1], 2000000002);
  ck_assert_int_eq(res.bits[2], -1294967293);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_815
  //                       -5534023222.9718589441
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -7378697631.2018075652
  //                       {{4, 4, 4, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_816
  //                       -5534023222.9718589441
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                                 0.0000000000
  //                                 {{0, 0, 0, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_817
  //                       -5534023222.9718589441
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                      -11068046445.9437178882
  //                      {{2, 4, 6, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_818
  //                       -5534023222.9718589441
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -190001464045.9667210541
  //                     {{301, 202, 103, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_819
  //                       -5534023222.9718589441
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -5534576625.29415612999450
  //                       {{10010, 20002, 30003, -2146566144}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_820
  //                       -5534023222.9718589441
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      178933417600.0230031659
  //                      {{299, 198, 97, 655360}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_821
  //                       -5534023222.9718589441
  // +                              10
  //   ------------------------------------------------
  //                       -5534023212.9718589441
  //                       {{-1215752191, -22, 2, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_822
  //                       -5534023222.9718589441
  // +                      -133456435
  //   ------------------------------------------------
  //                       -5667479657.9718589441
  //                       {{-1683592191, 310727478, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727478);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_823
  //                       -5534023222.9718589441
  // +                              -0.2343453
  //   ------------------------------------------------
  //                       -5534023223.2062042441
  //                       {{-1951514295, 2, 3, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_824
  //                       -5534023222.9718589441
  // +                             127.2343
  //   ------------------------------------------------
  //                       -5534023095.7375589441
  //                       {{-1032680383, -295, 2, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -295);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_825
  //                       -5534023222.9718589441
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -7681506870.9718589441
  //                       {{1, 705032706, 4, -2146828288}};

  es_decimal one = {{1, 2, 3, -2146828288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032706);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_826
  //                     -184467440822.99486211
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                     -184466887420.67256492410559
  //                     {{2999999, 1999998, 999997, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_827
  //                     -184467440822.99486211
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                     -184467994225.31715929589441
  //                     {{3000001, 2000002, 1000003, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_828
  //                     -184467440822.99486211
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                     -184467440878.33509433113724478
  //                     {{2141865534, -1006477107, 1000000000, -2146369536}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2141865534);
  ck_assert_int_eq(res.bits[1], -1006477107);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test add_829
  //                     -184467440822.99486211
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                     -184467440822.93952187734937462
  //                     {{2146160502, 1998711510, 1000000000, -2146369536}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2146160502);
  ck_assert_int_eq(res.bits[1], 1998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test add_830
  //                     -184467440822.99486211
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                     -184461906799.7297995715536
  //                     {{299984, 199900, 99997, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299984);
  ck_assert_int_eq(res.bits[1], 199900);
  ck_assert_int_eq(res.bits[2], 99997);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_831
  //                     -184467440822.99486211
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                     -184467440886.31386454533454218
  //                     {{-204097142, -820706887, 1000000000, -2146369536}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -204097142);
  ck_assert_int_eq(res.bits[1], -820706887);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146369536);

#test add_832
  //                     -184467440822.99486211
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                     -184467256355.55408206481087
  //                     {{2999999, 1999999, 999999, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999999);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_833
  //                     -184467440822.99486211
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                     -184467440822.9948621100000
  //                     {{300000, 200000, 100000, -2146631680}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_834
  //                     -184467440822.99486211
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                     -184467440822.99486211000000
  //                     {{3000000, 2000000, 1000000, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_835
  //                     -184467440822.99486211
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674223333011068.30513789
  //               {{9999997, 9999998, 9999999, 524288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_836
  //                     -184467440822.99486211
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                     -182622766415.1944102187
  //                     {{299, 199, 99, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_837
  //                     -184467440822.99486211
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674592267892716.59486211
  //              {{240000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 240000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_838
  //                     -184467440822.99486211
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                     -182622766409.1814560043
  //                     {{299, 185, 99, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 185);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_839
  //                     -184467440822.99486211
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674592267892714.29486211
  //              {{10000003, 10000002, 10000001, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_840
  //                     -184467440822.99486211
  // +                               0.0000000001
  //   ------------------------------------------------
  //                     -184467440822.9948621099
  //                     {{299, 200, 100, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_841
  //                     -184467440822.99486211
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                     -184467440822.9948621101
  //                     {{301, 200, 100, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_842
  //                     -184467440822.99486211
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                     -184467256355.55412501448383
  //                     {{2999999, 2000000, 999999, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 999999);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_843
  //                     -184467440822.99486211
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                     -184467422376.250784105481087
  //                     {{29999999, 19999999, 9999999, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_844
  //                     -184467440822.99486211
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                     -184467459269.738978769224577
  //                     {{30000001, 20000010, 10000001, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000010);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_845
  //                     -184467440822.99486211
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                     -184467459269.738940114518913
  //                     {{30000001, 20000001, 10000001, -2146500608}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_846
  //                     -184467440822.99486211
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                     -186312115230.7953140013
  //                     {{301, 201, 101, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_847
  //                     -184467440822.99486211
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023407439299767.09486211
  //              {{10000003, 20000002, 30000001, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30000001);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_848
  //                     -184467440822.99486211
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                     -186312115231.2248107311
  //                     {{303, 202, 101, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 303);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_849
  //                     -184467440822.99486211
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                     -178933417600.0230031659
  //                     {{299, 198, 97, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_850
  //                     -184467440822.99486211
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                     -190001464045.9667210541
  //                     {{301, 202, 103, -2146828288}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_851
  //                     -184467440822.99486211
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -368934881645.98972422
  //                     {{6, 4, 2, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 6);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_852
  //                     -184467440822.99486211
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                     -184467994225.31715929589450
  //                     {{3000010, 2000002, 1000003, -2146566144}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000010);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_853
  //                     -184467440822.99486211
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                                 0.00000000
  //                                 {{0, 0, 0, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_854
  //                     -184467440822.99486211
  // +                              10
  //   ------------------------------------------------
  //                     -184467440812.99486211
  //                     {{-999999997, 1, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -999999997);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_855
  //                     -184467440822.99486211
  // +                      -133456435
  //   ------------------------------------------------
  //                     -184600897257.99486211
  //                     {{-1004678397, 3107276, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1004678397);
  ck_assert_int_eq(res.bits[1], 3107276);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_856
  //                     -184467440822.99486211
  // +                              -0.2343453
  //   ------------------------------------------------
  //                     -184467440823.22920741
  //                     {{23434533, 2, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23434533);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_857
  //                     -184467440822.99486211
  // +                             127.2343
  //   ------------------------------------------------
  //                     -184467440695.76056211
  //                     {{161471891, -1, 0, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161471891);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_858
  //                     -184467440822.99486211
  // +                     -2147483648
  //   ------------------------------------------------
  //                     -186614924470.99486211
  //                     {{3, 50000002, 1, -2146959360}};

  es_decimal one = {{3, 2, 1, -2146959360}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], 50000002);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_859
  //                           -553402.32229718589450
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                                -0.00000000000009
  //                                {{9, 0, 0, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_860
  //                           -553402.32229718589450
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                          -1106804.64459437178891
  //                          {{11, 4, 6, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 11);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_861
  //                           -553402.32229718589450
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                           -553457.662529407031744782625
  //                           {{100000033, 20000002, 30003000, -2146107392}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 100000033);
  ck_assert_int_eq(res.bits[1], 20000002);
  ck_assert_int_eq(res.bits[2], 30003000);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_862
  //                           -553402.32229718589450
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                           -553402.266956953243874615542
  //                           {{99999990, 19999900, 29999997, -2146107392}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99999990);
  ck_assert_int_eq(res.bits[1], 19999900);
  ck_assert_int_eq(res.bits[2], 29999997);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_863
  //                           -553402.32229718589450
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           4980620.94276535255190
  //                           {{150, 998, 27, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 150);
  ck_assert_int_eq(res.bits[1], 998);
  ck_assert_int_eq(res.bits[2], 27);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_864
  //                           -553402.32229718589450
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                           -553465.64129962122904217608892
  //                           {{1410097852, 2000000102, -1294624043, -2145976320}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1410097852);
  ck_assert_int_eq(res.bits[1], 2000000102);
  ck_assert_int_eq(res.bits[2], -1294624043);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_865
  //                           -553402.32229718589450
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                           -368934.88151714070537
  //                           {{9, 1, 2, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_866
  //                           -553402.32229718589450
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589450
  //                           {{10, 2, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_867
  //                           -553402.32229718589450
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                           -553402.32229718589450
  //                           {{10, 2, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_868
  //                           -553402.32229718589450
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407799898488.9777028141
  //               {{188251181, 998711510, 1000000000, 655360}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 188251181);
  ck_assert_int_eq(res.bits[1], 998711510);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_869
  //                           -553402.32229718589450
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844121005.47815470540550
  //                        {{9990, 9998, 9997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 9998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_870
  //                           -553402.32229718589450
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407801005295.9222971859
  //              {{-958054957, 1001288495, 1000000000, -2146828288}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -958054957);
  ck_assert_int_eq(res.bits[1], 1001288495);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_871
  //                           -553402.32229718589450
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844121011.49110891980550
  //                        {{9990, 149998, 9997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 149998);
  ck_assert_int_eq(res.bits[2], 9997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_872
  //                           -553402.32229718589450
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407801005293.6222971859
  //              {{1811748819, 1001288490, 1000000000, -2146828288}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 1001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_873
  //                           -553402.32229718589450
  // +                               0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718579450
  //                           {{-9990, 1, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -9990);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_874
  //                           -553402.32229718589450
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                           -553402.32229718599450
  //                           {{10010, 2, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_875
  //                           -553402.32229718589450
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                           -368934.88156009037833
  //                           {{9, 2, 2, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_876
  //                           -553402.32229718589450
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                           -534955.578219181375587
  //                           {{99, 19, 29, -2146500608}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 99);
  ck_assert_int_eq(res.bits[1], 19);
  ck_assert_int_eq(res.bits[2], 29);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_877
  //                           -553402.32229718589450
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                           -571849.066413845119077
  //                           {{101, 30, 31, -2146500608}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 30);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_878
  //                           -553402.32229718589450
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                           -571849.066375190413413
  //                           {{101, 21, 31, -2146500608}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 21);
  ck_assert_int_eq(res.bits[2], 31);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_879
  //                           -553402.32229718589450
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1845227810.12274907719450
  //                       {{10010, 10002, 10003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 10002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_880
  //                           -553402.32229718589450
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222972412346.4222971859
  //              {{1811748819, 2001288490, -1294967296, -2146828288}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1811748819);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], -1294967296);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_881
  //                           -553402.32229718589450
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1845227810.55224580699450
  //                       {{30010, 20002, 10003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30010);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 10003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_882
  //                           -553402.32229718589450
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5533469820.64956175820550
  //                        {{9990, 19998, 29997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9990);
  ck_assert_int_eq(res.bits[1], 19998);
  ck_assert_int_eq(res.bits[2], 29997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_883
  //                           -553402.32229718589450
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534576625.29415612999450
  //                       {{10010, 20002, 30003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10010);
  ck_assert_int_eq(res.bits[1], 20002);
  ck_assert_int_eq(res.bits[2], 30003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_884
  //                           -553402.32229718589450
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467994225.31715929589450
  //                     {{3000010, 2000002, 1000003, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000010);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_885
  //                           -553402.32229718589450
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                          -1106804.64459437178900
  //                          {{20, 4, 6, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 20);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 6);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_886
  //                           -553402.32229718589450
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184466887420.67256492410550
  //                      {{2999990, 1999998, 999997, 917504}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999990);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_887
  //                           -553402.32229718589450
  // +                              10
  //   ------------------------------------------------
  //                           -553392.32229718589450
  //                           {{1530494986, -232829, 2, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494986);
  ck_assert_int_eq(res.bits[1], -232829);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_888
  //                           -553402.32229718589450
  // +                      -133456435
  //   ------------------------------------------------
  //                        -134009837.32229718589450
  //                        {{349880330, 2013411074, 726, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880330);
  ck_assert_int_eq(res.bits[1], 2013411074);
  ck_assert_int_eq(res.bits[2], 726);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_889
  //                           -553402.32229718589450
  // +                              -0.2343453
  //   ------------------------------------------------
  //                           -553402.55664248589450
  //                           {{1188433034, 5458, 3, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433034);
  ck_assert_int_eq(res.bits[1], 5458);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_890
  //                           -553402.32229718589450
  // +                             127.2343
  //   ------------------------------------------------
  //                           -553275.08799718589450
  //                           {{-1702460406, -2962403, 2, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460406);
  ck_assert_int_eq(res.bits[1], -2962403);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_891
  //                           -553402.32229718589450
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2148037050.32229718589450
  //                       {{10, -2009260030, 11644, -2146566144}};

  es_decimal one = {{10, 2, 3, -2146566144}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], -2009260030);
  ck_assert_int_eq(res.bits[2], 11644);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_892
  //                      184467440822.99486211
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                      184467994225.31715929589441
  //                      {{3000001, 2000002, 1000003, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000002);
  ck_assert_int_eq(res.bits[2], 1000003);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_893
  //                      184467440822.99486211
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                      184466887420.67256492410559
  //                      {{2999999, 1999998, 999997, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999999);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_894
  //                      184467440822.99486211
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                      184467440767.65462988886275522
  //                      {{-436832830, 711509811, 1000000000, 1114112}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -436832830);
  ck_assert_int_eq(res.bits[1], 711509811);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test add_895
  //                      184467440822.99486211
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                      184467440823.05020234265062538
  //                      {{-441127798, 2001288490, 1000000000, 1114112}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -441127798);
  ck_assert_int_eq(res.bits[1], 2001288490);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test add_896
  //                      184467440822.99486211
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                      184472974846.2599246484464
  //                      {{300016, 200100, 100003, 851968}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300016);
  ck_assert_int_eq(res.bits[1], 200100);
  ck_assert_int_eq(res.bits[2], 100003);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_897
  //                      184467440822.99486211
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                      184467440759.67585967466545782
  //                      {{1909129846, 525739591, 1000000000, 1114112}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1909129846);
  ck_assert_int_eq(res.bits[1], 525739591);
  ck_assert_int_eq(res.bits[2], 1000000000);
  ck_assert_int_eq(res.bits[3], 1114112);

#test add_898
  //                      184467440822.99486211
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                      184467625290.43564215518913
  //                      {{3000001, 2000001, 1000001, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000001);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_899
  //                      184467440822.99486211
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                      184467440822.9948621100000
  //                      {{300000, 200000, 100000, 851968}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 300000);
  ck_assert_int_eq(res.bits[1], 200000);
  ck_assert_int_eq(res.bits[2], 100000);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_900
  //                      184467440822.99486211
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                      184467440822.99486211000000
  //                      {{3000000, 2000000, 1000000, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000000);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_901
  //                      184467440822.99486211
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674592267892714.29486211
  //               {{10000003, 10000002, 10000001, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10000003);
  ck_assert_int_eq(res.bits[1], 10000002);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_902
  //                      184467440822.99486211
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                      186312115230.7953140013
  //                      {{301, 201, 101, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 201);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_903
  //                      184467440822.99486211
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674223333011070.60513789
  //              {{239999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 239999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_904
  //                      184467440822.99486211
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                      186312115236.8082682157
  //                      {{301, 215, 101, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 215);
  ck_assert_int_eq(res.bits[2], 101);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_905
  //                      184467440822.99486211
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674223333011068.30513789
  //              {{9999997, 9999998, 9999999, -2146959360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 9999998);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_906
  //                      184467440822.99486211
  // +                               0.0000000001
  //   ------------------------------------------------
  //                      184467440822.9948621101
  //                      {{301, 200, 100, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_907
  //                      184467440822.99486211
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                      184467440822.9948621099
  //                      {{299, 200, 100, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 200);
  ck_assert_int_eq(res.bits[2], 100);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_908
  //                      184467440822.99486211
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                      184467625290.43559920551617
  //                      {{3000001, 2000000, 1000001, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3000001);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 1000001);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_909
  //                      184467440822.99486211
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                      184467459269.738940114518913
  //                      {{30000001, 20000001, 10000001, 983040}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 30000001);
  ck_assert_int_eq(res.bits[1], 20000001);
  ck_assert_int_eq(res.bits[2], 10000001);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_910
  //                      184467440822.99486211
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                      184467422376.250745450775423
  //                      {{29999999, 19999990, 9999999, 983040}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999990);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_911
  //                      184467440822.99486211
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                      184467422376.250784105481087
  //                      {{29999999, 19999999, 9999999, 983040}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 29999999);
  ck_assert_int_eq(res.bits[1], 19999999);
  ck_assert_int_eq(res.bits[2], 9999999);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_912
  //                      184467440822.99486211
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                      182622766415.1944102187
  //                      {{299, 199, 99, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 199);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_913
  //                      184467440822.99486211
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023038504418121.10513789
  //              {{9999997, 19999998, 29999999, -2146959360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 9999997);
  ck_assert_int_eq(res.bits[1], 19999998);
  ck_assert_int_eq(res.bits[2], 29999999);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_914
  //                      184467440822.99486211
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                      182622766414.7649134889
  //                      {{297, 198, 99, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 297);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 99);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_915
  //                      184467440822.99486211
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                      190001464045.9667210541
  //                      {{301, 202, 103, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 301);
  ck_assert_int_eq(res.bits[1], 202);
  ck_assert_int_eq(res.bits[2], 103);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_916
  //                      184467440822.99486211
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                      178933417600.0230031659
  //                      {{299, 198, 97, 655360}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 299);
  ck_assert_int_eq(res.bits[1], 198);
  ck_assert_int_eq(res.bits[2], 97);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_917
  //                      184467440822.99486211
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                                 0.00000000
  //                                 {{0, 0, 0, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_918
  //                      184467440822.99486211
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                      184466887420.67256492410550
  //                      {{2999990, 1999998, 999997, 917504}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2999990);
  ck_assert_int_eq(res.bits[1], 1999998);
  ck_assert_int_eq(res.bits[2], 999997);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_919
  //                      184467440822.99486211
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      368934881645.98972422
  //                      {{6, 4, 2, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 6);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_920
  //                      184467440822.99486211
  // +                              10
  //   ------------------------------------------------
  //                      184467440832.99486211
  //                      {{1000000003, 2, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_921
  //                      184467440822.99486211
  // +                      -133456435
  //   ------------------------------------------------
  //                      184333984387.99486211
  //                      {{1004678403, -3107273, 0, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1004678403);
  ck_assert_int_eq(res.bits[1], -3107273);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_922
  //                      184467440822.99486211
  // +                              -0.2343453
  //   ------------------------------------------------
  //                      184467440822.76051681
  //                      {{-23434527, 1, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -23434527);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_923
  //                      184467440822.99486211
  // +                             127.2343
  //   ------------------------------------------------
  //                      184467440950.22916211
  //                      {{-161471885, 4, 1, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161471885);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_924
  //                      184467440822.99486211
  // +                     -2147483648
  //   ------------------------------------------------
  //                      182319957174.99486211
  //                      {{3, -49999998, 0, 524288}};

  es_decimal one = {{3, 2, 1, 524288}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], -49999998);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_925
  //                                10
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553412.32229718589441
  //                            {{-1530494975, 232832, 3, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232832);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_926
  //                                10
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553392.32229718589441
  //                           {{1530494977, -232829, 2, -2146566144}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494977);
  ck_assert_int_eq(res.bits[1], -232829);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_927
  //                                10
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -45.340232221137244782625
  //                               {{1304428577, -434162105, 2457, -2146107392}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1304428577);
  ck_assert_int_eq(res.bits[1], -434162105);
  ck_assert_int_eq(res.bits[2], 2457);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_928
  //                                10
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                10.055340232650625384458
  //                                {{-1304428534, 434162206, 545, 1376256}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1304428534);
  ck_assert_int_eq(res.bits[1], 434162206);
  ck_assert_int_eq(res.bits[2], 545);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_929
  //                                10
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534033.2650625384464
  //                           {{276447248, 23383, 3, 851968}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 276447248);
  ck_assert_int_eq(res.bits[1], 23383);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_930
  //                                10
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -53.31900243533454217608892
  //                               {{1593867964, -466537610, 289042, -2145976320}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1593867964);
  ck_assert_int_eq(res.bits[1], -466537610);
  ck_assert_int_eq(res.bits[2], 289042);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_931
  //                                10
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184477.44078004518913
  //                            {{-1530494975, 232831, 1, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232831);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_932
  //                                10
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                10.0000000000000
  //                                {{276447232, 23283, 0, 851968}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 276447232);
  ck_assert_int_eq(res.bits[1], 23283);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_933
  //                                10
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                10.00000000000000
  //                                {{-1530494976, 232830, 0, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494976);
  ck_assert_int_eq(res.bits[1], 232830);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_934
  //                                10
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451901.3
  //               {{101, 1, 1, 65536}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 101);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_935
  //                                10
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674417.8004518913
  //                        {{1215752193, 24, 1, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 24);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_936
  //                                10
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451883.6
  //              {{-76, 0, 1, -2147418112}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -76);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_937
  //                                10
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674423.8134061057
  //                        {{1215752193, 38, 1, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 38);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_938
  //                                10
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451881.3
  //              {{-99, 0, 1, -2147418112}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_939
  //                                10
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                10.0000000001
  //                                {{1215752193, 23, 0, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_940
  //                                10
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                 9.9999999999
  //                                 {{1215752191, 23, 0, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752191);
  ck_assert_int_eq(res.bits[1], 23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_941
  //                                10
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184477.44073709551617
  //                            {{-1530494975, 232830, 1, 917504}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1530494975);
  ck_assert_int_eq(res.bits[1], 232830);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_942
  //                                10
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18456.744078004518913
  //                             {{1874919425, 2328307, 1, 983040}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1874919425);
  ck_assert_int_eq(res.bits[1], 2328307);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_943
  //                                10
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18436.744116659224577
  //                            {{-1874919423, -2328297, 0, -2146500608}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1874919423);
  ck_assert_int_eq(res.bits[1], -2328297);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_944
  //                                10
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18436.744078004518913
  //                            {{-1874919423, -2328306, 0, -2146500608}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1874919423);
  ck_assert_int_eq(res.bits[1], -2328306);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_945
  //                                10
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674397.8004518913
  //                       {{-1215752191, -23, 0, -2146828288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -23);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_946
  //                                10
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858934.1
  //              {{-99, 1, 3, -2147418112}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -99);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_947
  //                                10
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674398.2299486211
  //                       {{-1215752189, -22, 0, -2146828288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752189);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_948
  //                                10
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023232.9718589441
  //                        {{1215752193, 25, 3, 655360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1215752193);
  ck_assert_int_eq(res.bits[1], 25);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_949
  //                                10
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023212.9718589441
  //                       {{-1215752191, -22, 2, -2146828288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1215752191);
  ck_assert_int_eq(res.bits[1], -22);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_950
  //                                10
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440812.99486211
  //                     {{-999999997, 1, 1, -2146959360}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -999999997);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_951
  //                                10
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553392.32229718589450
  //                           {{1530494986, -232829, 2, -2146566144}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1530494986);
  ck_assert_int_eq(res.bits[1], -232829);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_952
  //                                10
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440832.99486211
  //                      {{1000000003, 2, 1, 524288}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000000003);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_953
  //                                10
  // +                              10
  //   ------------------------------------------------
  //                                20
  //                                {{20, 0, 0, 0}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 20);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 0);

#test add_954
  //                                10
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456425
  //                        {{133456425, 0, 0, -2147483648}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 133456425);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_955
  //                                10
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                 9.7656547
  //                                 {{97656547, 0, 0, 458752}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 97656547);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test add_956
  //                                10
  // +                             127.2343
  //   ------------------------------------------------
  //                               137.2343
  //                               {{1372343, 0, 0, 262144}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1372343);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test add_957
  //                                10
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483638
  //                       {{2147483638, 0, 0, -2147483648}};

  es_decimal one = {{10, 0, 0, 0}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2147483638);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_958
  //                        -133456435
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                        -132903032.67770281410559
  //                        {{349880319, 2013411070, 720, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411070);
  ck_assert_int_eq(res.bits[2], 720);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_959
  //                        -133456435
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                        -134009837.32229718589441
  //                        {{349880321, 2013411074, 726, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880321);
  ck_assert_int_eq(res.bits[1], 2013411074);
  ck_assert_int_eq(res.bits[2], 726);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_960
  //                        -133456435
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                        -133456490.34023222113724478262
  //                        {{258159414, -876806601, 723469083, -2146172928}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 258159414);
  ck_assert_int_eq(res.bits[1], -876806601);
  ck_assert_int_eq(res.bits[2], 723469083);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test add_961
  //                        -133456435
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                        -133456434.94465976734937461554
  //                        {{258159410, 2129670496, 723468783, -2146172928}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 258159410);
  ck_assert_int_eq(res.bits[1], 2129670496);
  ck_assert_int_eq(res.bits[2], 723468783);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test add_962
  //                        -133456435
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                        -127922411.7349374615536
  //                        {{34988016, 1489831196, 69, -2146631680}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988016);
  ck_assert_int_eq(res.bits[1], 1489831196);
  ck_assert_int_eq(res.bits[2], 69);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_963
  //                        -133456435
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                        -133456498.31900243533454217609
  //                        {{-652373623, 209820124, 723469127, -2146172928}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -652373623);
  ck_assert_int_eq(res.bits[1], 209820124);
  ck_assert_int_eq(res.bits[2], 723469127);
  ck_assert_int_eq(res.bits[3], -2146172928);

#test add_964
  //                        -133456435
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                        -133271967.55921995481087
  //                        {{349880319, 2013411071, 722, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411071);
  ck_assert_int_eq(res.bits[2], 722);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_965
  //                        -133456435
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                        -133456435.0000000000000
  //                        {{34988032, 1489831296, 72, -2146631680}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 34988032);
  ck_assert_int_eq(res.bits[1], 1489831296);
  ck_assert_int_eq(res.bits[2], 72);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_966
  //                        -133456435
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                        -133456435.00000000000000
  //                        {{349880320, 2013411072, 723, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880320);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 723);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_967
  //                        -133456435
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407666995456.3
  //               {{-1334564349, 0, 1, 65536}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1334564349);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_968
  //                        -133456435
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1711217972.8004518913
  //                        {{1683592193, -310727476, 0, 655360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_969
  //                        -133456435
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407933908328.6
  //              {{1334564374, 1, 1, -2147418112}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564374);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_970
  //                        -133456435
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1711217978.8134061057
  //                        {{1683592193, -310727462, 0, 655360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727462);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_971
  //                        -133456435
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407933908326.3
  //              {{1334564351, 1, 1, -2147418112}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564351);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_972
  //                        -133456435
  // +                               0.0000000001
  //   ------------------------------------------------
  //                        -133456434.9999999999
  //                        {{-1683592193, 310727476, 0, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592193);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_973
  //                        -133456435
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                        -133456435.0000000001
  //                        {{-1683592191, 310727476, 0, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727476);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_974
  //                        -133456435
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                        -133271967.55926290448383
  //                        {{349880319, 2013411072, 722, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880319);
  ck_assert_int_eq(res.bits[1], 2013411072);
  ck_assert_int_eq(res.bits[2], 722);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_975
  //                        -133456435
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                        -133437988.255921995481087
  //                        {{-796164097, -1340725761, 7233, -2146500608}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164097);
  ck_assert_int_eq(res.bits[1], -1340725761);
  ck_assert_int_eq(res.bits[2], 7233);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_976
  //                        -133456435
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                        -133474881.744116659224577
  //                        {{-796164095, -1340725750, 7235, -2146500608}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164095);
  ck_assert_int_eq(res.bits[1], -1340725750);
  ck_assert_int_eq(res.bits[2], 7235);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_977
  //                        -133456435
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                        -133474881.744078004518913
  //                        {{-796164095, -1340725759, 7235, -2146500608}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -796164095);
  ck_assert_int_eq(res.bits[1], -1340725759);
  ck_assert_int_eq(res.bits[2], 7235);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_978
  //                        -133456435
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1978130842.8004518913
  //                       {{-1683592191, 310727477, 1, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727477);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_979
  //                        -133456435
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023223105315379.1
  //              {{1334564351, 2, 3, -2147418112}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1334564351);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_980
  //                        -133456435
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1978130843.2299486211
  //                       {{-1683592189, 310727478, 1, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592189);
  ck_assert_int_eq(res.bits[1], 310727478);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_981
  //                        -133456435
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5400566787.9718589441
  //                        {{1683592193, -310727475, 2, 655360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1683592193);
  ck_assert_int_eq(res.bits[1], -310727475);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_982
  //                        -133456435
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5667479657.9718589441
  //                       {{-1683592191, 310727478, 3, -2146828288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1683592191);
  ck_assert_int_eq(res.bits[1], 310727478);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_983
  //                        -133456435
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184600897257.99486211
  //                     {{-1004678397, 3107276, 1, -2146959360}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1004678397);
  ck_assert_int_eq(res.bits[1], 3107276);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_984
  //                        -133456435
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                        -134009837.32229718589450
  //                        {{349880330, 2013411074, 726, -2146566144}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 349880330);
  ck_assert_int_eq(res.bits[1], 2013411074);
  ck_assert_int_eq(res.bits[2], 726);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_985
  //                        -133456435
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184333984387.99486211
  //                      {{1004678403, -3107273, 0, 524288}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1004678403);
  ck_assert_int_eq(res.bits[1], -3107273);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_986
  //                        -133456435
  // +                              10
  //   ------------------------------------------------
  //                        -133456425
  //                        {{133456425, 0, 0, -2147483648}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 133456425);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_987
  //                        -133456435
  // +                      -133456435
  //   ------------------------------------------------
  //                        -266912870
  //                        {{266912870, 0, 0, -2147483648}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 266912870);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_988
  //                        -133456435
  // +                              -0.2343453
  //   ------------------------------------------------
  //                        -133456435.2343453
  //                        {{2049359261, 310727, 0, -2147024896}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2049359261);
  ck_assert_int_eq(res.bits[1], 310727);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_989
  //                        -133456435
  // +                             127.2343
  //   ------------------------------------------------
  //                        -133456307.7657
  //                        {{-1171751399, 310, 0, -2147221504}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1171751399);
  ck_assert_int_eq(res.bits[1], 310);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_990
  //                        -133456435
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2280940083
  //                       {{-2014027213, 0, 0, -2147483648}};

  es_decimal one = {{133456435, 0, 0, -2147483648}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2014027213);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_991
  //                                -0.2343453
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553402.08795188589441
  //                            {{-1188433023, -5455, 2, 917504}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5455);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_992
  //                                -0.2343453
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553402.55664248589441
  //                           {{1188433025, 5458, 3, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433025);
  ck_assert_int_eq(res.bits[1], 5458);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_993
  //                                -0.2343453
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                               -55.574577521137244782625
  //                               {{1113145377, -1271807810, 3012, -2146107392}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1113145377);
  ck_assert_int_eq(res.bits[1], -1271807810);
  ck_assert_int_eq(res.bits[2], 3012);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_994
  //                                -0.2343453
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                                -0.179005067349374615542
  //                                {{1113145334, -1271807912, 9, -2146107392}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1113145334);
  ck_assert_int_eq(res.bits[1], -1271807912);
  ck_assert_int_eq(res.bits[2], 9);
  ck_assert_int_eq(res.bits[3], -2146107392);

#test add_995
  //                                -0.2343453
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534023.0307172384464
  //                           {{1599143632, -446, 2, 851968}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1599143632);
  ck_assert_int_eq(res.bits[1], -446);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_996
  //                                -0.2343453
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                               -63.55334773533454217608892
  //                               {{-354582852, 1668237805, 344523, -2145976320}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -354582852);
  ck_assert_int_eq(res.bits[1], 1668237805);
  ck_assert_int_eq(res.bits[2], 344523);
  ck_assert_int_eq(res.bits[3], -2145976320);

#test add_997
  //                                -0.2343453
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184467.20643474518913
  //                            {{-1188433023, -5456, 0, 917504}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5456);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_998
  //                                -0.2343453
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                                -0.2343453000000
  //                                {{-1599143616, 545, 0, -2146631680}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1599143616);
  ck_assert_int_eq(res.bits[1], 545);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_999
  //                                -0.2343453
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                                -0.23434530000000
  //                                {{1188433024, 5456, 0, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433024);
  ck_assert_int_eq(res.bits[1], 5456);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1000
  //                                -0.2343453
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800451891.0656547
  //               {{-1343453, 999999, 1000000, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1343453);
  ck_assert_int_eq(res.bits[1], 999999);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], 458752);

#test add_1001
  //                                -0.2343453
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674407.5661065913
  //                        {{1951514297, 0, 1, 655360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1002
  //                                -0.2343453
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451893.8343453
  //              {{26343453, 1000000, 1000000, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 26343453);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1003
  //                                -0.2343453
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674413.5790608057
  //                        {{1951514297, 14, 1, 655360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 14);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1004
  //                                -0.2343453
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451891.5343453
  //              {{3343453, 1000000, 1000000, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3343453);
  ck_assert_int_eq(res.bits[1], 1000000);
  ck_assert_int_eq(res.bits[2], 1000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1005
  //                                -0.2343453
  // +                               0.0000000001
  //   ------------------------------------------------
  //                                -0.2343452999
  //                                {{-1951514297, 0, 0, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514297);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1006
  //                                -0.2343453
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                                -0.2343453001
  //                                {{-1951514295, 0, 0, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1007
  //                                -0.2343453
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184467.20639179551617
  //                            {{-1188433023, -5457, 0, 917504}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1188433023);
  ck_assert_int_eq(res.bits[1], -5457);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_1008
  //                                -0.2343453
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18446.509732704518913
  //                             {{1000571649, -54562, 0, 983040}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1000571649);
  ck_assert_int_eq(res.bits[1], -54562);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_1009
  //                                -0.2343453
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18446.978461959224577
  //                            {{-1000571647, 54572, 1, -2146500608}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1000571647);
  ck_assert_int_eq(res.bits[1], 54572);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1010
  //                                -0.2343453
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18446.978423304518913
  //                            {{-1000571647, 54563, 1, -2146500608}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1000571647);
  ck_assert_int_eq(res.bits[1], 54563);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1011
  //                                -0.2343453
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674408.0347971913
  //                       {{-1951514295, 1, 1, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1012
  //                                -0.2343453
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858944.3343453
  //              {{3343453, 2000000, 3000000, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3343453);
  ck_assert_int_eq(res.bits[1], 2000000);
  ck_assert_int_eq(res.bits[2], 3000000);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1013
  //                                -0.2343453
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674408.4642939211
  //                       {{-1951514293, 2, 1, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514293);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1014
  //                                -0.2343453
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023222.7375136441
  //                        {{1951514297, 1, 3, 655360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1951514297);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1015
  //                                -0.2343453
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023223.2062042441
  //                       {{-1951514295, 2, 3, -2146828288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1951514295);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1016
  //                                -0.2343453
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440823.22920741
  //                     {{23434533, 2, 1, -2146959360}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 23434533);
  ck_assert_int_eq(res.bits[1], 2);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_1017
  //                                -0.2343453
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553402.55664248589450
  //                           {{1188433034, 5458, 3, -2146566144}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1188433034);
  ck_assert_int_eq(res.bits[1], 5458);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1018
  //                                -0.2343453
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440822.76051681
  //                      {{-23434527, 1, 1, 524288}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -23434527);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_1019
  //                                -0.2343453
  // +                              10
  //   ------------------------------------------------
  //                                 9.7656547
  //                                 {{97656547, 0, 0, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 97656547);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test add_1020
  //                                -0.2343453
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456435.2343453
  //                        {{2049359261, 310727, 0, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2049359261);
  ck_assert_int_eq(res.bits[1], 310727);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1021
  //                                -0.2343453
  // +                              -0.2343453
  //   ------------------------------------------------
  //                                -0.4686906
  //                                {{4686906, 0, 0, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 4686906);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1022
  //                                -0.2343453
  // +                             127.2343
  //   ------------------------------------------------
  //                               126.9999547
  //                               {{1269999547, 0, 0, 458752}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1269999547);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test add_1023
  //                                -0.2343453
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483648.2343453
  //                       {{2343453, 5000000, 0, -2147024896}};

  es_decimal one = {{2343453, 0, 0, -2147024896}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2343453);
  ck_assert_int_eq(res.bits[1], 5000000);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1024
  //                               127.2343
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                            553529.55659718589441
  //                            {{1702460417, 2962406, 3, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962406);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_1025
  //                               127.2343
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                           -553275.08799718589441
  //                           {{-1702460415, -2962403, 2, -2146566144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460415);
  ck_assert_int_eq(res.bits[1], -2962403);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1026
  //                               127.2343
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                                71.894067778862755217375
  //                                {{-1956249633, 1654523335, 3897, 1376256}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249633);
  ck_assert_int_eq(res.bits[1], 1654523335);
  ck_assert_int_eq(res.bits[2], 3897);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_1027
  //                               127.2343
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                               127.289640232650625384458
  //                               {{-1956249590, 1654523437, 6900, 1376256}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1956249590);
  ck_assert_int_eq(res.bits[1], 1654523437);
  ck_assert_int_eq(res.bits[2], 6900);
  ck_assert_int_eq(res.bits[3], 1376256);

#test add_1028
  //                               127.2343
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                           5534150.4993625384464
  //                           {{1888232976, 296340, 3, 851968}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1888232976);
  ck_assert_int_eq(res.bits[1], 296340);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_1029
  //                               127.2343
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                                63.91529756466545782391108
  //                                {{1943503172, -2051390890, 346485, 1507328}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1943503172);
  ck_assert_int_eq(res.bits[1], -2051390890);
  ck_assert_int_eq(res.bits[2], 346485);
  ck_assert_int_eq(res.bits[3], 1507328);

#test add_1030
  //                               127.2343
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                            184594.67508004518913
  //                            {{1702460417, 2962405, 1, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962405);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_1031
  //                               127.2343
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                               127.2343000000000
  //                               {{1888232960, 296240, 0, 851968}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1888232960);
  ck_assert_int_eq(res.bits[1], 296240);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 851968);

#test add_1032
  //                               127.2343
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                               127.23430000000000
  //                               {{1702460416, 2962404, 0, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460416);
  ck_assert_int_eq(res.bits[1], 2962404);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_1033
  //                               127.2343
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674407800452018.5343
  //               {{1273343, 1000, 1000, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1273343);
  ck_assert_int_eq(res.bits[1], 1000);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], 262144);

#test add_1034
  //                               127.2343
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        1844674535.0347518913
  //                        {{1032680385, 297, 1, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 297);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1035
  //                               127.2343
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674407800451766.3657
  //              {{-1248343, 999, 1000, -2147221504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1248343);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_1036
  //                               127.2343
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        1844674541.0477061057
  //                        {{1032680385, 311, 1, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 311);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1037
  //                               127.2343
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674407800451764.0657
  //              {{-1271343, 999, 1000, -2147221504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1271343);
  ck_assert_int_eq(res.bits[1], 999);
  ck_assert_int_eq(res.bits[2], 1000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_1038
  //                               127.2343
  // +                               0.0000000001
  //   ------------------------------------------------
  //                               127.2343000001
  //                               {{1032680385, 296, 0, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1039
  //                               127.2343
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                               127.2342999999
  //                               {{1032680383, 296, 0, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680383);
  ck_assert_int_eq(res.bits[1], 296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1040
  //                               127.2343
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                            184594.67503709551617
  //                            {{1702460417, 2962404, 1, 917504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1702460417);
  ck_assert_int_eq(res.bits[1], 2962404);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 917504);

#test add_1041
  //                               127.2343
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                             18573.978378004518913
  //                             {{-155265023, 29624044, 1, 983040}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -155265023);
  ck_assert_int_eq(res.bits[1], 29624044);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 983040);

#test add_1042
  //                               127.2343
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                            -18319.509816659224577
  //                            {{155265025, -29624034, 0, -2146500608}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 155265025);
  ck_assert_int_eq(res.bits[1], -29624034);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1043
  //                               127.2343
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                            -18319.509778004518913
  //                            {{155265025, -29624043, 0, -2146500608}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 155265025);
  ck_assert_int_eq(res.bits[1], -29624043);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1044
  //                               127.2343
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -1844674280.5661518913
  //                       {{-1032680383, -296, 0, -2146828288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -296);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1045
  //                               127.2343
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023222971858816.8657
  //              {{-1271343, 1999, 3000, -2147221504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1271343);
  ck_assert_int_eq(res.bits[1], 1999);
  ck_assert_int_eq(res.bits[2], 3000);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_1046
  //                               127.2343
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -1844674280.9956486211
  //                       {{-1032680381, -295, 0, -2146828288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680381);
  ck_assert_int_eq(res.bits[1], -295);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1047
  //                               127.2343
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        5534023350.2061589441
  //                        {{1032680385, 298, 3, 655360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1032680385);
  ck_assert_int_eq(res.bits[1], 298);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1048
  //                               127.2343
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -5534023095.7375589441
  //                       {{-1032680383, -295, 2, -2146828288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1032680383);
  ck_assert_int_eq(res.bits[1], -295);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1049
  //                               127.2343
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -184467440695.76056211
  //                     {{161471891, -1, 0, -2146959360}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 161471891);
  ck_assert_int_eq(res.bits[1], -1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_1050
  //                               127.2343
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                           -553275.08799718589450
  //                           {{-1702460406, -2962403, 2, -2146566144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1702460406);
  ck_assert_int_eq(res.bits[1], -2962403);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1051
  //                               127.2343
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      184467440950.22916211
  //                      {{-161471885, 4, 1, 524288}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -161471885);
  ck_assert_int_eq(res.bits[1], 4);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_1052
  //                               127.2343
  // +                              10
  //   ------------------------------------------------
  //                               137.2343
  //                               {{1372343, 0, 0, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1372343);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test add_1053
  //                               127.2343
  // +                      -133456435
  //   ------------------------------------------------
  //                        -133456307.7657
  //                        {{-1171751399, 310, 0, -2147221504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1171751399);
  ck_assert_int_eq(res.bits[1], 310);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_1054
  //                               127.2343
  // +                              -0.2343453
  //   ------------------------------------------------
  //                               126.9999547
  //                               {{1269999547, 0, 0, 458752}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1269999547);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 458752);

#test add_1055
  //                               127.2343
  // +                             127.2343
  //   ------------------------------------------------
  //                               254.4686
  //                               {{2544686, 0, 0, 262144}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2544686);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 262144);

#test add_1056
  //                               127.2343
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -2147483520.7657
  //                       {{-1272343, 4999, 0, -2147221504}};

  es_decimal one = {{1272343, 0, 0, 262144}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1272343);
  ck_assert_int_eq(res.bits[1], 4999);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_1057
  //                       -2147483648
  // +                          553402.32229718589441
  //   ------------------------------------------------
  //                       -2146930245.67770281410559
  //                       {{-1, -2009260035, 11638, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260035);
  ck_assert_int_eq(res.bits[2], 11638);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1058
  //                       -2147483648
  // +                         -553402.32229718589441
  //   ------------------------------------------------
  //                       -2148037050.32229718589441
  //                       {{1, -2009260030, 11644, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -2009260030);
  ck_assert_int_eq(res.bits[2], 11644);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1059
  //                       -2147483648
  // +                             -55.340232221137244782625
  //   ------------------------------------------------
  //                       -2147483703.3402322211372447826
  //                       {{85899346, 1156841472, 1164153248, -2146238464}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{33, 2, 3000, -2146107392}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 85899346);
  ck_assert_int_eq(res.bits[1], 1156841472);
  ck_assert_int_eq(res.bits[2], 1164153248);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_1060
  //                       -2147483648
  // +                               0.055340232650625384458
  //   ------------------------------------------------
  //                       -2147483647.9446597673493746155
  //                       {{515396075, 1027992452, 1164153218, -2146238464}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{10, 100, 3, 1376256}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 515396075);
  ck_assert_int_eq(res.bits[1], 1027992452);
  ck_assert_int_eq(res.bits[2], 1164153218);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_1061
  //                       -2147483648
  // +                         5534023.2650625384464
  //   ------------------------------------------------
  //                       -2141949624.7349374615536
  //                       {{-16, 658067355, 1161, -2146631680}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{16, 100, 3, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -16);
  ck_assert_int_eq(res.bits[1], 658067355);
  ck_assert_int_eq(res.bits[2], 1161);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_1062
  //                       -2147483648
  // +                             -63.31900243533454217608892
  //   ------------------------------------------------
  //                       -2147483711.3190024353345421761
  //                       {{1712832961, -1740972963, 1164153252, -2146238464}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{32444, 100, 343253, -2145976320}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1712832961);
  ck_assert_int_eq(res.bits[1], -1740972963);
  ck_assert_int_eq(res.bits[2], 1164153252);
  ck_assert_int_eq(res.bits[3], -2146238464);

#test add_1063
  //                       -2147483648
  // +                          184467.44078004518913
  //   ------------------------------------------------
  //                       -2147299180.55921995481087
  //                       {{-1, -2009260034, 11640, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260034);
  ck_assert_int_eq(res.bits[2], 11640);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1064
  //                       -2147483648
  // +                               0.0000000000000
  //   ------------------------------------------------
  //                       -2147483648.0000000000000
  //                       {{0, 658067456, 1164, -2146631680}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 851968}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 658067456);
  ck_assert_int_eq(res.bits[2], 1164);
  ck_assert_int_eq(res.bits[3], -2146631680);

#test add_1065
  //                       -2147483648
  // +                               0.00000000000000
  //   ------------------------------------------------
  //                       -2147483648.00000000000000
  //                       {{0, -2009260032, 11641, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{0, 0, 0, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], -2009260032);
  ck_assert_int_eq(res.bits[2], 11641);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1066
  //                       -2147483648
  // +             1844674407800451891.3
  //   ------------------------------------------------
  //               1844674405652968243.3
  //               {{1, -4, 0, 65536}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 65536}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -4);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 65536);

#test add_1067
  //                       -2147483648
  // +                      1844674407.8004518913
  //   ------------------------------------------------
  //                        -302809240.1995481087
  //                        {{-1, 705032702, 0, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032702);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1068
  //                       -2147483648
  // +            -1844674407800451893.6
  //   ------------------------------------------------
  //              -1844674409947935541.6
  //              {{24, 6, 1, -2147418112}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{24, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 24);
  ck_assert_int_eq(res.bits[1], 6);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_1069
  //                       -2147483648
  // +                      1844674413.8134061057
  //   ------------------------------------------------
  //                        -302809234.1865938943
  //                        {{-1, 705032688, 0, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 15, 1, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032688);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1070
  //                       -2147483648
  // +            -1844674407800451891.3
  //   ------------------------------------------------
  //              -1844674409947935539.3
  //              {{1, 6, 1, -2147418112}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 6);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_1071
  //                       -2147483648
  // +                               0.0000000001
  //   ------------------------------------------------
  //                       -2147483647.9999999999
  //                       {{-1, 705032703, 1, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 705032703);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1072
  //                       -2147483648
  // +                              -0.0000000001
  //   ------------------------------------------------
  //                       -2147483648.0000000001
  //                       {{1, 705032704, 1, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 0, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032704);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1073
  //                       -2147483648
  // +                          184467.44073709551617
  //   ------------------------------------------------
  //                       -2147299180.55926290448383
  //                       {{-1, -2009260033, 11640, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 0, 1, 917504}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], -2009260033);
  ck_assert_int_eq(res.bits[2], 11640);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1074
  //                       -2147483648
  // +                           18446.744078004518913
  //   ------------------------------------------------
  //                       -2147465201.255921995481087
  //                       {{-1, 1382236158, 116414, -2146500608}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, 983040}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1);
  ck_assert_int_eq(res.bits[1], 1382236158);
  ck_assert_int_eq(res.bits[2], 116414);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1075
  //                       -2147483648
  // +                          -18446.744116659224577
  //   ------------------------------------------------
  //                       -2147502094.744116659224577
  //                       {{1, 1382236170, 116416, -2146500608}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 10, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1382236170);
  ck_assert_int_eq(res.bits[2], 116416);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1076
  //                       -2147483648
  // +                          -18446.744078004518913
  //   ------------------------------------------------
  //                       -2147502094.744078004518913
  //                       {{1, 1382236161, 116416, -2146500608}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146500608}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 1382236161);
  ck_assert_int_eq(res.bits[2], 116416);
  ck_assert_int_eq(res.bits[3], -2146500608);

#test add_1077
  //                       -2147483648
  // +                     -1844674407.8004518913
  //   ------------------------------------------------
  //                       -3992158055.8004518913
  //                       {{1, 705032705, 2, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 1, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032705);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1078
  //                       -2147483648
  // +            -5534023222971858944.1
  //   ------------------------------------------------
  //              -5534023225119342592.1
  //              {{1, 7, 3, -2147418112}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2147418112}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 7);
  ck_assert_int_eq(res.bits[2], 3);
  ck_assert_int_eq(res.bits[3], -2147418112);

#test add_1079
  //                       -2147483648
  // +                     -1844674408.2299486211
  //   ------------------------------------------------
  //                       -3992158056.2299486211
  //                       {{3, 705032706, 2, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], 705032706);
  ck_assert_int_eq(res.bits[2], 2);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1080
  //                       -2147483648
  // +                      5534023222.9718589441
  //   ------------------------------------------------
  //                        3386539574.9718589441
  //                        {{1, -705032702, 1, 655360}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, 655360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], -705032702);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], 655360);

#test add_1081
  //                       -2147483648
  // +                     -5534023222.9718589441
  //   ------------------------------------------------
  //                       -7681506870.9718589441
  //                       {{1, 705032706, 4, -2146828288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1, 2, 3, -2146828288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 1);
  ck_assert_int_eq(res.bits[1], 705032706);
  ck_assert_int_eq(res.bits[2], 4);
  ck_assert_int_eq(res.bits[3], -2146828288);

#test add_1082
  //                       -2147483648
  // +                   -184467440822.99486211
  //   ------------------------------------------------
  //                     -186614924470.99486211
  //                     {{3, 50000002, 1, -2146959360}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, -2146959360}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], 50000002);
  ck_assert_int_eq(res.bits[2], 1);
  ck_assert_int_eq(res.bits[3], -2146959360);

#test add_1083
  //                       -2147483648
  // +                         -553402.32229718589450
  //   ------------------------------------------------
  //                       -2148037050.32229718589450
  //                       {{10, -2009260030, 11644, -2146566144}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{10, 2, 3, -2146566144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 10);
  ck_assert_int_eq(res.bits[1], -2009260030);
  ck_assert_int_eq(res.bits[2], 11644);
  ck_assert_int_eq(res.bits[3], -2146566144);

#test add_1084
  //                       -2147483648
  // +                    184467440822.99486211
  //   ------------------------------------------------
  //                      182319957174.99486211
  //                      {{3, -49999998, 0, 524288}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{3, 2, 1, 524288}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 3);
  ck_assert_int_eq(res.bits[1], -49999998);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], 524288);

#test add_1085
  //                       -2147483648
  // +                              10
  //   ------------------------------------------------
  //                       -2147483638
  //                       {{2147483638, 0, 0, -2147483648}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{10, 0, 0, 0}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2147483638);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_1086
  //                       -2147483648
  // +                      -133456435
  //   ------------------------------------------------
  //                       -2280940083
  //                       {{-2014027213, 0, 0, -2147483648}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{133456435, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -2014027213);
  ck_assert_int_eq(res.bits[1], 0);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

#test add_1087
  //                       -2147483648
  // +                              -0.2343453
  //   ------------------------------------------------
  //                       -2147483648.2343453
  //                       {{2343453, 5000000, 0, -2147024896}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{2343453, 0, 0, -2147024896}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 2343453);
  ck_assert_int_eq(res.bits[1], 5000000);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147024896);

#test add_1088
  //                       -2147483648
  // +                             127.2343
  //   ------------------------------------------------
  //                       -2147483520.7657
  //                       {{-1272343, 4999, 0, -2147221504}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{1272343, 0, 0, 262144}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], -1272343);
  ck_assert_int_eq(res.bits[1], 4999);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147221504);

#test add_1089
  //                       -2147483648
  // +                     -2147483648
  //   ------------------------------------------------
  //                       -4294967296
  //                       {{0, 1, 0, -2147483648}};

  es_decimal one = {{-2147483648, 0, 0, -2147483648}};
  es_decimal two = {{-2147483648, 0, 0, -2147483648}};
  es_decimal res = {{0, 0, 0, 0}};
  ck_assert_int_eq(es_add(one, two, &res), 0);
  ck_assert_int_eq(res.bits[0], 0);
  ck_assert_int_eq(res.bits[1], 1);
  ck_assert_int_eq(res.bits[2], 0);
  ck_assert_int_eq(res.bits[3], -2147483648);

